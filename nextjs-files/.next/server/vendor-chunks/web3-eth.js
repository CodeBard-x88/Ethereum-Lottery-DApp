"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth";
exports.ids = ["vendor-chunks/web3-eth"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_EVENTS: () => (/* binding */ ALL_EVENTS),\n/* harmony export */   ALL_EVENTS_ABI: () => (/* binding */ ALL_EVENTS_ABI),\n/* harmony export */   NUMBER_DATA_FORMAT: () => (/* binding */ NUMBER_DATA_FORMAT)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \nconst ALL_EVENTS = \"ALLEVENTS\";\nconst ALL_EVENTS_ABI = {\n    name: ALL_EVENTS,\n    signature: \"\",\n    type: \"event\",\n    inputs: []\n};\nconst NUMBER_DATA_FORMAT = {\n    bytes: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_BYTES.HEX,\n    number: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_NUMBER.NUMBER\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNtRDtBQUM1QyxNQUFNRSxhQUFhLFlBQVk7QUFDL0IsTUFBTUMsaUJBQWlCO0lBQzFCQyxNQUFNRjtJQUNORyxXQUFXO0lBQ1hDLE1BQU07SUFDTkMsUUFBUSxFQUFFO0FBQ2QsRUFBRTtBQUNLLE1BQU1DLHFCQUFxQjtJQUFFQyxPQUFPVCxpREFBU0EsQ0FBQ1UsR0FBRztJQUFFQyxRQUFRVixrREFBVUEsQ0FBQ1csTUFBTTtBQUFDLEVBQUUsQ0FDdEYscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vY29uc3RhbnRzLmpzPzY1ZjciXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBGTVRfQllURVMsIEZNVF9OVU1CRVIgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmV4cG9ydCBjb25zdCBBTExfRVZFTlRTID0gJ0FMTEVWRU5UUyc7XG5leHBvcnQgY29uc3QgQUxMX0VWRU5UU19BQkkgPSB7XG4gICAgbmFtZTogQUxMX0VWRU5UUyxcbiAgICBzaWduYXR1cmU6ICcnLFxuICAgIHR5cGU6ICdldmVudCcsXG4gICAgaW5wdXRzOiBbXSxcbn07XG5leHBvcnQgY29uc3QgTlVNQkVSX0RBVEFfRk9STUFUID0geyBieXRlczogRk1UX0JZVEVTLkhFWCwgbnVtYmVyOiBGTVRfTlVNQkVSLk5VTUJFUiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJGTVRfQllURVMiLCJGTVRfTlVNQkVSIiwiQUxMX0VWRU5UUyIsIkFMTF9FVkVOVFNfQUJJIiwibmFtZSIsInNpZ25hdHVyZSIsInR5cGUiLCJpbnB1dHMiLCJOVU1CRVJfREFUQV9GT1JNQVQiLCJieXRlcyIsIkhFWCIsIm51bWJlciIsIk5VTUJFUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_EVENTS: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS),\n/* harmony export */   ALL_EVENTS_ABI: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS_ABI),\n/* harmony export */   LogsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.LogsSubscription),\n/* harmony export */   NUMBER_DATA_FORMAT: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.NUMBER_DATA_FORMAT),\n/* harmony export */   NewHeadsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewHeadsSubscription),\n/* harmony export */   NewPendingTransactionsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewPendingTransactionsSubscription),\n/* harmony export */   SignatureObjectSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.SignatureObjectSchema),\n/* harmony export */   SyncingSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.SyncingSubscription),\n/* harmony export */   Web3Eth: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth),\n/* harmony export */   accessListItemSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListItemSchema),\n/* harmony export */   accessListResultSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListResultSchema),\n/* harmony export */   accessListSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListSchema),\n/* harmony export */   accountSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accountSchema),\n/* harmony export */   blockHeaderSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockHeaderSchema),\n/* harmony export */   blockSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockSchema),\n/* harmony export */   call: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.call),\n/* harmony export */   chainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.chainSchema),\n/* harmony export */   createAccessList: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.createAccessList),\n/* harmony export */   customChainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.customChainSchema),\n/* harmony export */   decodeEventABI: () => (/* reexport safe */ _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__.decodeEventABI),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   detectTransactionType: () => (/* reexport safe */ _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__.detectTransactionType),\n/* harmony export */   estimateGas: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas),\n/* harmony export */   feeHistorySchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.feeHistorySchema),\n/* harmony export */   formatTransaction: () => (/* reexport safe */ _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__.formatTransaction),\n/* harmony export */   getBalance: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBalance),\n/* harmony export */   getBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlock),\n/* harmony export */   getBlockNumber: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockNumber),\n/* harmony export */   getBlockTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockTransactionCount),\n/* harmony export */   getBlockUncleCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockUncleCount),\n/* harmony export */   getChainId: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId),\n/* harmony export */   getCode: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCode),\n/* harmony export */   getCoinbase: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCoinbase),\n/* harmony export */   getFeeHistory: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getFeeHistory),\n/* harmony export */   getGasPrice: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getGasPrice),\n/* harmony export */   getHashRate: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getHashRate),\n/* harmony export */   getLogs: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getLogs),\n/* harmony export */   getPendingTransactions: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getPendingTransactions),\n/* harmony export */   getProof: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProof),\n/* harmony export */   getProtocolVersion: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProtocolVersion),\n/* harmony export */   getStorageAt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getStorageAt),\n/* harmony export */   getTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransaction),\n/* harmony export */   getTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount),\n/* harmony export */   getTransactionFromBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionFromBlock),\n/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionReceipt),\n/* harmony export */   getUncle: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getUncle),\n/* harmony export */   hardforkSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.hardforkSchema),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),\n/* harmony export */   isAccessListEntry: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListEntry),\n/* harmony export */   isBaseTransaction: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isBaseTransaction),\n/* harmony export */   isMining: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isMining),\n/* harmony export */   isSyncing: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isSyncing),\n/* harmony export */   isTransaction1559Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction1559Unsigned),\n/* harmony export */   isTransaction2930Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction2930Unsigned),\n/* harmony export */   isTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionCall),\n/* harmony export */   isTransactionLegacyUnsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionLegacyUnsigned),\n/* harmony export */   isTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionWithSender),\n/* harmony export */   logSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema),\n/* harmony export */   prepareTransactionForSigning: () => (/* reexport safe */ _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__.prepareTransactionForSigning),\n/* harmony export */   registeredSubscriptions: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.registeredSubscriptions),\n/* harmony export */   sendSignedTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendSignedTransaction),\n/* harmony export */   sendTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendTransaction),\n/* harmony export */   sign: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sign),\n/* harmony export */   signTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTransaction),\n/* harmony export */   signTypedData: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTypedData),\n/* harmony export */   storageProofSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.storageProofSchema),\n/* harmony export */   syncSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.syncSchema),\n/* harmony export */   transactionBuilder: () => (/* reexport safe */ _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__.transactionBuilder),\n/* harmony export */   transactionInfoSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionInfoSchema),\n/* harmony export */   transactionReceiptSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema),\n/* harmony export */   transactionSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionSchema),\n/* harmony export */   validateBaseChain: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateBaseChain),\n/* harmony export */   validateChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateChainInfo),\n/* harmony export */   validateCustomChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateCustomChainInfo),\n/* harmony export */   validateFeeMarketGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateFeeMarketGas),\n/* harmony export */   validateGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateGas),\n/* harmony export */   validateHardfork: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateHardfork),\n/* harmony export */   validateLegacyGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateLegacyGas),\n/* harmony export */   validateTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionCall),\n/* harmony export */   validateTransactionForSigning: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionForSigning),\n/* harmony export */   validateTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionWithSender),\n/* harmony export */   withdrawalsSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.withdrawalsSchema)\n/* harmony export */ });\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! setimmediate */ \"(ssr)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\n/* harmony import */ var _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eth.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js\");\n/* harmony import */ var _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/decoding.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/types.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/validation.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/prepare_transaction_for_signing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js\");\n/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_subscriptions.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\");\n/* harmony import */ var _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * The `web3-eth` package allows you to interact with an Ethereum blockchain and Ethereum smart contracts.\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { Web3Context } from 'web3-core';\n * import { BlockTags } from 'web3-types';\n * import { DEFAULT_RETURN_FORMAT } from 'web3-types';\n * import { getBalance} from 'web3-eth';\n *\n * getBalance(\n *      new Web3Context('http://127.0.0.1:8545'),\n *      '0x407d73d8a49eeb85d32cf465507dd71d507100c1',\n *      BlockTags.LATEST,\n *      DEFAULT_RETURN_FORMAT\n * ).then(console.log);\n * > 1000000000000n\n * ```\n *\n * To use this package within the `web3` object use:\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * web3.eth.getBalance('0x407d73d8a49eeb85d32cf465507dd71d507100c1').then(console.log);\n * > 1000000000000n\n *```\n *\n * With `web3-eth` you can also subscribe (if supported by provider) to events in the Ethereum Blockchain, using the `subscribe` function. See more at the {@link Web3Eth.subscribe} function.\n */ /**\n *\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTZCQyxHQUNEOztDQUVDLEdBQ3FCO0FBQ2tCO0FBQ1Y7QUFDTTtBQUNQO0FBQ0U7QUFDSjtBQUNLO0FBQ1M7QUFDSztBQUNhO0FBQ25CO0FBQ21DO0FBQ1A7QUFDcEUsaUVBQWVBLGlEQUFPQSxFQUFDLENBQ3ZCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL2luZGV4LmpzPzljNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIFRoZSBgd2ViMy1ldGhgIHBhY2thZ2UgYWxsb3dzIHlvdSB0byBpbnRlcmFjdCB3aXRoIGFuIEV0aGVyZXVtIGJsb2NrY2hhaW4gYW5kIEV0aGVyZXVtIHNtYXJ0IGNvbnRyYWN0cy5cbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHN0YW5kYWxvbmUgYW5kIHVzZSBpdHMgbWV0aG9kcyB1c2U6XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgV2ViM0NvbnRleHQgfSBmcm9tICd3ZWIzLWNvcmUnO1xuICogaW1wb3J0IHsgQmxvY2tUYWdzIH0gZnJvbSAnd2ViMy10eXBlcyc7XG4gKiBpbXBvcnQgeyBERUZBVUxUX1JFVFVSTl9GT1JNQVQgfSBmcm9tICd3ZWIzLXR5cGVzJztcbiAqIGltcG9ydCB7IGdldEJhbGFuY2V9IGZyb20gJ3dlYjMtZXRoJztcbiAqXG4gKiBnZXRCYWxhbmNlKFxuICogICAgICBuZXcgV2ViM0NvbnRleHQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODU0NScpLFxuICogICAgICAnMHg0MDdkNzNkOGE0OWVlYjg1ZDMyY2Y0NjU1MDdkZDcxZDUwNzEwMGMxJyxcbiAqICAgICAgQmxvY2tUYWdzLkxBVEVTVCxcbiAqICAgICAgREVGQVVMVF9SRVRVUk5fRk9STUFUXG4gKiApLnRoZW4oY29uc29sZS5sb2cpO1xuICogPiAxMDAwMDAwMDAwMDAwblxuICogYGBgXG4gKlxuICogVG8gdXNlIHRoaXMgcGFja2FnZSB3aXRoaW4gdGhlIGB3ZWIzYCBvYmplY3QgdXNlOlxuICogYGBgdHNcbiAqIGltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xuICpcbiAqIGNvbnN0IHdlYjMgPSBuZXcgV2ViMyhXZWIzLmdpdmVuUHJvdmlkZXIgfHwgJ3dzOi8vc29tZS5sb2NhbC1vci1yZW1vdGUubm9kZTo4NTQ2Jyk7XG4gKiB3ZWIzLmV0aC5nZXRCYWxhbmNlKCcweDQwN2Q3M2Q4YTQ5ZWViODVkMzJjZjQ2NTUwN2RkNzFkNTA3MTAwYzEnKS50aGVuKGNvbnNvbGUubG9nKTtcbiAqID4gMTAwMDAwMDAwMDAwMG5cbiAqYGBgXG4gKlxuICogV2l0aCBgd2ViMy1ldGhgIHlvdSBjYW4gYWxzbyBzdWJzY3JpYmUgKGlmIHN1cHBvcnRlZCBieSBwcm92aWRlcikgdG8gZXZlbnRzIGluIHRoZSBFdGhlcmV1bSBCbG9ja2NoYWluLCB1c2luZyB0aGUgYHN1YnNjcmliZWAgZnVuY3Rpb24uIFNlZSBtb3JlIGF0IHRoZSB7QGxpbmsgV2ViM0V0aC5zdWJzY3JpYmV9IGZ1bmN0aW9uLlxuICovXG4vKipcbiAqXG4gKi9cbmltcG9ydCAnc2V0aW1tZWRpYXRlJztcbmltcG9ydCB7IFdlYjNFdGggfSBmcm9tICcuL3dlYjNfZXRoLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViM19ldGguanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9kZWNvZGluZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3NjaGVtYXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9ycGNfbWV0aG9kX3dyYXBwZXJzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvZm9ybWF0X3RyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvcHJlcGFyZV90cmFuc2FjdGlvbl9mb3Jfc2lnbmluZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjNfc3Vic2NyaXB0aW9ucy5qcyc7XG5leHBvcnQgeyBkZXRlY3RUcmFuc2FjdGlvblR5cGUgfSBmcm9tICcuL3V0aWxzL2RldGVjdF90cmFuc2FjdGlvbl90eXBlLmpzJztcbmV4cG9ydCB7IHRyYW5zYWN0aW9uQnVpbGRlciB9IGZyb20gJy4vdXRpbHMvdHJhbnNhY3Rpb25fYnVpbGRlci5qcyc7XG5leHBvcnQgZGVmYXVsdCBXZWIzRXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIldlYjNFdGgiLCJkZXRlY3RUcmFuc2FjdGlvblR5cGUiLCJ0cmFuc2FjdGlvbkJ1aWxkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   call: () => (/* binding */ call),\n/* harmony export */   createAccessList: () => (/* binding */ createAccessList),\n/* harmony export */   estimateGas: () => (/* binding */ estimateGas),\n/* harmony export */   getBalance: () => (/* binding */ getBalance),\n/* harmony export */   getBlock: () => (/* binding */ getBlock),\n/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber),\n/* harmony export */   getBlockTransactionCount: () => (/* binding */ getBlockTransactionCount),\n/* harmony export */   getBlockUncleCount: () => (/* binding */ getBlockUncleCount),\n/* harmony export */   getChainId: () => (/* binding */ getChainId),\n/* harmony export */   getCode: () => (/* binding */ getCode),\n/* harmony export */   getCoinbase: () => (/* binding */ getCoinbase),\n/* harmony export */   getFeeHistory: () => (/* binding */ getFeeHistory),\n/* harmony export */   getGasPrice: () => (/* binding */ getGasPrice),\n/* harmony export */   getHashRate: () => (/* binding */ getHashRate),\n/* harmony export */   getLogs: () => (/* binding */ getLogs),\n/* harmony export */   getPendingTransactions: () => (/* binding */ getPendingTransactions),\n/* harmony export */   getProof: () => (/* binding */ getProof),\n/* harmony export */   getProtocolVersion: () => (/* binding */ getProtocolVersion),\n/* harmony export */   getStorageAt: () => (/* binding */ getStorageAt),\n/* harmony export */   getTransaction: () => (/* binding */ getTransaction),\n/* harmony export */   getTransactionCount: () => (/* binding */ getTransactionCount),\n/* harmony export */   getTransactionFromBlock: () => (/* binding */ getTransactionFromBlock),\n/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt),\n/* harmony export */   getUncle: () => (/* binding */ getUncle),\n/* harmony export */   isMining: () => (/* binding */ isMining),\n/* harmony export */   isSyncing: () => (/* binding */ isSyncing),\n/* harmony export */   sendSignedTransaction: () => (/* binding */ sendSignedTransaction),\n/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signTransaction: () => (/* binding */ signTransaction),\n/* harmony export */   signTypedData: () => (/* binding */ signTypedData)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/decode_signed_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/try_send_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\");\n/* harmony import */ var _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/wait_for_transaction_receipt.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/send_tx_helper.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */ \n\n\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n/**\n * View additional documentations here: {@link Web3Eth.getProtocolVersion}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ const getProtocolVersion = (web3Context)=>__awaiter(void 0, void 0, void 0, function*() {\n        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProtocolVersion(web3Context.requestManager);\n    });\n// TODO Add returnFormat parameter\n/**\n * View additional documentations here: {@link Web3Eth.isSyncing}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ const isSyncing = (web3Context)=>__awaiter(void 0, void 0, void 0, function*() {\n        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getSyncing(web3Context.requestManager);\n    });\n// TODO consider adding returnFormat parameter (to format address as bytes)\n/**\n * View additional documentations here: {@link Web3Eth.getCoinbase}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ const getCoinbase = (web3Context)=>__awaiter(void 0, void 0, void 0, function*() {\n        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCoinbase(web3Context.requestManager);\n    });\n/**\n * View additional documentations here: {@link Web3Eth.isMining}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ const isMining = (web3Context)=>__awaiter(void 0, void 0, void 0, function*() {\n        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getMining(web3Context.requestManager);\n    });\n/**\n * View additional documentations here: {@link Web3Eth.getHashRate}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getHashRate(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getHashRate(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getGasPrice}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getGasPrice(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getGasPrice(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockNumber}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getBlockNumber(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockNumber(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBalance}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getBalance(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBalance(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getStorageAt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getStorageAt(web3Context, address, storageSlot, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const storageSlotFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, storageSlot, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getStorageAt(web3Context.requestManager, address, storageSlotFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getCode}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getCode(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCode(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getBlock(web3Context, block = web3Context.defaultBlock, hydrated = false, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes32\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByHash(web3Context.requestManager, blockHashFormatted, hydrated);\n        } else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block) ? block : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, blockNumberFormatted, hydrated);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getBlockTransactionCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes32\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByHash(web3Context.requestManager, blockHashFormatted);\n        } else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block) ? block : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockUncleCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getBlockUncleCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes32\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockHash(web3Context.requestManager, blockHashFormatted);\n        } else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block) ? block : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getUncle}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getUncle(web3Context, block = web3Context.defaultBlock, uncleIndex, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const uncleIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, uncleIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes32\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, uncleIndexFormatted);\n        } else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block) ? block : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, uncleIndexFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getTransaction(web3Context, transactionHash, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes32\"\n        }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByHash(web3Context.requestManager, transactionHashFormatted);\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response) ? response : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat, {\n            fillInputAndData: true\n        });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getPendingTransactions}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getPendingTransactions(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getPendingTransactions(web3Context.requestManager);\n        return response.map((transaction)=>(0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, returnFormat, {\n                fillInputAndData: true\n            }));\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getTransactionFromBlock(web3Context, block = web3Context.defaultBlock, transactionIndex, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const transactionIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, transactionIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes32\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, transactionIndexFormatted);\n        } else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block) ? block : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, transactionIndexFormatted);\n        }\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response) ? response : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat, {\n            fillInputAndData: true\n        });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionReceipt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getTransactionReceipt(web3Context, transactionHash, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes32\"\n        }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionReceipt(web3Context.requestManager, transactionHashFormatted);\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response) ? response : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getTransactionCount(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionCount(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function sendTransaction(web3Context, transaction, returnFormat, options = {\n    checkRevertBeforeSending: true\n}) {\n    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject)=>{\n        setImmediate(()=>{\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({\n                        web3Context,\n                        promiEvent,\n                        options,\n                        returnFormat\n                    });\n                    let transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(Object.assign(Object.assign({}, transaction), {\n                        from: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)(\"from\", web3Context, transaction),\n                        to: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)(\"to\", web3Context, transaction)\n                    }), web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n                    try {\n                        transactionFormatted = yield sendTxHelper.populateGasPrice({\n                            transaction,\n                            transactionFormatted\n                        });\n                        yield sendTxHelper.checkRevertBeforeSending(transactionFormatted);\n                        sendTxHelper.emitSending(transactionFormatted);\n                        let wallet;\n                        if (web3Context.wallet && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(transactionFormatted.from)) {\n                            wallet = web3Context.wallet.get(transactionFormatted.from);\n                        }\n                        const transactionHash = yield sendTxHelper.signAndSend({\n                            wallet,\n                            tx: transactionFormatted\n                        });\n                        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                            format: \"bytes32\"\n                        }, transactionHash, returnFormat);\n                        sendTxHelper.emitSent(transactionFormatted);\n                        sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                        const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat);\n                        const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat));\n                        sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                        resolve((yield sendTxHelper.handleResolve({\n                            receipt: transactionReceiptFormatted,\n                            tx: transactionFormatted\n                        })));\n                        sendTxHelper.emitConfirmation({\n                            receipt: transactionReceiptFormatted,\n                            transactionHash\n                        });\n                    } catch (error) {\n                        reject((yield sendTxHelper.handleError({\n                            error,\n                            tx: transactionFormatted\n                        })));\n                    }\n                }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendSignedTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function sendSignedTransaction(web3Context, signedTransaction, returnFormat, options = {\n    checkRevertBeforeSending: true\n}) {\n    // TODO - Promise returned in function argument where a void return was expected\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject)=>{\n        setImmediate(()=>{\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({\n                        web3Context,\n                        promiEvent,\n                        options,\n                        returnFormat\n                    });\n                    // Formatting signedTransaction to be send to RPC endpoint\n                    const signedTransactionFormattedHex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                        format: \"bytes\"\n                    }, signedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n                    const unSerializedTransaction = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToUint8Array)((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(signedTransactionFormattedHex)));\n                    const unSerializedTransactionWithFrom = Object.assign(Object.assign({}, unSerializedTransaction.toJSON()), {\n                        // Some providers will default `from` to address(0) causing the error\n                        // reported from `eth_call` to not be the reason the user's tx failed\n                        // e.g. `eth_call` will return an Out of Gas error for a failed\n                        // smart contract execution contract, because the sender, address(0),\n                        // has no balance to pay for the gas of the transaction execution\n                        from: unSerializedTransaction.getSenderAddress().toString()\n                    });\n                    try {\n                        const { v, r, s } = unSerializedTransactionWithFrom, txWithoutSigParams = __rest(unSerializedTransactionWithFrom, [\n                            \"v\",\n                            \"r\",\n                            \"s\"\n                        ]);\n                        yield sendTxHelper.checkRevertBeforeSending(txWithoutSigParams);\n                        sendTxHelper.emitSending(signedTransactionFormattedHex);\n                        const transactionHash = yield (0,_utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__.trySendTransaction)(web3Context, ()=>__awaiter(this, void 0, void 0, function*() {\n                                return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sendRawTransaction(web3Context.requestManager, signedTransactionFormattedHex);\n                            }));\n                        sendTxHelper.emitSent(signedTransactionFormattedHex);\n                        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                            format: \"bytes32\"\n                        }, transactionHash, returnFormat);\n                        sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                        const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat);\n                        const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat));\n                        sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                        resolve((yield sendTxHelper.handleResolve({\n                            receipt: transactionReceiptFormatted,\n                            tx: unSerializedTransactionWithFrom\n                        })));\n                        sendTxHelper.emitConfirmation({\n                            receipt: transactionReceiptFormatted,\n                            transactionHash\n                        });\n                    } catch (error) {\n                        reject((yield sendTxHelper.handleError({\n                            error,\n                            tx: unSerializedTransactionWithFrom\n                        })));\n                    }\n                }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sign}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function sign(web3Context, message, addressOrIndex, returnFormat) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function*() {\n        const messageFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, message, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        if ((_a = web3Context.wallet) === null || _a === void 0 ? void 0 : _a.get(addressOrIndex)) {\n            const wallet = web3Context.wallet.get(addressOrIndex);\n            const signed = wallet.sign(messageFormatted);\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.SignatureObjectSchema, signed, returnFormat);\n        }\n        if (typeof addressOrIndex === \"number\") {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_5__.SignatureError(message, 'RPC method \"eth_sign\" does not support index signatures');\n        }\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sign(web3Context.requestManager, addressOrIndex, messageFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function signTransaction(web3Context, transaction, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTransaction(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));\n        // Some clients only return the encoded signed transaction (e.g. Ganache)\n        // while clients such as Geth return the desired SignedTransactionInfoAPI object\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isString)(response) ? (0,_utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__.decodeSignedTransaction)(response, returnFormat, {\n            fillInputAndData: true\n        }) : {\n            raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes\"\n            }, response.raw, returnFormat),\n            tx: (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response.tx, returnFormat, {\n                fillInputAndData: true\n            })\n        };\n    });\n}\n// TODO Decide what to do with transaction.to\n// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n/**\n * View additional documentations here: {@link Web3Eth.call}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function call(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.call(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT), blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, response, returnFormat);\n    });\n}\n// TODO - Investigate whether response is padded as 1.x docs suggest\n/**\n * View additional documentations here: {@link Web3Eth.estimateGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function estimateGas(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.estimateGas(web3Context.requestManager, transactionFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, response, returnFormat);\n    });\n}\n// TODO - Add input formatting to filter\n/**\n * View additional documentations here: {@link Web3Eth.getPastLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getLogs(web3Context, filter, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        // format type bigint or number toBlock and fromBlock to hexstring.\n        let { toBlock, fromBlock } = filter;\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(toBlock)) {\n            if (typeof toBlock === \"number\" || typeof toBlock === \"bigint\") {\n                toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(toBlock);\n            }\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(fromBlock)) {\n            if (typeof fromBlock === \"number\" || typeof fromBlock === \"bigint\") {\n                fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(fromBlock);\n            }\n        }\n        const formattedFilter = Object.assign(Object.assign({}, filter), {\n            fromBlock,\n            toBlock\n        });\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);\n        const result = response.map((res)=>{\n            if (typeof res === \"string\") {\n                return res;\n            }\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.logSchema, res, returnFormat);\n        });\n        return result;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getChainId}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getChainId(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getChainId(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, // Response is number in hex formatted string\n        response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getProof}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getProof(web3Context, address, storageKeys, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const storageKeysFormatted = storageKeys.map((storageKey)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"bytes\"\n            }, storageKey, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProof(web3Context.requestManager, address, storageKeysFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accountSchema, response, returnFormat);\n    });\n}\n// TODO Throwing an error with Geth, but not Infura\n// TODO gasUsedRatio and reward not formatting\n/**\n * View additional documentations here: {@link Web3Eth.getFeeHistory}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function getFeeHistory(web3Context, blockCount, newestBlock = web3Context.defaultBlock, rewardPercentiles, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockCountFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockCount, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const newestBlockFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(newestBlock) ? newestBlock : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, newestBlock, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const rewardPercentilesFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            type: \"array\",\n            items: {\n                format: \"uint\"\n            }\n        }, rewardPercentiles, _constants_js__WEBPACK_IMPORTED_MODULE_13__.NUMBER_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getFeeHistory(web3Context.requestManager, blockCountFormatted, newestBlockFormatted, rewardPercentilesFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.feeHistorySchema, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.createAccessList}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function createAccessList(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber) ? blockNumber : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"uint\"\n        }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.createAccessList(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT), blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accessListResultSchema, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTypedData}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */ function signTypedData(web3Context, address, typedData, useLegacy, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTypedData(web3Context.requestManager, address, typedData, useLegacy);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            format: \"bytes\"\n        }, response, returnFormat);\n    });\n} //# sourceMappingURL=rpc_method_wrappers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS9ycGNfbWV0aG9kX3dyYXBwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDQSxJQUFJTyxTQUFTLFNBQUssSUFBSSxTQUFJLENBQUNBLE1BQU0sSUFBSyxTQUFVQyxDQUFDLEVBQUVQLENBQUM7SUFDaEQsSUFBSVEsSUFBSSxDQUFDO0lBQ1QsSUFBSyxJQUFJQyxLQUFLRixFQUFHLElBQUlHLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLEdBQUdFLE1BQU1ULEVBQUVjLE9BQU8sQ0FBQ0wsS0FBSyxHQUM5RUQsQ0FBQyxDQUFDQyxFQUFFLEdBQUdGLENBQUMsQ0FBQ0UsRUFBRTtJQUNmLElBQUlGLEtBQUssUUFBUSxPQUFPRyxPQUFPSyxxQkFBcUIsS0FBSyxZQUNyRCxJQUFLLElBQUlDLElBQUksR0FBR1AsSUFBSUMsT0FBT0sscUJBQXFCLENBQUNSLElBQUlTLElBQUlQLEVBQUVRLE1BQU0sRUFBRUQsSUFBSztRQUNwRSxJQUFJaEIsRUFBRWMsT0FBTyxDQUFDTCxDQUFDLENBQUNPLEVBQUUsSUFBSSxLQUFLTixPQUFPQyxTQUFTLENBQUNPLG9CQUFvQixDQUFDTCxJQUFJLENBQUNOLEdBQUdFLENBQUMsQ0FBQ08sRUFBRSxHQUN6RVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLEVBQUUsQ0FBQyxHQUFHVCxDQUFDLENBQUNFLENBQUMsQ0FBQ08sRUFBRSxDQUFDO0lBQ3pCO0lBQ0osT0FBT1I7QUFDWDtBQUNBLHVFQUF1RTtBQUN2RSxxQ0FBcUMsR0FDZ0M7QUFDMUI7QUFDcUM7QUFDekI7QUFDbUI7QUFDN0I7QUFDSTtBQUM4QjtBQUNrRjtBQUNqSywyQ0FBMkM7QUFDaUM7QUFDVjtBQUNsRSwyQ0FBMkM7QUFDMEI7QUFDckUsMkNBQTJDO0FBQ3lDO0FBQ2hDO0FBQ3BELDJDQUEyQztBQUNjO0FBQ3pEOzs7Q0FHQyxHQUNNLE1BQU11QyxxQkFBcUIsQ0FBQ0MsY0FBZ0I3RCxVQUFVLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQWUsT0FBTzZDLDhFQUFnQyxDQUFDZ0IsWUFBWUMsY0FBYztJQUFHLEdBQUc7QUFDNUssa0NBQWtDO0FBQ2xDOzs7Q0FHQyxHQUNNLE1BQU1DLFlBQVksQ0FBQ0YsY0FBZ0I3RCxVQUFVLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQWUsT0FBTzZDLHNFQUF3QixDQUFDZ0IsWUFBWUMsY0FBYztJQUFHLEdBQUc7QUFDM0osMkVBQTJFO0FBQzNFOzs7Q0FHQyxHQUNNLE1BQU1HLGNBQWMsQ0FBQ0osY0FBZ0I3RCxVQUFVLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQWUsT0FBTzZDLHVFQUF5QixDQUFDZ0IsWUFBWUMsY0FBYztJQUFHLEdBQUc7QUFDOUo7OztDQUdDLEdBQ00sTUFBTUksV0FBVyxDQUFDTCxjQUFnQjdELFVBQVUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFBZSxPQUFPNkMscUVBQXVCLENBQUNnQixZQUFZQyxjQUFjO0lBQUcsR0FBRztBQUN6Sjs7O0NBR0MsR0FDTSxTQUFTTSxZQUFZUCxXQUFXLEVBQUVRLFlBQVk7SUFDakQsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTXNFLFdBQVcsTUFBTXpCLHVFQUF5QixDQUFDZ0IsWUFBWUMsY0FBYztRQUMzRSxPQUFPM0Isa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFPLEdBQUdtQyxVQUFVRDtJQUNoRDtBQUNKO0FBQ0E7OztDQUdDLEdBQ00sU0FBU0UsWUFBWVYsV0FBVyxFQUFFUSxZQUFZO0lBQ2pELE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU1zRSxXQUFXLE1BQU16Qix1RUFBeUIsQ0FBQ2dCLFlBQVlDLGNBQWM7UUFDM0UsT0FBTzNCLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNHLGVBQWVYLFdBQVcsRUFBRVEsWUFBWTtJQUNwRCxPQUFPckUsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxNQUFNc0UsV0FBVyxNQUFNekIsMEVBQTRCLENBQUNnQixZQUFZQyxjQUFjO1FBQzlFLE9BQU8zQixrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQU8sR0FBR21DLFVBQVVEO0lBQ2hEO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTSSxXQUFXWixXQUFXLEVBQUVhLE9BQU8sRUFBRUMsY0FBY2QsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQ2pHLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU02RSx1QkFBdUJyQywwREFBVUEsQ0FBQ21DLGVBQ2xDQSxjQUNBeEMsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFPLEdBQUd3QyxhQUFhM0MsdURBQWVBO1FBQzdELE1BQU1zQyxXQUFXLE1BQU16QixzRUFBd0IsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRVksU0FBU0c7UUFDckYsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNTLGFBQWFqQixXQUFXLEVBQUVhLE9BQU8sRUFBRUssV0FBVyxFQUFFSixjQUFjZCxZQUFZZSxZQUFZLEVBQUVQLFlBQVk7SUFDaEgsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTWdGLHVCQUF1QjdDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHNEMsYUFBYS9DLHVEQUFlQTtRQUNwRixNQUFNNkMsdUJBQXVCckMsMERBQVVBLENBQUNtQyxlQUNsQ0EsY0FDQXhDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHd0MsYUFBYTNDLHVEQUFlQTtRQUM3RCxNQUFNc0MsV0FBVyxNQUFNekIsd0VBQTBCLENBQUNnQixZQUFZQyxjQUFjLEVBQUVZLFNBQVNNLHNCQUFzQkg7UUFDN0csT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBUSxHQUFHbUMsVUFBVUQ7SUFDakQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNZLFFBQVFwQixXQUFXLEVBQUVhLE9BQU8sRUFBRUMsY0FBY2QsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQzlGLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU02RSx1QkFBdUJyQywwREFBVUEsQ0FBQ21DLGVBQ2xDQSxjQUNBeEMsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFPLEdBQUd3QyxhQUFhM0MsdURBQWVBO1FBQzdELE1BQU1zQyxXQUFXLE1BQU16QixtRUFBcUIsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRVksU0FBU0c7UUFDbEYsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBUSxHQUFHbUMsVUFBVUQ7SUFDakQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNhLFNBQVNyQixXQUFXLEVBQUVzQixRQUFRdEIsWUFBWWUsWUFBWSxFQUFFUSxXQUFXLEtBQUssRUFBRWYsWUFBWTtJQUNsRyxPQUFPckUsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxJQUFJc0U7UUFDSixJQUFJN0IsdURBQU9BLENBQUMwQyxRQUFRO1lBQ2hCLE1BQU1FLHFCQUFxQmxELGtEQUFNQSxDQUFDO2dCQUFFQSxRQUFRO1lBQVUsR0FBR2dELE9BQU9uRCx1REFBZUE7WUFDL0VzQyxXQUFXLE1BQU16QiwwRUFBNEIsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRXVCLG9CQUFvQkQ7UUFDbEcsT0FDSztZQUNELE1BQU1QLHVCQUF1QnJDLDBEQUFVQSxDQUFDMkMsU0FDbENBLFFBQ0FoRCxrREFBTUEsQ0FBQztnQkFBRUEsUUFBUTtZQUFPLEdBQUdnRCxPQUFPbkQsdURBQWVBO1lBQ3ZEc0MsV0FBVyxNQUFNekIsNEVBQThCLENBQUNnQixZQUFZQyxjQUFjLEVBQUVlLHNCQUFzQk87UUFDdEc7UUFDQSxPQUFPakQsa0RBQU1BLENBQUNhLG9EQUFXQSxFQUFFc0IsVUFBVUQ7SUFDekM7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNtQix5QkFBeUIzQixXQUFXLEVBQUVzQixRQUFRdEIsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQ2hHLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLElBQUlzRTtRQUNKLElBQUk3Qix1REFBT0EsQ0FBQzBDLFFBQVE7WUFDaEIsTUFBTUUscUJBQXFCbEQsa0RBQU1BLENBQUM7Z0JBQUVBLFFBQVE7WUFBVSxHQUFHZ0QsT0FBT25ELHVEQUFlQTtZQUMvRXNDLFdBQVcsTUFBTXpCLDBGQUE0QyxDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFdUI7UUFDOUYsT0FDSztZQUNELE1BQU1SLHVCQUF1QnJDLDBEQUFVQSxDQUFDMkMsU0FDbENBLFFBQ0FoRCxrREFBTUEsQ0FBQztnQkFBRUEsUUFBUTtZQUFPLEdBQUdnRCxPQUFPbkQsdURBQWVBO1lBQ3ZEc0MsV0FBVyxNQUFNekIsNEZBQThDLENBQUNnQixZQUFZQyxjQUFjLEVBQUVlO1FBQ2hHO1FBQ0EsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNzQixtQkFBbUI5QixXQUFXLEVBQUVzQixRQUFRdEIsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQzFGLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLElBQUlzRTtRQUNKLElBQUk3Qix1REFBT0EsQ0FBQzBDLFFBQVE7WUFDaEIsTUFBTUUscUJBQXFCbEQsa0RBQU1BLENBQUM7Z0JBQUVBLFFBQVE7WUFBVSxHQUFHZ0QsT0FBT25ELHVEQUFlQTtZQUMvRXNDLFdBQVcsTUFBTXpCLG9GQUFzQyxDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFdUI7UUFDeEYsT0FDSztZQUNELE1BQU1SLHVCQUF1QnJDLDBEQUFVQSxDQUFDMkMsU0FDbENBLFFBQ0FoRCxrREFBTUEsQ0FBQztnQkFBRUEsUUFBUTtZQUFPLEdBQUdnRCxPQUFPbkQsdURBQWVBO1lBQ3ZEc0MsV0FBVyxNQUFNekIsc0ZBQXdDLENBQUNnQixZQUFZQyxjQUFjLEVBQUVlO1FBQzFGO1FBQ0EsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVN5QixTQUFTakMsV0FBVyxFQUFFc0IsUUFBUXRCLFlBQVllLFlBQVksRUFBRW1CLFVBQVUsRUFBRTFCLFlBQVk7SUFDNUYsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTWdHLHNCQUFzQjdELGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHNEQsWUFBWS9ELHVEQUFlQTtRQUNsRixJQUFJc0M7UUFDSixJQUFJN0IsdURBQU9BLENBQUMwQyxRQUFRO1lBQ2hCLE1BQU1FLHFCQUFxQmxELGtEQUFNQSxDQUFDO2dCQUFFQSxRQUFRO1lBQVUsR0FBR2dELE9BQU9uRCx1REFBZUE7WUFDL0VzQyxXQUFXLE1BQU16Qix1RkFBeUMsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRXVCLG9CQUFvQlc7UUFDL0csT0FDSztZQUNELE1BQU1uQix1QkFBdUJyQywwREFBVUEsQ0FBQzJDLFNBQ2xDQSxRQUNBaEQsa0RBQU1BLENBQUM7Z0JBQUVBLFFBQVE7WUFBTyxHQUFHZ0QsT0FBT25ELHVEQUFlQTtZQUN2RHNDLFdBQVcsTUFBTXpCLHlGQUEyQyxDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFZSxzQkFBc0JtQjtRQUNuSDtRQUNBLE9BQU83RCxrREFBTUEsQ0FBQ2Esb0RBQVdBLEVBQUVzQixVQUFVRDtJQUN6QztBQUNKO0FBQ0E7OztDQUdDLEdBQ00sU0FBUzhCLGVBQWV0QyxXQUFXLEVBQUV1QyxlQUFlLEVBQUUvQixZQUFZO0lBQ3JFLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU1xRywyQkFBMkJsRSxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQVUsR0FBR2lFLGlCQUFpQm5FLDZEQUFxQkE7UUFDckcsTUFBTXFDLFdBQVcsTUFBTXpCLGdGQUFrQyxDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFdUM7UUFDdEYsT0FBTzNELHlEQUFTQSxDQUFDNEIsWUFDWEEsV0FDQWYsZ0ZBQWlCQSxDQUFDZSxVQUFVRCxjQUFjO1lBQUVrQyxrQkFBa0I7UUFBSztJQUM3RTtBQUNKO0FBQ0E7OztDQUdDLEdBQ00sU0FBU0MsdUJBQXVCM0MsV0FBVyxFQUFFUSxZQUFZO0lBQzVELE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU1zRSxXQUFXLE1BQU16QixrRkFBb0MsQ0FBQ2dCLFlBQVlDLGNBQWM7UUFDdEYsT0FBT1EsU0FBU21DLEdBQUcsQ0FBQ0MsQ0FBQUEsY0FBZW5ELGdGQUFpQkEsQ0FBQ21ELGFBQWFyQyxjQUFjO2dCQUM1RWtDLGtCQUFrQjtZQUN0QjtJQUNKO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTSSx3QkFBd0I5QyxXQUFXLEVBQUVzQixRQUFRdEIsWUFBWWUsWUFBWSxFQUFFZ0MsZ0JBQWdCLEVBQUV2QyxZQUFZO0lBQ2pILE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU02Ryw0QkFBNEIxRSxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQU8sR0FBR3lFLGtCQUFrQjVFLHVEQUFlQTtRQUM5RixJQUFJc0M7UUFDSixJQUFJN0IsdURBQU9BLENBQUMwQyxRQUFRO1lBQ2hCLE1BQU1FLHFCQUFxQmxELGtEQUFNQSxDQUFDO2dCQUFFQSxRQUFRO1lBQVUsR0FBR2dELE9BQU9uRCx1REFBZUE7WUFDL0VzQyxXQUFXLE1BQU16Qiw2RkFBK0MsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRXVCLG9CQUFvQndCO1FBQ3JILE9BQ0s7WUFDRCxNQUFNaEMsdUJBQXVCckMsMERBQVVBLENBQUMyQyxTQUNsQ0EsUUFDQWhELGtEQUFNQSxDQUFDO2dCQUFFQSxRQUFRO1lBQU8sR0FBR2dELE9BQU9uRCx1REFBZUE7WUFDdkRzQyxXQUFXLE1BQU16QiwrRkFBaUQsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRWUsc0JBQXNCZ0M7UUFDekg7UUFDQSxPQUFPbkUseURBQVNBLENBQUM0QixZQUNYQSxXQUNBZixnRkFBaUJBLENBQUNlLFVBQVVELGNBQWM7WUFBRWtDLGtCQUFrQjtRQUFLO0lBQzdFO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTUyxzQkFBc0JuRCxXQUFXLEVBQUV1QyxlQUFlLEVBQUUvQixZQUFZO0lBQzVFLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU1xRywyQkFBMkJsRSxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQVUsR0FBR2lFLGlCQUFpQm5FLDZEQUFxQkE7UUFDckcsTUFBTXFDLFdBQVcsTUFBTXpCLGlGQUFtQyxDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFdUM7UUFDdkYsT0FBTzNELHlEQUFTQSxDQUFDNEIsWUFDWEEsV0FDQW5DLGtEQUFNQSxDQUFDZ0IsaUVBQXdCQSxFQUFFbUIsVUFBVUQ7SUFDckQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVM0QyxvQkFBb0JwRCxXQUFXLEVBQUVhLE9BQU8sRUFBRUMsY0FBY2QsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQzFHLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU02RSx1QkFBdUJyQywwREFBVUEsQ0FBQ21DLGVBQ2xDQSxjQUNBeEMsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFPLEdBQUd3QyxhQUFhM0MsdURBQWVBO1FBQzdELE1BQU1zQyxXQUFXLE1BQU16QiwrRUFBaUMsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRVksU0FBU0c7UUFDOUYsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVM2QyxnQkFBZ0JyRCxXQUFXLEVBQUU2QyxXQUFXLEVBQUVyQyxZQUFZLEVBQUU4QyxVQUFVO0lBQUVDLDBCQUEwQjtBQUFLLENBQUM7SUFDaEgsTUFBTUMsYUFBYSxJQUFJbkYscURBQWNBLENBQUMsQ0FBQzNCLFNBQVNFO1FBQzVDNkcsYUFBYTtZQUNSLEtBQU10SCxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO29CQUNuQyxNQUFNdUgsZUFBZSxJQUFJNUQsbUVBQVlBLENBQUM7d0JBQ2xDRTt3QkFDQXdEO3dCQUNBRjt3QkFDQTlDO29CQUNKO29CQUNBLElBQUltRCx1QkFBdUJqRSxnRkFBaUJBLENBQUNoQyxPQUFPa0csTUFBTSxDQUFDbEcsT0FBT2tHLE1BQU0sQ0FBQyxDQUFDLEdBQUdmLGNBQWM7d0JBQUVnQixNQUFNcEUseUZBQTBCQSxDQUFDLFFBQVFPLGFBQWE2Qzt3QkFBY2lCLElBQUlyRSx5RkFBMEJBLENBQUMsTUFBTU8sYUFBYTZDO29CQUFhLElBQUkxRSx1REFBZUE7b0JBQ25QLElBQUk7d0JBQ0F3Rix1QkFBdUIsTUFBTUQsYUFBYUssZ0JBQWdCLENBQUM7NEJBQ3ZEbEI7NEJBQ0FjO3dCQUNKO3dCQUNBLE1BQU1ELGFBQWFILHdCQUF3QixDQUFDSTt3QkFDNUNELGFBQWFNLFdBQVcsQ0FBQ0w7d0JBQ3pCLElBQUlNO3dCQUNKLElBQUlqRSxZQUFZaUUsTUFBTSxJQUFJLENBQUNwRix5REFBU0EsQ0FBQzhFLHFCQUFxQkUsSUFBSSxHQUFHOzRCQUM3REksU0FBU2pFLFlBQVlpRSxNQUFNLENBQUNDLEdBQUcsQ0FBQ1AscUJBQXFCRSxJQUFJO3dCQUM3RDt3QkFDQSxNQUFNdEIsa0JBQWtCLE1BQU1tQixhQUFhUyxXQUFXLENBQUM7NEJBQ25ERjs0QkFDQUcsSUFBSVQ7d0JBQ1I7d0JBQ0EsTUFBTW5CLDJCQUEyQmxFLGtEQUFNQSxDQUFDOzRCQUFFQSxRQUFRO3dCQUFVLEdBQUdpRSxpQkFBaUIvQjt3QkFDaEZrRCxhQUFhVyxRQUFRLENBQUNWO3dCQUN0QkQsYUFBYVksbUJBQW1CLENBQUM5Qjt3QkFDakMsTUFBTStCLHFCQUFxQixNQUFNM0Usa0dBQXlCQSxDQUFDSSxhQUFhdUMsaUJBQWlCL0I7d0JBQ3pGLE1BQU1nRSw4QkFBOEJkLGFBQWFlLG9CQUFvQixDQUFDbkcsa0RBQU1BLENBQUNnQixpRUFBd0JBLEVBQUVpRixvQkFBb0IvRDt3QkFDM0hrRCxhQUFhZ0IsV0FBVyxDQUFDRjt3QkFDekI5SCxRQUFRLE9BQU1nSCxhQUFhaUIsYUFBYSxDQUFDOzRCQUNyQ0MsU0FBU0o7NEJBQ1RKLElBQUlUO3dCQUNSLEVBQUM7d0JBQ0RELGFBQWFtQixnQkFBZ0IsQ0FBQzs0QkFDMUJELFNBQVNKOzRCQUNUakM7d0JBQ0o7b0JBQ0osRUFDQSxPQUFPdUMsT0FBTzt3QkFDVmxJLE9BQU8sT0FBTThHLGFBQWFxQixXQUFXLENBQUM7NEJBQ2xDRDs0QkFDQVYsSUFBSVQ7d0JBQ1IsRUFBQztvQkFDTDtnQkFDSixFQUFDO1FBQ0w7SUFDSjtJQUNBLE9BQU9IO0FBQ1g7QUFDQTs7O0NBR0MsR0FDTSxTQUFTd0Isc0JBQXNCaEYsV0FBVyxFQUFFaUYsaUJBQWlCLEVBQUV6RSxZQUFZLEVBQUU4QyxVQUFVO0lBQUVDLDBCQUEwQjtBQUFLLENBQUM7SUFDNUgsZ0ZBQWdGO0lBQ2hGLGtFQUFrRTtJQUNsRSxNQUFNQyxhQUFhLElBQUluRixxREFBY0EsQ0FBQyxDQUFDM0IsU0FBU0U7UUFDNUM2RyxhQUFhO1lBQ1IsS0FBTXRILFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7b0JBQ25DLE1BQU11SCxlQUFlLElBQUk1RCxtRUFBWUEsQ0FBQzt3QkFDbENFO3dCQUNBd0Q7d0JBQ0FGO3dCQUNBOUM7b0JBQ0o7b0JBQ0EsMERBQTBEO29CQUMxRCxNQUFNMEUsZ0NBQWdDNUcsa0RBQU1BLENBQUM7d0JBQUVBLFFBQVE7b0JBQVEsR0FBRzJHLG1CQUFtQjlHLHVEQUFlQTtvQkFDcEcsTUFBTWdILDBCQUEwQnpHLGlFQUFrQkEsQ0FBQzBHLGtCQUFrQixDQUFDNUcsNkRBQWlCQSxDQUFDRCxzREFBVUEsQ0FBQzJHO29CQUNuRyxNQUFNRyxrQ0FBa0MzSCxPQUFPa0csTUFBTSxDQUFDbEcsT0FBT2tHLE1BQU0sQ0FBQyxDQUFDLEdBQUd1Qix3QkFBd0JHLE1BQU0sS0FBSzt3QkFDdkcscUVBQXFFO3dCQUNyRSxxRUFBcUU7d0JBQ3JFLCtEQUErRDt3QkFDL0QscUVBQXFFO3dCQUNyRSxpRUFBaUU7d0JBQ2pFekIsTUFBTXNCLHdCQUF3QkksZ0JBQWdCLEdBQUdDLFFBQVE7b0JBQUc7b0JBQ2hFLElBQUk7d0JBQ0EsTUFBTSxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRW5JLENBQUMsRUFBRSxHQUFHOEgsaUNBQWlDTSxxQkFBcUJySSxPQUFPK0gsaUNBQWlDOzRCQUFDOzRCQUFLOzRCQUFLO3lCQUFJO3dCQUNqSSxNQUFNM0IsYUFBYUgsd0JBQXdCLENBQUNvQzt3QkFDNUNqQyxhQUFhTSxXQUFXLENBQUNrQjt3QkFDekIsTUFBTTNDLGtCQUFrQixNQUFNNUMsbUZBQWtCQSxDQUFDSyxhQUFhLElBQU03RCxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO2dDQUNoRyxPQUFPNkMsOEVBQWdDLENBQUNnQixZQUFZQyxjQUFjLEVBQUVpRjs0QkFDeEU7d0JBQ0F4QixhQUFhVyxRQUFRLENBQUNhO3dCQUN0QixNQUFNMUMsMkJBQTJCbEUsa0RBQU1BLENBQUM7NEJBQUVBLFFBQVE7d0JBQVUsR0FBR2lFLGlCQUFpQi9CO3dCQUNoRmtELGFBQWFZLG1CQUFtQixDQUFDOUI7d0JBQ2pDLE1BQU0rQixxQkFBcUIsTUFBTTNFLGtHQUF5QkEsQ0FBQ0ksYUFBYXVDLGlCQUFpQi9CO3dCQUN6RixNQUFNZ0UsOEJBQThCZCxhQUFhZSxvQkFBb0IsQ0FBQ25HLGtEQUFNQSxDQUFDZ0IsaUVBQXdCQSxFQUFFaUYsb0JBQW9CL0Q7d0JBQzNIa0QsYUFBYWdCLFdBQVcsQ0FBQ0Y7d0JBQ3pCOUgsUUFBUSxPQUFNZ0gsYUFBYWlCLGFBQWEsQ0FBQzs0QkFDckNDLFNBQVNKOzRCQUNUSixJQUFJaUI7d0JBQ1IsRUFBQzt3QkFDRDNCLGFBQWFtQixnQkFBZ0IsQ0FBQzs0QkFDMUJELFNBQVNKOzRCQUNUakM7d0JBQ0o7b0JBQ0osRUFDQSxPQUFPdUMsT0FBTzt3QkFDVmxJLE9BQU8sT0FBTThHLGFBQWFxQixXQUFXLENBQUM7NEJBQ2xDRDs0QkFDQVYsSUFBSWlCO3dCQUNSLEVBQUM7b0JBQ0w7Z0JBQ0osRUFBQztRQUNMO0lBQ0o7SUFDQSxPQUFPN0I7QUFDWDtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNxQyxLQUFLN0YsV0FBVyxFQUFFOEYsT0FBTyxFQUFFQyxjQUFjLEVBQUV2RixZQUFZO0lBQ25FLElBQUl3RjtJQUNKLE9BQU83SixVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU04SixtQkFBbUIzSCxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQVEsR0FBR3dILFNBQVMxSCw2REFBcUJBO1FBQ25GLElBQUksQ0FBQzRILEtBQUtoRyxZQUFZaUUsTUFBTSxNQUFNLFFBQVErQixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUc5QixHQUFHLENBQUM2QixpQkFBaUI7WUFDdkYsTUFBTTlCLFNBQVNqRSxZQUFZaUUsTUFBTSxDQUFDQyxHQUFHLENBQUM2QjtZQUN0QyxNQUFNRyxTQUFTakMsT0FBTzRCLElBQUksQ0FBQ0k7WUFDM0IsT0FBTzNILGtEQUFNQSxDQUFDa0IsOERBQXFCQSxFQUFFMEcsUUFBUTFGO1FBQ2pEO1FBQ0EsSUFBSSxPQUFPdUYsbUJBQW1CLFVBQVU7WUFDcEMsTUFBTSxJQUFJaEgsdURBQWNBLENBQUMrRyxTQUFTO1FBQ3RDO1FBQ0EsTUFBTXJGLFdBQVcsTUFBTXpCLGdFQUFrQixDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFOEYsZ0JBQWdCRTtRQUN0RixPQUFPM0gsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFRLEdBQUdtQyxVQUFVRDtJQUNqRDtBQUNKO0FBQ0E7OztDQUdDLEdBQ00sU0FBUzJGLGdCQUFnQm5HLFdBQVcsRUFBRTZDLFdBQVcsRUFBRXJDLFlBQVk7SUFDbEUsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTXNFLFdBQVcsTUFBTXpCLDJFQUE2QixDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFUCxnRkFBaUJBLENBQUNtRCxhQUFhMUUsdURBQWVBO1FBQy9ILHlFQUF5RTtRQUN6RSxnRkFBZ0Y7UUFDaEYsT0FBT1csd0RBQVFBLENBQUMyQixZQUNWeEIsNEZBQXVCQSxDQUFDd0IsVUFBVUQsY0FBYztZQUM5Q2tDLGtCQUFrQjtRQUN0QixLQUNFO1lBQ0UwRCxLQUFLOUgsa0RBQU1BLENBQUM7Z0JBQUVBLFFBQVE7WUFBUSxHQUFHbUMsU0FBUzJGLEdBQUcsRUFBRTVGO1lBQy9DNEQsSUFBSTFFLGdGQUFpQkEsQ0FBQ2UsU0FBUzJELEVBQUUsRUFBRTVELGNBQWM7Z0JBQzdDa0Msa0JBQWtCO1lBQ3RCO1FBQ0o7SUFDUjtBQUNKO0FBQ0EsNkNBQTZDO0FBQzdDLHdFQUF3RTtBQUN4RTs7O0NBR0MsR0FDTSxTQUFTN0UsS0FBS21DLFdBQVcsRUFBRTZDLFdBQVcsRUFBRS9CLGNBQWNkLFlBQVllLFlBQVksRUFBRVAsWUFBWTtJQUMvRixPQUFPckUsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxNQUFNNkUsdUJBQXVCckMsMERBQVVBLENBQUNtQyxlQUNsQ0EsY0FDQXhDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHd0MsYUFBYTNDLHVEQUFlQTtRQUM3RCxNQUFNc0MsV0FBVyxNQUFNekIsZ0VBQWtCLENBQUNnQixZQUFZQyxjQUFjLEVBQUVQLGdGQUFpQkEsQ0FBQ21ELGFBQWExRSx1REFBZUEsR0FBRzZDO1FBQ3ZILE9BQU8xQyxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQVEsR0FBR21DLFVBQVVEO0lBQ2pEO0FBQ0o7QUFDQSxvRUFBb0U7QUFDcEU7OztDQUdDLEdBQ00sU0FBUzZGLFlBQVlyRyxXQUFXLEVBQUU2QyxXQUFXLEVBQUUvQixjQUFjZCxZQUFZZSxZQUFZLEVBQUVQLFlBQVk7SUFDdEcsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTXdILHVCQUF1QmpFLGdGQUFpQkEsQ0FBQ21ELGFBQWExRSx1REFBZUE7UUFDM0UsTUFBTTZDLHVCQUF1QnJDLDBEQUFVQSxDQUFDbUMsZUFDbENBLGNBQ0F4QyxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQU8sR0FBR3dDLGFBQWEzQyx1REFBZUE7UUFDN0QsTUFBTXNDLFdBQVcsTUFBTXpCLHVFQUF5QixDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFMEQsc0JBQXNCM0M7UUFDbkcsT0FBTzFDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHbUMsVUFBVUQ7SUFDaEQ7QUFDSjtBQUNBLHdDQUF3QztBQUN4Qzs7O0NBR0MsR0FDTSxTQUFTOEYsUUFBUXRHLFdBQVcsRUFBRXVHLE1BQU0sRUFBRS9GLFlBQVk7SUFDckQsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsbUVBQW1FO1FBQ25FLElBQUksRUFBRXFLLE9BQU8sRUFBRUMsU0FBUyxFQUFFLEdBQUdGO1FBQzdCLElBQUksQ0FBQzFILHlEQUFTQSxDQUFDMkgsVUFBVTtZQUNyQixJQUFJLE9BQU9BLFlBQVksWUFBWSxPQUFPQSxZQUFZLFVBQVU7Z0JBQzVEQSxVQUFVL0gsdURBQVdBLENBQUMrSDtZQUMxQjtRQUNKO1FBQ0EsSUFBSSxDQUFDM0gseURBQVNBLENBQUM0SCxZQUFZO1lBQ3ZCLElBQUksT0FBT0EsY0FBYyxZQUFZLE9BQU9BLGNBQWMsVUFBVTtnQkFDaEVBLFlBQVloSSx1REFBV0EsQ0FBQ2dJO1lBQzVCO1FBQ0o7UUFDQSxNQUFNQyxrQkFBa0JoSixPQUFPa0csTUFBTSxDQUFDbEcsT0FBT2tHLE1BQU0sQ0FBQyxDQUFDLEdBQUcyQyxTQUFTO1lBQUVFO1lBQVdEO1FBQVE7UUFDdEYsTUFBTS9GLFdBQVcsTUFBTXpCLG1FQUFxQixDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFeUc7UUFDekUsTUFBTXhKLFNBQVN1RCxTQUFTbUMsR0FBRyxDQUFDK0QsQ0FBQUE7WUFDeEIsSUFBSSxPQUFPQSxRQUFRLFVBQVU7Z0JBQ3pCLE9BQU9BO1lBQ1g7WUFDQSxPQUFPckksa0RBQU1BLENBQUNlLGtEQUFTQSxFQUFFc0gsS0FBS25HO1FBQ2xDO1FBQ0EsT0FBT3REO0lBQ1g7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVMwSixXQUFXNUcsV0FBVyxFQUFFUSxZQUFZO0lBQ2hELE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU1zRSxXQUFXLE1BQU16QixzRUFBd0IsQ0FBQ2dCLFlBQVlDLGNBQWM7UUFDMUUsT0FBTzNCLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUMvQiw2Q0FBNkM7UUFDN0NtQyxVQUFVRDtJQUNkO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTcUcsU0FBUzdHLFdBQVcsRUFBRWEsT0FBTyxFQUFFaUcsV0FBVyxFQUFFaEcsY0FBY2QsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQzVHLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU00Syx1QkFBdUJELFlBQVlsRSxHQUFHLENBQUNvRSxDQUFBQSxhQUFjMUksa0RBQU1BLENBQUM7Z0JBQUVBLFFBQVE7WUFBUSxHQUFHMEksWUFBWTdJLHVEQUFlQTtRQUNsSCxNQUFNNkMsdUJBQXVCckMsMERBQVVBLENBQUNtQyxlQUNsQ0EsY0FDQXhDLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHd0MsYUFBYTNDLHVEQUFlQTtRQUM3RCxNQUFNc0MsV0FBVyxNQUFNekIsb0VBQXNCLENBQUNnQixZQUFZQyxjQUFjLEVBQUVZLFNBQVNrRyxzQkFBc0IvRjtRQUN6RyxPQUFPMUMsa0RBQU1BLENBQUNZLHNEQUFhQSxFQUFFdUIsVUFBVUQ7SUFDM0M7QUFDSjtBQUNBLG1EQUFtRDtBQUNuRCw4Q0FBOEM7QUFDOUM7OztDQUdDLEdBQ00sU0FBU3lHLGNBQWNqSCxXQUFXLEVBQUVrSCxVQUFVLEVBQUVDLGNBQWNuSCxZQUFZZSxZQUFZLEVBQUVxRyxpQkFBaUIsRUFBRTVHLFlBQVk7SUFDMUgsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTWtMLHNCQUFzQi9JLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHNEksWUFBWS9JLHVEQUFlQTtRQUNsRixNQUFNbUosdUJBQXVCM0ksMERBQVVBLENBQUN3SSxlQUNsQ0EsY0FDQTdJLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBTyxHQUFHNkksYUFBYWhKLHVEQUFlQTtRQUM3RCxNQUFNb0osNkJBQTZCakosa0RBQU1BLENBQUM7WUFDdENrSixNQUFNO1lBQ05DLE9BQU87Z0JBQ0huSixRQUFRO1lBQ1o7UUFDSixHQUFHOEksbUJBQW1CdkgsOERBQWtCQTtRQUN4QyxNQUFNWSxXQUFXLE1BQU16Qix5RUFBMkIsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRW9ILHFCQUFxQkMsc0JBQXNCQztRQUMxSCxPQUFPakosa0RBQU1BLENBQUNjLHlEQUFnQkEsRUFBRXFCLFVBQVVEO0lBQzlDO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTa0gsaUJBQWlCMUgsV0FBVyxFQUFFNkMsV0FBVyxFQUFFL0IsY0FBY2QsWUFBWWUsWUFBWSxFQUFFUCxZQUFZO0lBQzNHLE9BQU9yRSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE1BQU02RSx1QkFBdUJyQywwREFBVUEsQ0FBQ21DLGVBQ2xDQSxjQUNBeEMsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFPLEdBQUd3QyxhQUFhM0MsdURBQWVBO1FBQzdELE1BQU1zQyxXQUFZLE1BQU16Qiw0RUFBOEIsQ0FBQ2dCLFlBQVlDLGNBQWMsRUFBRVAsZ0ZBQWlCQSxDQUFDbUQsYUFBYTFFLHVEQUFlQSxHQUFHNkM7UUFDcEksT0FBTzFDLGtEQUFNQSxDQUFDaUIsK0RBQXNCQSxFQUFFa0IsVUFBVUQ7SUFDcEQ7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNtSCxjQUFjM0gsV0FBVyxFQUFFYSxPQUFPLEVBQUUrRyxTQUFTLEVBQUVDLFNBQVMsRUFBRXJILFlBQVk7SUFDbEYsT0FBT3JFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTXNFLFdBQVcsTUFBTXpCLHlFQUEyQixDQUFDZ0IsWUFBWUMsY0FBYyxFQUFFWSxTQUFTK0csV0FBV0M7UUFDbkcsT0FBT3ZKLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBUSxHQUFHbUMsVUFBVUQ7SUFDakQ7QUFDSixFQUNBLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3JwY19tZXRob2Rfd3JhcHBlcnMuanM/OWUzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuLy8gRGlzYWJsaW5nIGJlY2F1c2UgcmV0dXJuVHlwZXMgbXVzdCBiZSBsYXN0IHBhcmFtIHRvIG1hdGNoIDEueCBwYXJhbXNcbi8qIGVzbGludC1kaXNhYmxlIGRlZmF1bHQtcGFyYW0tbGFzdCAqL1xuaW1wb3J0IHsgRVRIX0RBVEFfRk9STUFULCBERUZBVUxUX1JFVFVSTl9GT1JNQVQsIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBXZWIzUHJvbWlFdmVudCB9IGZyb20gJ3dlYjMtY29yZSc7XG5pbXBvcnQgeyBmb3JtYXQsIGhleFRvQnl0ZXMsIGJ5dGVzVG9VaW50OEFycmF5LCBudW1iZXJUb0hleCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25GYWN0b3J5IH0gZnJvbSAnd2ViMy1ldGgtYWNjb3VudHMnO1xuaW1wb3J0IHsgaXNCbG9ja1RhZywgaXNCeXRlcywgaXNOdWxsaXNoLCBpc1N0cmluZyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IFNpZ25hdHVyZUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgZXRoUnBjTWV0aG9kcyB9IGZyb20gJ3dlYjMtcnBjLW1ldGhvZHMnO1xuaW1wb3J0IHsgZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24gfSBmcm9tICcuL3V0aWxzL2RlY29kZV9zaWduZWRfdHJhbnNhY3Rpb24uanMnO1xuaW1wb3J0IHsgYWNjb3VudFNjaGVtYSwgYmxvY2tTY2hlbWEsIGZlZUhpc3RvcnlTY2hlbWEsIGxvZ1NjaGVtYSwgdHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hLCBhY2Nlc3NMaXN0UmVzdWx0U2NoZW1hLCBTaWduYXR1cmVPYmplY3RTY2hlbWEsIH0gZnJvbSAnLi9zY2hlbWFzLmpzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IGdldFRyYW5zYWN0aW9uRnJvbU9yVG9BdHRyIH0gZnJvbSAnLi91dGlscy90cmFuc2FjdGlvbl9idWlsZGVyLmpzJztcbmltcG9ydCB7IGZvcm1hdFRyYW5zYWN0aW9uIH0gZnJvbSAnLi91dGlscy9mb3JtYXRfdHJhbnNhY3Rpb24uanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgdHJ5U2VuZFRyYW5zYWN0aW9uIH0gZnJvbSAnLi91dGlscy90cnlfc2VuZF90cmFuc2FjdGlvbi5qcyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5pbXBvcnQgeyB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IH0gZnJvbSAnLi91dGlscy93YWl0X2Zvcl90cmFuc2FjdGlvbl9yZWNlaXB0LmpzJztcbmltcG9ydCB7IE5VTUJFUl9EQVRBX0ZPUk1BVCB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IFNlbmRUeEhlbHBlciB9IGZyb20gJy4vdXRpbHMvc2VuZF90eF9oZWxwZXIuanMnO1xuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0UHJvdG9jb2xWZXJzaW9ufVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgY29uc3QgZ2V0UHJvdG9jb2xWZXJzaW9uID0gKHdlYjNDb250ZXh0KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuIGV0aFJwY01ldGhvZHMuZ2V0UHJvdG9jb2xWZXJzaW9uKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTsgfSk7XG4vLyBUT0RPIEFkZCByZXR1cm5Gb3JtYXQgcGFyYW1ldGVyXG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5pc1N5bmNpbmd9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBjb25zdCBpc1N5bmNpbmcgPSAod2ViM0NvbnRleHQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gZXRoUnBjTWV0aG9kcy5nZXRTeW5jaW5nKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTsgfSk7XG4vLyBUT0RPIGNvbnNpZGVyIGFkZGluZyByZXR1cm5Gb3JtYXQgcGFyYW1ldGVyICh0byBmb3JtYXQgYWRkcmVzcyBhcyBieXRlcylcbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldENvaW5iYXNlfVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgY29uc3QgZ2V0Q29pbmJhc2UgPSAod2ViM0NvbnRleHQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gZXRoUnBjTWV0aG9kcy5nZXRDb2luYmFzZSh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlcik7IH0pO1xuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguaXNNaW5pbmd9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBjb25zdCBpc01pbmluZyA9ICh3ZWIzQ29udGV4dCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiBldGhScGNNZXRob2RzLmdldE1pbmluZyh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlcik7IH0pO1xuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0SGFzaFJhdGV9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRIYXNoUmF0ZSh3ZWIzQ29udGV4dCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEhhc2hSYXRlKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0R2FzUHJpY2V9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRHYXNQcmljZSh3ZWIzQ29udGV4dCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEdhc1ByaWNlKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0QmxvY2tOdW1iZXJ9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRCbG9ja051bWJlcih3ZWIzQ29udGV4dCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEJsb2NrTnVtYmVyKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0QmFsYW5jZX1cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJhbGFuY2Uod2ViM0NvbnRleHQsIGFkZHJlc3MsIGJsb2NrTnVtYmVyID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBibG9ja051bWJlckZvcm1hdHRlZCA9IGlzQmxvY2tUYWcoYmxvY2tOdW1iZXIpXG4gICAgICAgICAgICA/IGJsb2NrTnVtYmVyXG4gICAgICAgICAgICA6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGJsb2NrTnVtYmVyLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0QmFsYW5jZSh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYWRkcmVzcywgYmxvY2tOdW1iZXJGb3JtYXR0ZWQpO1xuICAgICAgICByZXR1cm4gZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgcmVzcG9uc2UsIHJldHVybkZvcm1hdCk7XG4gICAgfSk7XG59XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5nZXRTdG9yYWdlQXR9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdG9yYWdlQXQod2ViM0NvbnRleHQsIGFkZHJlc3MsIHN0b3JhZ2VTbG90LCBibG9ja051bWJlciA9IHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3Qgc3RvcmFnZVNsb3RGb3JtYXR0ZWQgPSBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBzdG9yYWdlU2xvdCwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrTnVtYmVyKVxuICAgICAgICAgICAgPyBibG9ja051bWJlclxuICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9ja051bWJlciwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldFN0b3JhZ2VBdCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYWRkcmVzcywgc3RvcmFnZVNsb3RGb3JtYXR0ZWQsIGJsb2NrTnVtYmVyRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldENvZGV9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb2RlKHdlYjNDb250ZXh0LCBhZGRyZXNzLCBibG9ja051bWJlciA9IHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrTnVtYmVyKVxuICAgICAgICAgICAgPyBibG9ja051bWJlclxuICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9ja051bWJlciwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldENvZGUod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGFkZHJlc3MsIGJsb2NrTnVtYmVyRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldEJsb2NrfVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmxvY2sod2ViM0NvbnRleHQsIGJsb2NrID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCBoeWRyYXRlZCA9IGZhbHNlLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgIGlmIChpc0J5dGVzKGJsb2NrKSkge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tIYXNoRm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMzMicgfSwgYmxvY2ssIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgICAgICByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0QmxvY2tCeUhhc2god2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGJsb2NrSGFzaEZvcm1hdHRlZCwgaHlkcmF0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrKVxuICAgICAgICAgICAgICAgID8gYmxvY2tcbiAgICAgICAgICAgICAgICA6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGJsb2NrLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEJsb2NrQnlOdW1iZXIod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGJsb2NrTnVtYmVyRm9ybWF0dGVkLCBoeWRyYXRlZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvcm1hdChibG9ja1NjaGVtYSwgcmVzcG9uc2UsIHJldHVybkZvcm1hdCk7XG4gICAgfSk7XG59XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5nZXRCbG9ja1RyYW5zYWN0aW9uQ291bnR9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRCbG9ja1RyYW5zYWN0aW9uQ291bnQod2ViM0NvbnRleHQsIGJsb2NrID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgIGlmIChpc0J5dGVzKGJsb2NrKSkge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tIYXNoRm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMzMicgfSwgYmxvY2ssIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgICAgICByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0QmxvY2tUcmFuc2FjdGlvbkNvdW50QnlIYXNoKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCBibG9ja0hhc2hGb3JtYXR0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrKVxuICAgICAgICAgICAgICAgID8gYmxvY2tcbiAgICAgICAgICAgICAgICA6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGJsb2NrLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEJsb2NrVHJhbnNhY3Rpb25Db3VudEJ5TnVtYmVyKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCBibG9ja051bWJlckZvcm1hdHRlZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0QmxvY2tVbmNsZUNvdW50fVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmxvY2tVbmNsZUNvdW50KHdlYjNDb250ZXh0LCBibG9jayA9IHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICBpZiAoaXNCeXRlcyhibG9jaykpIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrSGFzaEZvcm1hdHRlZCA9IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIGJsb2NrLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldFVuY2xlQ291bnRCeUJsb2NrSGFzaCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYmxvY2tIYXNoRm9ybWF0dGVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrTnVtYmVyRm9ybWF0dGVkID0gaXNCbG9ja1RhZyhibG9jaylcbiAgICAgICAgICAgICAgICA/IGJsb2NrXG4gICAgICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9jaywgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgICAgIHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRVbmNsZUNvdW50QnlCbG9ja051bWJlcih3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYmxvY2tOdW1iZXJGb3JtYXR0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldFVuY2xlfVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VW5jbGUod2ViM0NvbnRleHQsIGJsb2NrID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCB1bmNsZUluZGV4LCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCB1bmNsZUluZGV4Rm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgdW5jbGVJbmRleCwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICBpZiAoaXNCeXRlcyhibG9jaykpIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrSGFzaEZvcm1hdHRlZCA9IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIGJsb2NrLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldFVuY2xlQnlCbG9ja0hhc2hBbmRJbmRleCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYmxvY2tIYXNoRm9ybWF0dGVkLCB1bmNsZUluZGV4Rm9ybWF0dGVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrTnVtYmVyRm9ybWF0dGVkID0gaXNCbG9ja1RhZyhibG9jaylcbiAgICAgICAgICAgICAgICA/IGJsb2NrXG4gICAgICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9jaywgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgICAgIHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRVbmNsZUJ5QmxvY2tOdW1iZXJBbmRJbmRleCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYmxvY2tOdW1iZXJGb3JtYXR0ZWQsIHVuY2xlSW5kZXhGb3JtYXR0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXQoYmxvY2tTY2hlbWEsIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0VHJhbnNhY3Rpb259XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvbih3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25IYXNoLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbkhhc2hGb3JtYXR0ZWQgPSBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCB0cmFuc2FjdGlvbkhhc2gsIERFRkFVTFRfUkVUVVJOX0ZPUk1BVCk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRUcmFuc2FjdGlvbkJ5SGFzaCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgdHJhbnNhY3Rpb25IYXNoRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGlzTnVsbGlzaChyZXNwb25zZSlcbiAgICAgICAgICAgID8gcmVzcG9uc2VcbiAgICAgICAgICAgIDogZm9ybWF0VHJhbnNhY3Rpb24ocmVzcG9uc2UsIHJldHVybkZvcm1hdCwgeyBmaWxsSW5wdXRBbmREYXRhOiB0cnVlIH0pO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0UGVuZGluZ1RyYW5zYWN0aW9uc31cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBlbmRpbmdUcmFuc2FjdGlvbnMod2ViM0NvbnRleHQsIHJldHVybkZvcm1hdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRQZW5kaW5nVHJhbnNhY3Rpb25zKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLm1hcCh0cmFuc2FjdGlvbiA9PiBmb3JtYXRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0LCB7XG4gICAgICAgICAgICBmaWxsSW5wdXRBbmREYXRhOiB0cnVlLFxuICAgICAgICB9KSk7XG4gICAgfSk7XG59XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5nZXRUcmFuc2FjdGlvbkZyb21CbG9ja31cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uRnJvbUJsb2NrKHdlYjNDb250ZXh0LCBibG9jayA9IHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgdHJhbnNhY3Rpb25JbmRleCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25JbmRleEZvcm1hdHRlZCA9IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHRyYW5zYWN0aW9uSW5kZXgsIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgaWYgKGlzQnl0ZXMoYmxvY2spKSB7XG4gICAgICAgICAgICBjb25zdCBibG9ja0hhc2hGb3JtYXR0ZWQgPSBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCBibG9jaywgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgICAgIHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRUcmFuc2FjdGlvbkJ5QmxvY2tIYXNoQW5kSW5kZXgod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGJsb2NrSGFzaEZvcm1hdHRlZCwgdHJhbnNhY3Rpb25JbmRleEZvcm1hdHRlZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBibG9ja051bWJlckZvcm1hdHRlZCA9IGlzQmxvY2tUYWcoYmxvY2spXG4gICAgICAgICAgICAgICAgPyBibG9ja1xuICAgICAgICAgICAgICAgIDogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgYmxvY2ssIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgICAgICByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0VHJhbnNhY3Rpb25CeUJsb2NrTnVtYmVyQW5kSW5kZXgod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGJsb2NrTnVtYmVyRm9ybWF0dGVkLCB0cmFuc2FjdGlvbkluZGV4Rm9ybWF0dGVkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNOdWxsaXNoKHJlc3BvbnNlKVxuICAgICAgICAgICAgPyByZXNwb25zZVxuICAgICAgICAgICAgOiBmb3JtYXRUcmFuc2FjdGlvbihyZXNwb25zZSwgcmV0dXJuRm9ybWF0LCB7IGZpbGxJbnB1dEFuZERhdGE6IHRydWUgfSk7XG4gICAgfSk7XG59XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5nZXRUcmFuc2FjdGlvblJlY2VpcHR9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvblJlY2VpcHQod2ViM0NvbnRleHQsIHRyYW5zYWN0aW9uSGFzaCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25IYXNoRm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMzMicgfSwgdHJhbnNhY3Rpb25IYXNoLCBERUZBVUxUX1JFVFVSTl9GT1JNQVQpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0VHJhbnNhY3Rpb25SZWNlaXB0KHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCB0cmFuc2FjdGlvbkhhc2hGb3JtYXR0ZWQpO1xuICAgICAgICByZXR1cm4gaXNOdWxsaXNoKHJlc3BvbnNlKVxuICAgICAgICAgICAgPyByZXNwb25zZVxuICAgICAgICAgICAgOiBmb3JtYXQodHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hLCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldFRyYW5zYWN0aW9uQ291bnR9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvbkNvdW50KHdlYjNDb250ZXh0LCBhZGRyZXNzLCBibG9ja051bWJlciA9IHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgcmV0dXJuRm9ybWF0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrTnVtYmVyKVxuICAgICAgICAgICAgPyBibG9ja051bWJlclxuICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9ja051bWJlciwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldFRyYW5zYWN0aW9uQ291bnQod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGFkZHJlc3MsIGJsb2NrTnVtYmVyRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguc2VuZFRyYW5zYWN0aW9ufVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VuZFRyYW5zYWN0aW9uKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0LCBvcHRpb25zID0geyBjaGVja1JldmVydEJlZm9yZVNlbmRpbmc6IHRydWUgfSkge1xuICAgIGNvbnN0IHByb21pRXZlbnQgPSBuZXcgV2ViM1Byb21pRXZlbnQoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgICAgICAgKCgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzZW5kVHhIZWxwZXIgPSBuZXcgU2VuZFR4SGVscGVyKHtcbiAgICAgICAgICAgICAgICAgICAgd2ViM0NvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgIHByb21pRXZlbnQsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIHJldHVybkZvcm1hdCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBsZXQgdHJhbnNhY3Rpb25Gb3JtYXR0ZWQgPSBmb3JtYXRUcmFuc2FjdGlvbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRyYW5zYWN0aW9uKSwgeyBmcm9tOiBnZXRUcmFuc2FjdGlvbkZyb21PclRvQXR0cignZnJvbScsIHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbiksIHRvOiBnZXRUcmFuc2FjdGlvbkZyb21PclRvQXR0cigndG8nLCB3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb24pIH0pLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uRm9ybWF0dGVkID0geWllbGQgc2VuZFR4SGVscGVyLnBvcHVsYXRlR2FzUHJpY2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbkZvcm1hdHRlZCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIHNlbmRUeEhlbHBlci5jaGVja1JldmVydEJlZm9yZVNlbmRpbmcodHJhbnNhY3Rpb25Gb3JtYXR0ZWQpO1xuICAgICAgICAgICAgICAgICAgICBzZW5kVHhIZWxwZXIuZW1pdFNlbmRpbmcodHJhbnNhY3Rpb25Gb3JtYXR0ZWQpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2FsbGV0O1xuICAgICAgICAgICAgICAgICAgICBpZiAod2ViM0NvbnRleHQud2FsbGV0ICYmICFpc051bGxpc2godHJhbnNhY3Rpb25Gb3JtYXR0ZWQuZnJvbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldCA9IHdlYjNDb250ZXh0LndhbGxldC5nZXQodHJhbnNhY3Rpb25Gb3JtYXR0ZWQuZnJvbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25IYXNoID0geWllbGQgc2VuZFR4SGVscGVyLnNpZ25BbmRTZW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR4OiB0cmFuc2FjdGlvbkZvcm1hdHRlZCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uSGFzaEZvcm1hdHRlZCA9IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIHRyYW5zYWN0aW9uSGFzaCwgcmV0dXJuRm9ybWF0KTtcbiAgICAgICAgICAgICAgICAgICAgc2VuZFR4SGVscGVyLmVtaXRTZW50KHRyYW5zYWN0aW9uRm9ybWF0dGVkKTtcbiAgICAgICAgICAgICAgICAgICAgc2VuZFR4SGVscGVyLmVtaXRUcmFuc2FjdGlvbkhhc2godHJhbnNhY3Rpb25IYXNoRm9ybWF0dGVkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25SZWNlaXB0ID0geWllbGQgd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25IYXNoLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQgPSBzZW5kVHhIZWxwZXIuZ2V0UmVjZWlwdFdpdGhFdmVudHMoZm9ybWF0KHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSwgdHJhbnNhY3Rpb25SZWNlaXB0LCByZXR1cm5Gb3JtYXQpKTtcbiAgICAgICAgICAgICAgICAgICAgc2VuZFR4SGVscGVyLmVtaXRSZWNlaXB0KHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeWllbGQgc2VuZFR4SGVscGVyLmhhbmRsZVJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVjZWlwdDogdHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHg6IHRyYW5zYWN0aW9uRm9ybWF0dGVkLFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbmRUeEhlbHBlci5lbWl0Q29uZmlybWF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlY2VpcHQ6IHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uSGFzaCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoeWllbGQgc2VuZFR4SGVscGVyLmhhbmRsZUVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHg6IHRyYW5zYWN0aW9uRm9ybWF0dGVkLFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBwcm9taUV2ZW50O1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguc2VuZFNpZ25lZFRyYW5zYWN0aW9ufVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VuZFNpZ25lZFRyYW5zYWN0aW9uKHdlYjNDb250ZXh0LCBzaWduZWRUcmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0LCBvcHRpb25zID0geyBjaGVja1JldmVydEJlZm9yZVNlbmRpbmc6IHRydWUgfSkge1xuICAgIC8vIFRPRE8gLSBQcm9taXNlIHJldHVybmVkIGluIGZ1bmN0aW9uIGFyZ3VtZW50IHdoZXJlIGEgdm9pZCByZXR1cm4gd2FzIGV4cGVjdGVkXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1taXN1c2VkLXByb21pc2VzXG4gICAgY29uc3QgcHJvbWlFdmVudCA9IG5ldyBXZWIzUHJvbWlFdmVudCgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgICAoKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbmRUeEhlbHBlciA9IG5ldyBTZW5kVHhIZWxwZXIoe1xuICAgICAgICAgICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgICAgICAgICAgcHJvbWlFdmVudCxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuRm9ybWF0LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vIEZvcm1hdHRpbmcgc2lnbmVkVHJhbnNhY3Rpb24gdG8gYmUgc2VuZCB0byBSUEMgZW5kcG9pbnRcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduZWRUcmFuc2FjdGlvbkZvcm1hdHRlZEhleCA9IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCBzaWduZWRUcmFuc2FjdGlvbiwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgICAgICAgICBjb25zdCB1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbiA9IFRyYW5zYWN0aW9uRmFjdG9yeS5mcm9tU2VyaWFsaXplZERhdGEoYnl0ZXNUb1VpbnQ4QXJyYXkoaGV4VG9CeXRlcyhzaWduZWRUcmFuc2FjdGlvbkZvcm1hdHRlZEhleCkpKTtcbiAgICAgICAgICAgICAgICBjb25zdCB1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbldpdGhGcm9tID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbi50b0pTT04oKSksIHsgXG4gICAgICAgICAgICAgICAgICAgIC8vIFNvbWUgcHJvdmlkZXJzIHdpbGwgZGVmYXVsdCBgZnJvbWAgdG8gYWRkcmVzcygwKSBjYXVzaW5nIHRoZSBlcnJvclxuICAgICAgICAgICAgICAgICAgICAvLyByZXBvcnRlZCBmcm9tIGBldGhfY2FsbGAgdG8gbm90IGJlIHRoZSByZWFzb24gdGhlIHVzZXIncyB0eCBmYWlsZWRcbiAgICAgICAgICAgICAgICAgICAgLy8gZS5nLiBgZXRoX2NhbGxgIHdpbGwgcmV0dXJuIGFuIE91dCBvZiBHYXMgZXJyb3IgZm9yIGEgZmFpbGVkXG4gICAgICAgICAgICAgICAgICAgIC8vIHNtYXJ0IGNvbnRyYWN0IGV4ZWN1dGlvbiBjb250cmFjdCwgYmVjYXVzZSB0aGUgc2VuZGVyLCBhZGRyZXNzKDApLFxuICAgICAgICAgICAgICAgICAgICAvLyBoYXMgbm8gYmFsYW5jZSB0byBwYXkgZm9yIHRoZSBnYXMgb2YgdGhlIHRyYW5zYWN0aW9uIGV4ZWN1dGlvblxuICAgICAgICAgICAgICAgICAgICBmcm9tOiB1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbi5nZXRTZW5kZXJBZGRyZXNzKCkudG9TdHJpbmcoKSB9KTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHYsIHIsIHMgfSA9IHVuU2VyaWFsaXplZFRyYW5zYWN0aW9uV2l0aEZyb20sIHR4V2l0aG91dFNpZ1BhcmFtcyA9IF9fcmVzdCh1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbldpdGhGcm9tLCBbXCJ2XCIsIFwiclwiLCBcInNcIl0pO1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBzZW5kVHhIZWxwZXIuY2hlY2tSZXZlcnRCZWZvcmVTZW5kaW5nKHR4V2l0aG91dFNpZ1BhcmFtcyk7XG4gICAgICAgICAgICAgICAgICAgIHNlbmRUeEhlbHBlci5lbWl0U2VuZGluZyhzaWduZWRUcmFuc2FjdGlvbkZvcm1hdHRlZEhleCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uSGFzaCA9IHlpZWxkIHRyeVNlbmRUcmFuc2FjdGlvbih3ZWIzQ29udGV4dCwgKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV0aFJwY01ldGhvZHMuc2VuZFJhd1RyYW5zYWN0aW9uKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCBzaWduZWRUcmFuc2FjdGlvbkZvcm1hdHRlZEhleCk7XG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgc2VuZFR4SGVscGVyLmVtaXRTZW50KHNpZ25lZFRyYW5zYWN0aW9uRm9ybWF0dGVkSGV4KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25IYXNoRm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMzMicgfSwgdHJhbnNhY3Rpb25IYXNoLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICAgICAgICAgICAgICBzZW5kVHhIZWxwZXIuZW1pdFRyYW5zYWN0aW9uSGFzaCh0cmFuc2FjdGlvbkhhc2hGb3JtYXR0ZWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvblJlY2VpcHQgPSB5aWVsZCB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbkhhc2gsIHJldHVybkZvcm1hdCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCA9IHNlbmRUeEhlbHBlci5nZXRSZWNlaXB0V2l0aEV2ZW50cyhmb3JtYXQodHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hLCB0cmFuc2FjdGlvblJlY2VpcHQsIHJldHVybkZvcm1hdCkpO1xuICAgICAgICAgICAgICAgICAgICBzZW5kVHhIZWxwZXIuZW1pdFJlY2VpcHQodHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh5aWVsZCBzZW5kVHhIZWxwZXIuaGFuZGxlUmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWNlaXB0OiB0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eDogdW5TZXJpYWxpemVkVHJhbnNhY3Rpb25XaXRoRnJvbSxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICBzZW5kVHhIZWxwZXIuZW1pdENvbmZpcm1hdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWNlaXB0OiB0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbkhhc2gsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHlpZWxkIHNlbmRUeEhlbHBlci5oYW5kbGVFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHR4OiB1blNlcmlhbGl6ZWRUcmFuc2FjdGlvbldpdGhGcm9tLFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBwcm9taUV2ZW50O1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguc2lnbn1cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ24od2ViM0NvbnRleHQsIG1lc3NhZ2UsIGFkZHJlc3NPckluZGV4LCByZXR1cm5Gb3JtYXQpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZUZvcm1hdHRlZCA9IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCBtZXNzYWdlLCBERUZBVUxUX1JFVFVSTl9GT1JNQVQpO1xuICAgICAgICBpZiAoKF9hID0gd2ViM0NvbnRleHQud2FsbGV0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0KGFkZHJlc3NPckluZGV4KSkge1xuICAgICAgICAgICAgY29uc3Qgd2FsbGV0ID0gd2ViM0NvbnRleHQud2FsbGV0LmdldChhZGRyZXNzT3JJbmRleCk7XG4gICAgICAgICAgICBjb25zdCBzaWduZWQgPSB3YWxsZXQuc2lnbihtZXNzYWdlRm9ybWF0dGVkKTtcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXQoU2lnbmF0dXJlT2JqZWN0U2NoZW1hLCBzaWduZWQsIHJldHVybkZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBhZGRyZXNzT3JJbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTaWduYXR1cmVFcnJvcihtZXNzYWdlLCAnUlBDIG1ldGhvZCBcImV0aF9zaWduXCIgZG9lcyBub3Qgc3VwcG9ydCBpbmRleCBzaWduYXR1cmVzJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLnNpZ24od2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGFkZHJlc3NPckluZGV4LCBtZXNzYWdlRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLnNpZ25UcmFuc2FjdGlvbn1cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25UcmFuc2FjdGlvbih3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb24sIHJldHVybkZvcm1hdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5zaWduVHJhbnNhY3Rpb24od2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGZvcm1hdFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLCBFVEhfREFUQV9GT1JNQVQpKTtcbiAgICAgICAgLy8gU29tZSBjbGllbnRzIG9ubHkgcmV0dXJuIHRoZSBlbmNvZGVkIHNpZ25lZCB0cmFuc2FjdGlvbiAoZS5nLiBHYW5hY2hlKVxuICAgICAgICAvLyB3aGlsZSBjbGllbnRzIHN1Y2ggYXMgR2V0aCByZXR1cm4gdGhlIGRlc2lyZWQgU2lnbmVkVHJhbnNhY3Rpb25JbmZvQVBJIG9iamVjdFxuICAgICAgICByZXR1cm4gaXNTdHJpbmcocmVzcG9uc2UpXG4gICAgICAgICAgICA/IGRlY29kZVNpZ25lZFRyYW5zYWN0aW9uKHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQsIHtcbiAgICAgICAgICAgICAgICBmaWxsSW5wdXRBbmREYXRhOiB0cnVlLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgIHJhdzogZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMnIH0sIHJlc3BvbnNlLnJhdywgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgICAgICB0eDogZm9ybWF0VHJhbnNhY3Rpb24ocmVzcG9uc2UudHgsIHJldHVybkZvcm1hdCwge1xuICAgICAgICAgICAgICAgICAgICBmaWxsSW5wdXRBbmREYXRhOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfTtcbiAgICB9KTtcbn1cbi8vIFRPRE8gRGVjaWRlIHdoYXQgdG8gZG8gd2l0aCB0cmFuc2FjdGlvbi50b1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL0NoYWluU2FmZS93ZWIzLmpzL3B1bGwvNDUyNSNpc3N1ZWNvbW1lbnQtOTgyMzMwMDc2XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5jYWxsfVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY2FsbCh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb24sIGJsb2NrTnVtYmVyID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBibG9ja051bWJlckZvcm1hdHRlZCA9IGlzQmxvY2tUYWcoYmxvY2tOdW1iZXIpXG4gICAgICAgICAgICA/IGJsb2NrTnVtYmVyXG4gICAgICAgICAgICA6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGJsb2NrTnVtYmVyLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuY2FsbCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgZm9ybWF0VHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIEVUSF9EQVRBX0ZPUk1BVCksIGJsb2NrTnVtYmVyRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCByZXNwb25zZSwgcmV0dXJuRm9ybWF0KTtcbiAgICB9KTtcbn1cbi8vIFRPRE8gLSBJbnZlc3RpZ2F0ZSB3aGV0aGVyIHJlc3BvbnNlIGlzIHBhZGRlZCBhcyAxLnggZG9jcyBzdWdnZXN0XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5lc3RpbWF0ZUdhc31cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVzdGltYXRlR2FzKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbiwgYmxvY2tOdW1iZXIgPSB3ZWIzQ29udGV4dC5kZWZhdWx0QmxvY2ssIHJldHVybkZvcm1hdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uRm9ybWF0dGVkID0gZm9ybWF0VHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgIGNvbnN0IGJsb2NrTnVtYmVyRm9ybWF0dGVkID0gaXNCbG9ja1RhZyhibG9ja051bWJlcilcbiAgICAgICAgICAgID8gYmxvY2tOdW1iZXJcbiAgICAgICAgICAgIDogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgYmxvY2tOdW1iZXIsIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5lc3RpbWF0ZUdhcyh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgdHJhbnNhY3Rpb25Gb3JtYXR0ZWQsIGJsb2NrTnVtYmVyRm9ybWF0dGVkKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLy8gVE9ETyAtIEFkZCBpbnB1dCBmb3JtYXR0aW5nIHRvIGZpbHRlclxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0UGFzdExvZ3N9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dzKHdlYjNDb250ZXh0LCBmaWx0ZXIsIHJldHVybkZvcm1hdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIC8vIGZvcm1hdCB0eXBlIGJpZ2ludCBvciBudW1iZXIgdG9CbG9jayBhbmQgZnJvbUJsb2NrIHRvIGhleHN0cmluZy5cbiAgICAgICAgbGV0IHsgdG9CbG9jaywgZnJvbUJsb2NrIH0gPSBmaWx0ZXI7XG4gICAgICAgIGlmICghaXNOdWxsaXNoKHRvQmxvY2spKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRvQmxvY2sgPT09ICdudW1iZXInIHx8IHR5cGVvZiB0b0Jsb2NrID09PSAnYmlnaW50Jykge1xuICAgICAgICAgICAgICAgIHRvQmxvY2sgPSBudW1iZXJUb0hleCh0b0Jsb2NrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzTnVsbGlzaChmcm9tQmxvY2spKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZyb21CbG9jayA9PT0gJ251bWJlcicgfHwgdHlwZW9mIGZyb21CbG9jayA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgICAgICAgICBmcm9tQmxvY2sgPSBudW1iZXJUb0hleChmcm9tQmxvY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZEZpbHRlciA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZmlsdGVyKSwgeyBmcm9tQmxvY2ssIHRvQmxvY2sgfSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZXRoUnBjTWV0aG9kcy5nZXRMb2dzKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCBmb3JtYXR0ZWRGaWx0ZXIpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSByZXNwb25zZS5tYXAocmVzID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcmVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0KGxvZ1NjaGVtYSwgcmVzLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbn1cbi8qKlxuICogVmlldyBhZGRpdGlvbmFsIGRvY3VtZW50YXRpb25zIGhlcmU6IHtAbGluayBXZWIzRXRoLmdldENoYWluSWR9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDaGFpbklkKHdlYjNDb250ZXh0LCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0Q2hhaW5JZCh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlcik7XG4gICAgICAgIHJldHVybiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBcbiAgICAgICAgLy8gUmVzcG9uc2UgaXMgbnVtYmVyIGluIGhleCBmb3JtYXR0ZWQgc3RyaW5nXG4gICAgICAgIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguZ2V0UHJvb2Z9XG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgKHtAbGluayBXZWIzQ29udGV4dH0pIFdlYjMgY29uZmlndXJhdGlvbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGluZ3Mgc3VjaCBhcyB0aGUgcHJvdmlkZXIsIHJlcXVlc3QgbWFuYWdlciwgd2FsbGV0LCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9vZih3ZWIzQ29udGV4dCwgYWRkcmVzcywgc3RvcmFnZUtleXMsIGJsb2NrTnVtYmVyID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBzdG9yYWdlS2V5c0Zvcm1hdHRlZCA9IHN0b3JhZ2VLZXlzLm1hcChzdG9yYWdlS2V5ID0+IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCBzdG9yYWdlS2V5LCBFVEhfREFUQV9GT1JNQVQpKTtcbiAgICAgICAgY29uc3QgYmxvY2tOdW1iZXJGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKGJsb2NrTnVtYmVyKVxuICAgICAgICAgICAgPyBibG9ja051bWJlclxuICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBibG9ja051bWJlciwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldFByb29mKHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLCBhZGRyZXNzLCBzdG9yYWdlS2V5c0Zvcm1hdHRlZCwgYmxvY2tOdW1iZXJGb3JtYXR0ZWQpO1xuICAgICAgICByZXR1cm4gZm9ybWF0KGFjY291bnRTY2hlbWEsIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLy8gVE9ETyBUaHJvd2luZyBhbiBlcnJvciB3aXRoIEdldGgsIGJ1dCBub3QgSW5mdXJhXG4vLyBUT0RPIGdhc1VzZWRSYXRpbyBhbmQgcmV3YXJkIG5vdCBmb3JtYXR0aW5nXG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5nZXRGZWVIaXN0b3J5fVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmVlSGlzdG9yeSh3ZWIzQ29udGV4dCwgYmxvY2tDb3VudCwgbmV3ZXN0QmxvY2sgPSB3ZWIzQ29udGV4dC5kZWZhdWx0QmxvY2ssIHJld2FyZFBlcmNlbnRpbGVzLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBibG9ja0NvdW50Rm9ybWF0dGVkID0gZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgYmxvY2tDb3VudCwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgbmV3ZXN0QmxvY2tGb3JtYXR0ZWQgPSBpc0Jsb2NrVGFnKG5ld2VzdEJsb2NrKVxuICAgICAgICAgICAgPyBuZXdlc3RCbG9ja1xuICAgICAgICAgICAgOiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCBuZXdlc3RCbG9jaywgRVRIX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmV3YXJkUGVyY2VudGlsZXNGb3JtYXR0ZWQgPSBmb3JtYXQoe1xuICAgICAgICAgICAgdHlwZTogJ2FycmF5JyxcbiAgICAgICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgICAgICAgZm9ybWF0OiAndWludCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LCByZXdhcmRQZXJjZW50aWxlcywgTlVNQkVSX0RBVEFfRk9STUFUKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEZlZUhpc3Rvcnkod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGJsb2NrQ291bnRGb3JtYXR0ZWQsIG5ld2VzdEJsb2NrRm9ybWF0dGVkLCByZXdhcmRQZXJjZW50aWxlc0Zvcm1hdHRlZCk7XG4gICAgICAgIHJldHVybiBmb3JtYXQoZmVlSGlzdG9yeVNjaGVtYSwgcmVzcG9uc2UsIHJldHVybkZvcm1hdCk7XG4gICAgfSk7XG59XG4vKipcbiAqIFZpZXcgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9ucyBoZXJlOiB7QGxpbmsgV2ViM0V0aC5jcmVhdGVBY2Nlc3NMaXN0fVxuICogQHBhcmFtIHdlYjNDb250ZXh0ICh7QGxpbmsgV2ViM0NvbnRleHR9KSBXZWIzIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRoYXQgY29udGFpbnMgdGhpbmdzIHN1Y2ggYXMgdGhlIHByb3ZpZGVyLCByZXF1ZXN0IG1hbmFnZXIsIHdhbGxldCwgZXRjLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWNjZXNzTGlzdCh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb24sIGJsb2NrTnVtYmVyID0gd2ViM0NvbnRleHQuZGVmYXVsdEJsb2NrLCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBibG9ja051bWJlckZvcm1hdHRlZCA9IGlzQmxvY2tUYWcoYmxvY2tOdW1iZXIpXG4gICAgICAgICAgICA/IGJsb2NrTnVtYmVyXG4gICAgICAgICAgICA6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGJsb2NrTnVtYmVyLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9ICh5aWVsZCBldGhScGNNZXRob2RzLmNyZWF0ZUFjY2Vzc0xpc3Qod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIGZvcm1hdFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLCBFVEhfREFUQV9GT1JNQVQpLCBibG9ja051bWJlckZvcm1hdHRlZCkpO1xuICAgICAgICByZXR1cm4gZm9ybWF0KGFjY2Vzc0xpc3RSZXN1bHRTY2hlbWEsIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBWaWV3IGFkZGl0aW9uYWwgZG9jdW1lbnRhdGlvbnMgaGVyZToge0BsaW5rIFdlYjNFdGguc2lnblR5cGVkRGF0YX1cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25UeXBlZERhdGEod2ViM0NvbnRleHQsIGFkZHJlc3MsIHR5cGVkRGF0YSwgdXNlTGVnYWN5LCByZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGV0aFJwY01ldGhvZHMuc2lnblR5cGVkRGF0YSh3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgYWRkcmVzcywgdHlwZWREYXRhLCB1c2VMZWdhY3kpO1xuICAgICAgICByZXR1cm4gZm9ybWF0KHsgZm9ybWF0OiAnYnl0ZXMnIH0sIHJlc3BvbnNlLCByZXR1cm5Gb3JtYXQpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnBjX21ldGhvZF93cmFwcGVycy5qcy5tYXAiXSwibmFtZXMiOlsiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJ2YWx1ZSIsInJlc29sdmUiLCJQcm9taXNlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwiX19yZXN0IiwicyIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkVUSF9EQVRBX0ZPUk1BVCIsIkRFRkFVTFRfUkVUVVJOX0ZPUk1BVCIsIldlYjNQcm9taUV2ZW50IiwiZm9ybWF0IiwiaGV4VG9CeXRlcyIsImJ5dGVzVG9VaW50OEFycmF5IiwibnVtYmVyVG9IZXgiLCJUcmFuc2FjdGlvbkZhY3RvcnkiLCJpc0Jsb2NrVGFnIiwiaXNCeXRlcyIsImlzTnVsbGlzaCIsImlzU3RyaW5nIiwiU2lnbmF0dXJlRXJyb3IiLCJldGhScGNNZXRob2RzIiwiZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24iLCJhY2NvdW50U2NoZW1hIiwiYmxvY2tTY2hlbWEiLCJmZWVIaXN0b3J5U2NoZW1hIiwibG9nU2NoZW1hIiwidHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hIiwiYWNjZXNzTGlzdFJlc3VsdFNjaGVtYSIsIlNpZ25hdHVyZU9iamVjdFNjaGVtYSIsImdldFRyYW5zYWN0aW9uRnJvbU9yVG9BdHRyIiwiZm9ybWF0VHJhbnNhY3Rpb24iLCJ0cnlTZW5kVHJhbnNhY3Rpb24iLCJ3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwiTlVNQkVSX0RBVEFfRk9STUFUIiwiU2VuZFR4SGVscGVyIiwiZ2V0UHJvdG9jb2xWZXJzaW9uIiwid2ViM0NvbnRleHQiLCJyZXF1ZXN0TWFuYWdlciIsImlzU3luY2luZyIsImdldFN5bmNpbmciLCJnZXRDb2luYmFzZSIsImlzTWluaW5nIiwiZ2V0TWluaW5nIiwiZ2V0SGFzaFJhdGUiLCJyZXR1cm5Gb3JtYXQiLCJyZXNwb25zZSIsImdldEdhc1ByaWNlIiwiZ2V0QmxvY2tOdW1iZXIiLCJnZXRCYWxhbmNlIiwiYWRkcmVzcyIsImJsb2NrTnVtYmVyIiwiZGVmYXVsdEJsb2NrIiwiYmxvY2tOdW1iZXJGb3JtYXR0ZWQiLCJnZXRTdG9yYWdlQXQiLCJzdG9yYWdlU2xvdCIsInN0b3JhZ2VTbG90Rm9ybWF0dGVkIiwiZ2V0Q29kZSIsImdldEJsb2NrIiwiYmxvY2siLCJoeWRyYXRlZCIsImJsb2NrSGFzaEZvcm1hdHRlZCIsImdldEJsb2NrQnlIYXNoIiwiZ2V0QmxvY2tCeU51bWJlciIsImdldEJsb2NrVHJhbnNhY3Rpb25Db3VudCIsImdldEJsb2NrVHJhbnNhY3Rpb25Db3VudEJ5SGFzaCIsImdldEJsb2NrVHJhbnNhY3Rpb25Db3VudEJ5TnVtYmVyIiwiZ2V0QmxvY2tVbmNsZUNvdW50IiwiZ2V0VW5jbGVDb3VudEJ5QmxvY2tIYXNoIiwiZ2V0VW5jbGVDb3VudEJ5QmxvY2tOdW1iZXIiLCJnZXRVbmNsZSIsInVuY2xlSW5kZXgiLCJ1bmNsZUluZGV4Rm9ybWF0dGVkIiwiZ2V0VW5jbGVCeUJsb2NrSGFzaEFuZEluZGV4IiwiZ2V0VW5jbGVCeUJsb2NrTnVtYmVyQW5kSW5kZXgiLCJnZXRUcmFuc2FjdGlvbiIsInRyYW5zYWN0aW9uSGFzaCIsInRyYW5zYWN0aW9uSGFzaEZvcm1hdHRlZCIsImdldFRyYW5zYWN0aW9uQnlIYXNoIiwiZmlsbElucHV0QW5kRGF0YSIsImdldFBlbmRpbmdUcmFuc2FjdGlvbnMiLCJtYXAiLCJ0cmFuc2FjdGlvbiIsImdldFRyYW5zYWN0aW9uRnJvbUJsb2NrIiwidHJhbnNhY3Rpb25JbmRleCIsInRyYW5zYWN0aW9uSW5kZXhGb3JtYXR0ZWQiLCJnZXRUcmFuc2FjdGlvbkJ5QmxvY2tIYXNoQW5kSW5kZXgiLCJnZXRUcmFuc2FjdGlvbkJ5QmxvY2tOdW1iZXJBbmRJbmRleCIsImdldFRyYW5zYWN0aW9uUmVjZWlwdCIsImdldFRyYW5zYWN0aW9uQ291bnQiLCJzZW5kVHJhbnNhY3Rpb24iLCJvcHRpb25zIiwiY2hlY2tSZXZlcnRCZWZvcmVTZW5kaW5nIiwicHJvbWlFdmVudCIsInNldEltbWVkaWF0ZSIsInNlbmRUeEhlbHBlciIsInRyYW5zYWN0aW9uRm9ybWF0dGVkIiwiYXNzaWduIiwiZnJvbSIsInRvIiwicG9wdWxhdGVHYXNQcmljZSIsImVtaXRTZW5kaW5nIiwid2FsbGV0IiwiZ2V0Iiwic2lnbkFuZFNlbmQiLCJ0eCIsImVtaXRTZW50IiwiZW1pdFRyYW5zYWN0aW9uSGFzaCIsInRyYW5zYWN0aW9uUmVjZWlwdCIsInRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCIsImdldFJlY2VpcHRXaXRoRXZlbnRzIiwiZW1pdFJlY2VpcHQiLCJoYW5kbGVSZXNvbHZlIiwicmVjZWlwdCIsImVtaXRDb25maXJtYXRpb24iLCJlcnJvciIsImhhbmRsZUVycm9yIiwic2VuZFNpZ25lZFRyYW5zYWN0aW9uIiwic2lnbmVkVHJhbnNhY3Rpb24iLCJzaWduZWRUcmFuc2FjdGlvbkZvcm1hdHRlZEhleCIsInVuU2VyaWFsaXplZFRyYW5zYWN0aW9uIiwiZnJvbVNlcmlhbGl6ZWREYXRhIiwidW5TZXJpYWxpemVkVHJhbnNhY3Rpb25XaXRoRnJvbSIsInRvSlNPTiIsImdldFNlbmRlckFkZHJlc3MiLCJ0b1N0cmluZyIsInYiLCJyIiwidHhXaXRob3V0U2lnUGFyYW1zIiwic2VuZFJhd1RyYW5zYWN0aW9uIiwic2lnbiIsIm1lc3NhZ2UiLCJhZGRyZXNzT3JJbmRleCIsIl9hIiwibWVzc2FnZUZvcm1hdHRlZCIsInNpZ25lZCIsInNpZ25UcmFuc2FjdGlvbiIsInJhdyIsImVzdGltYXRlR2FzIiwiZ2V0TG9ncyIsImZpbHRlciIsInRvQmxvY2siLCJmcm9tQmxvY2siLCJmb3JtYXR0ZWRGaWx0ZXIiLCJyZXMiLCJnZXRDaGFpbklkIiwiZ2V0UHJvb2YiLCJzdG9yYWdlS2V5cyIsInN0b3JhZ2VLZXlzRm9ybWF0dGVkIiwic3RvcmFnZUtleSIsImdldEZlZUhpc3RvcnkiLCJibG9ja0NvdW50IiwibmV3ZXN0QmxvY2siLCJyZXdhcmRQZXJjZW50aWxlcyIsImJsb2NrQ291bnRGb3JtYXR0ZWQiLCJuZXdlc3RCbG9ja0Zvcm1hdHRlZCIsInJld2FyZFBlcmNlbnRpbGVzRm9ybWF0dGVkIiwidHlwZSIsIml0ZW1zIiwiY3JlYXRlQWNjZXNzTGlzdCIsInNpZ25UeXBlZERhdGEiLCJ0eXBlZERhdGEiLCJ1c2VMZWdhY3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/schemas.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/schemas.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignatureObjectSchema: () => (/* binding */ SignatureObjectSchema),\n/* harmony export */   accessListItemSchema: () => (/* binding */ accessListItemSchema),\n/* harmony export */   accessListResultSchema: () => (/* binding */ accessListResultSchema),\n/* harmony export */   accessListSchema: () => (/* binding */ accessListSchema),\n/* harmony export */   accountSchema: () => (/* binding */ accountSchema),\n/* harmony export */   blockHeaderSchema: () => (/* binding */ blockHeaderSchema),\n/* harmony export */   blockSchema: () => (/* binding */ blockSchema),\n/* harmony export */   chainSchema: () => (/* binding */ chainSchema),\n/* harmony export */   customChainSchema: () => (/* binding */ customChainSchema),\n/* harmony export */   feeHistorySchema: () => (/* binding */ feeHistorySchema),\n/* harmony export */   hardforkSchema: () => (/* binding */ hardforkSchema),\n/* harmony export */   logSchema: () => (/* binding */ logSchema),\n/* harmony export */   storageProofSchema: () => (/* binding */ storageProofSchema),\n/* harmony export */   syncSchema: () => (/* binding */ syncSchema),\n/* harmony export */   transactionInfoSchema: () => (/* binding */ transactionInfoSchema),\n/* harmony export */   transactionReceiptSchema: () => (/* binding */ transactionReceiptSchema),\n/* harmony export */   transactionSchema: () => (/* binding */ transactionSchema),\n/* harmony export */   withdrawalsSchema: () => (/* binding */ withdrawalsSchema)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ const accessListItemSchema = {\n    type: \"object\",\n    properties: {\n        address: {\n            format: \"address\"\n        },\n        storageKeys: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        }\n    }\n};\nconst accessListSchema = {\n    type: \"array\",\n    items: Object.assign({}, accessListItemSchema)\n};\nconst accessListResultSchema = {\n    type: \"object\",\n    properties: {\n        accessList: Object.assign({}, accessListSchema),\n        gasUsed: {\n            type: \"string\"\n        }\n    }\n};\nconst chainSchema = {\n    type: \"string\",\n    enum: [\n        \"goerli\",\n        \"kovan\",\n        \"mainnet\",\n        \"rinkeby\",\n        \"ropsten\",\n        \"sepolia\"\n    ]\n};\nconst hardforkSchema = {\n    type: \"string\",\n    enum: [\n        \"arrowGlacier\",\n        \"berlin\",\n        \"byzantium\",\n        \"chainstart\",\n        \"constantinople\",\n        \"dao\",\n        \"homestead\",\n        \"istanbul\",\n        \"london\",\n        \"merge\",\n        \"muirGlacier\",\n        \"petersburg\",\n        \"shanghai\",\n        \"spuriousDragon\",\n        \"tangerineWhistle\"\n    ]\n};\nconst customChainSchema = {\n    type: \"object\",\n    properties: {\n        name: {\n            format: \"string\"\n        },\n        networkId: {\n            format: \"uint\"\n        },\n        chainId: {\n            format: \"uint\"\n        }\n    }\n};\nconst transactionSchema = {\n    type: \"object\",\n    properties: {\n        from: {\n            format: \"address\"\n        },\n        to: {\n            oneOf: [\n                {\n                    format: \"address\"\n                },\n                {\n                    type: \"null\"\n                }\n            ]\n        },\n        value: {\n            format: \"uint\"\n        },\n        gas: {\n            format: \"uint\"\n        },\n        gasPrice: {\n            format: \"uint\"\n        },\n        effectiveGasPrice: {\n            format: \"uint\"\n        },\n        type: {\n            format: \"uint\"\n        },\n        maxFeePerGas: {\n            format: \"uint\"\n        },\n        maxPriorityFeePerGas: {\n            format: \"uint\"\n        },\n        accessList: Object.assign({}, accessListSchema),\n        data: {\n            format: \"bytes\"\n        },\n        input: {\n            format: \"bytes\"\n        },\n        nonce: {\n            format: \"uint\"\n        },\n        chain: Object.assign({}, chainSchema),\n        hardfork: Object.assign({}, hardforkSchema),\n        chainId: {\n            format: \"uint\"\n        },\n        networkId: {\n            format: \"uint\"\n        },\n        common: {\n            type: \"object\",\n            properties: {\n                customChain: Object.assign({}, customChainSchema),\n                baseChain: Object.assign({}, chainSchema),\n                hardfork: Object.assign({}, hardforkSchema)\n            }\n        },\n        gasLimit: {\n            format: \"uint\"\n        },\n        v: {\n            format: \"uint\"\n        },\n        r: {\n            format: \"bytes32\"\n        },\n        s: {\n            format: \"bytes32\"\n        }\n    }\n};\nconst transactionInfoSchema = {\n    type: \"object\",\n    properties: Object.assign(Object.assign({}, transactionSchema.properties), {\n        blockHash: {\n            format: \"bytes32\"\n        },\n        blockNumber: {\n            format: \"uint\"\n        },\n        hash: {\n            format: \"bytes32\"\n        },\n        transactionIndex: {\n            format: \"uint\"\n        },\n        from: {\n            format: \"address\"\n        },\n        to: {\n            oneOf: [\n                {\n                    format: \"address\"\n                },\n                {\n                    type: \"null\"\n                }\n            ]\n        },\n        value: {\n            format: \"uint\"\n        },\n        gas: {\n            format: \"uint\"\n        },\n        gasPrice: {\n            format: \"uint\"\n        },\n        effectiveGasPrice: {\n            format: \"uint\"\n        },\n        type: {\n            format: \"uint\"\n        },\n        maxFeePerGas: {\n            format: \"uint\"\n        },\n        maxPriorityFeePerGas: {\n            format: \"uint\"\n        },\n        accessList: Object.assign({}, accessListSchema),\n        data: {\n            format: \"bytes\"\n        },\n        input: {\n            format: \"bytes\"\n        },\n        nonce: {\n            format: \"uint\"\n        },\n        gasLimit: {\n            format: \"uint\"\n        },\n        v: {\n            format: \"uint\"\n        },\n        r: {\n            format: \"bytes32\"\n        },\n        s: {\n            format: \"bytes32\"\n        }\n    })\n};\nconst blockSchema = {\n    type: \"object\",\n    properties: {\n        parentHash: {\n            format: \"bytes32\"\n        },\n        sha3Uncles: {\n            format: \"bytes32\"\n        },\n        miner: {\n            format: \"bytes\"\n        },\n        stateRoot: {\n            format: \"bytes32\"\n        },\n        transactionsRoot: {\n            format: \"bytes32\"\n        },\n        receiptsRoot: {\n            format: \"bytes32\"\n        },\n        logsBloom: {\n            format: \"bytes256\"\n        },\n        difficulty: {\n            format: \"uint\"\n        },\n        number: {\n            format: \"uint\"\n        },\n        gasLimit: {\n            format: \"uint\"\n        },\n        gasUsed: {\n            format: \"uint\"\n        },\n        timestamp: {\n            format: \"uint\"\n        },\n        extraData: {\n            format: \"bytes\"\n        },\n        mixHash: {\n            format: \"bytes32\"\n        },\n        nonce: {\n            format: \"uint\"\n        },\n        totalDifficulty: {\n            format: \"uint\"\n        },\n        baseFeePerGas: {\n            format: \"uint\"\n        },\n        size: {\n            format: \"uint\"\n        },\n        transactions: {\n            oneOf: [\n                {\n                    type: \"array\",\n                    items: Object.assign({}, transactionInfoSchema)\n                },\n                {\n                    type: \"array\",\n                    items: {\n                        format: \"bytes32\"\n                    }\n                }\n            ]\n        },\n        uncles: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        },\n        hash: {\n            format: \"bytes32\"\n        }\n    }\n};\nconst withdrawalsSchema = {\n    type: \"object\",\n    properties: {\n        index: {\n            format: \"uint\"\n        },\n        validatorIndex: {\n            format: \"uint\"\n        },\n        address: {\n            format: \"address\"\n        },\n        amount: {\n            format: \"uint\"\n        }\n    }\n};\nconst blockHeaderSchema = {\n    type: \"object\",\n    properties: {\n        author: {\n            format: \"bytes32\"\n        },\n        hash: {\n            format: \"bytes32\"\n        },\n        parentHash: {\n            format: \"bytes32\"\n        },\n        receiptsRoot: {\n            format: \"bytes32\"\n        },\n        miner: {\n            format: \"bytes\"\n        },\n        stateRoot: {\n            format: \"bytes32\"\n        },\n        transactionsRoot: {\n            format: \"bytes32\"\n        },\n        withdrawalsRoot: {\n            format: \"bytes32\"\n        },\n        logsBloom: {\n            format: \"bytes256\"\n        },\n        difficulty: {\n            format: \"uint\"\n        },\n        totalDifficulty: {\n            format: \"uint\"\n        },\n        number: {\n            format: \"uint\"\n        },\n        gasLimit: {\n            format: \"uint\"\n        },\n        gasUsed: {\n            format: \"uint\"\n        },\n        timestamp: {\n            format: \"uint\"\n        },\n        extraData: {\n            format: \"bytes\"\n        },\n        nonce: {\n            format: \"uint\"\n        },\n        sha3Uncles: {\n            format: \"bytes32\"\n        },\n        size: {\n            format: \"uint\"\n        },\n        baseFeePerGas: {\n            format: \"uint\"\n        },\n        excessDataGas: {\n            format: \"uint\"\n        },\n        mixHash: {\n            format: \"bytes32\"\n        },\n        transactions: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        },\n        uncles: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        },\n        withdrawals: {\n            type: \"array\",\n            items: Object.assign({}, withdrawalsSchema)\n        }\n    }\n};\nconst logSchema = {\n    type: \"object\",\n    properties: {\n        removed: {\n            format: \"bool\"\n        },\n        logIndex: {\n            format: \"uint\"\n        },\n        transactionIndex: {\n            format: \"uint\"\n        },\n        transactionHash: {\n            format: \"bytes32\"\n        },\n        blockHash: {\n            format: \"bytes32\"\n        },\n        blockNumber: {\n            format: \"uint\"\n        },\n        address: {\n            format: \"address\"\n        },\n        data: {\n            format: \"bytes\"\n        },\n        topics: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        }\n    }\n};\nconst syncSchema = {\n    type: \"object\",\n    properties: {\n        startingBlock: {\n            format: \"string\"\n        },\n        currentBlock: {\n            format: \"string\"\n        },\n        highestBlock: {\n            format: \"string\"\n        },\n        knownStates: {\n            format: \"string\"\n        },\n        pulledStates: {\n            format: \"string\"\n        }\n    }\n};\nconst transactionReceiptSchema = {\n    type: \"object\",\n    properties: {\n        transactionHash: {\n            format: \"bytes32\"\n        },\n        transactionIndex: {\n            format: \"uint\"\n        },\n        blockHash: {\n            format: \"bytes32\"\n        },\n        blockNumber: {\n            format: \"uint\"\n        },\n        from: {\n            format: \"address\"\n        },\n        to: {\n            format: \"address\"\n        },\n        cumulativeGasUsed: {\n            format: \"uint\"\n        },\n        gasUsed: {\n            format: \"uint\"\n        },\n        effectiveGasPrice: {\n            format: \"uint\"\n        },\n        contractAddress: {\n            format: \"address\"\n        },\n        logs: {\n            type: \"array\",\n            items: Object.assign({}, logSchema)\n        },\n        logsBloom: {\n            format: \"bytes\"\n        },\n        root: {\n            format: \"bytes\"\n        },\n        status: {\n            format: \"uint\"\n        },\n        type: {\n            format: \"uint\"\n        }\n    }\n};\nconst SignatureObjectSchema = {\n    type: \"object\",\n    properties: {\n        messageHash: {\n            format: \"bytes\"\n        },\n        r: {\n            format: \"bytes32\"\n        },\n        s: {\n            format: \"bytes32\"\n        },\n        v: {\n            format: \"bytes\"\n        },\n        message: {\n            format: \"bytes\"\n        },\n        signature: {\n            format: \"bytes\"\n        }\n    }\n};\nconst feeHistorySchema = {\n    type: \"object\",\n    properties: {\n        oldestBlock: {\n            format: \"uint\"\n        },\n        baseFeePerGas: {\n            type: \"array\",\n            items: {\n                format: \"uint\"\n            }\n        },\n        reward: {\n            type: \"array\",\n            items: {\n                type: \"array\",\n                items: {\n                    format: \"uint\"\n                }\n            }\n        },\n        gasUsedRatio: {\n            type: \"array\",\n            items: {\n                type: \"number\"\n            }\n        }\n    }\n};\nconst storageProofSchema = {\n    type: \"object\",\n    properties: {\n        key: {\n            format: \"bytes32\"\n        },\n        value: {\n            format: \"uint\"\n        },\n        proof: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        }\n    }\n};\nconst accountSchema = {\n    type: \"object\",\n    properties: {\n        balance: {\n            format: \"uint\"\n        },\n        codeHash: {\n            format: \"bytes32\"\n        },\n        nonce: {\n            format: \"uint\"\n        },\n        storageHash: {\n            format: \"bytes32\"\n        },\n        accountProof: {\n            type: \"array\",\n            items: {\n                format: \"bytes32\"\n            }\n        },\n        storageProof: {\n            type: \"array\",\n            items: Object.assign({}, storageProofSchema)\n        }\n    }\n}; //# sourceMappingURL=schemas.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/types.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/types.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/  //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ1UsQ0FDVixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZmlsZXMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS90eXBlcy5qcz9jZDMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeSignedTransaction: () => (/* binding */ decodeSignedTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n\n\n\n\n/**\n * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.\n *\n * @param encodedSignedTransaction The RLP encoded transaction.\n * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.\n * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n */ function decodeSignedTransaction(encodedSignedTransaction, returnFormat, options = {\n    fillInputAndData: false\n}) {\n    return {\n        raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"bytes\"\n        }, encodedSignedTransaction, returnFormat),\n        tx: (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(Object.assign(Object.assign({}, web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction)).toJSON()), {\n            hash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction))),\n            type: (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__.detectRawTransactionType)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction))\n        }), returnFormat, {\n            fillInputAndData: options.fillInputAndData\n        })\n    };\n} //# sourceMappingURL=decode_signed_transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZWNvZGVfc2lnbmVkX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ2hCO0FBQ2lCO0FBQ1o7QUFDNUQ7Ozs7OztDQU1DLEdBQ00sU0FBU08sd0JBQXdCQyx3QkFBd0IsRUFBRUMsWUFBWSxFQUFFQyxVQUFVO0lBQUVDLGtCQUFrQjtBQUFNLENBQUM7SUFDakgsT0FBTztRQUNIQyxLQUFLWCxrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQVEsR0FBR08sMEJBQTBCQztRQUMzREksSUFBSVAseUVBQWlCQSxDQUFDUSxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdYLGlFQUFrQkEsQ0FBQ1ksa0JBQWtCLENBQUNkLHNEQUFVQSxDQUFDTSwyQkFBMkJTLE1BQU0sS0FBSztZQUFFQyxNQUFNbEIsc0RBQVVBLENBQUNHLHFEQUFTQSxDQUFDRCxzREFBVUEsQ0FBQ007WUFBNkJXLE1BQU1kLHFGQUF3QkEsQ0FBQ0gsc0RBQVVBLENBQUNNO1FBQTJCLElBQUlDLGNBQWM7WUFBRUUsa0JBQWtCRCxRQUFRQyxnQkFBZ0I7UUFBQztJQUMxVjtBQUNKLEVBQ0EscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvZGVjb2RlX3NpZ25lZF90cmFuc2FjdGlvbi5qcz8yMWZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ5dGVzVG9IZXgsIGZvcm1hdCwgaGV4VG9CeXRlcywga2VjY2FrMjU2IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkZhY3RvcnkgfSBmcm9tICd3ZWIzLWV0aC1hY2NvdW50cyc7XG5pbXBvcnQgeyBkZXRlY3RSYXdUcmFuc2FjdGlvblR5cGUgfSBmcm9tICcuL2RldGVjdF90cmFuc2FjdGlvbl90eXBlLmpzJztcbmltcG9ydCB7IGZvcm1hdFRyYW5zYWN0aW9uIH0gZnJvbSAnLi9mb3JtYXRfdHJhbnNhY3Rpb24uanMnO1xuLyoqXG4gKiBEZWNvZGVzIGFuIFtSTFBdKGh0dHBzOi8vZXRoZXJldW0ub3JnL2VuL2RldmVsb3BlcnMvZG9jcy9kYXRhLXN0cnVjdHVyZXMtYW5kLWVuY29kaW5nL3JscC8jdG9wKSBlbmNvZGVkIHRyYW5zYWN0aW9uLlxuICpcbiAqIEBwYXJhbSBlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24gVGhlIFJMUCBlbmNvZGVkIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHJldHVybkZvcm1hdCAoe0BsaW5rIERhdGFGb3JtYXR9IFNwZWNpZmllcyBob3cgdGhlIHJldHVybiBkYXRhIHNob3VsZCBiZSBmb3JtYXR0ZWQuXG4gKiBAcmV0dXJucyB7QGxpbmsgU2lnbmVkVHJhbnNhY3Rpb25JbmZvQVBJfSwgYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIFJMUCBlbmNvZGVkIHNpZ25lZCB0cmFuc2FjdGlvbiAoYWNjZXNzZWQgdmlhIHRoZSBgcmF3YCBwcm9wZXJ0eSkgYW5kIHRoZSBzaWduZWQgdHJhbnNhY3Rpb24gb2JqZWN0IChhY2Nlc3NlZCB2aWEgdGhlIGB0eGAgcHJvcGVydHkpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24oZW5jb2RlZFNpZ25lZFRyYW5zYWN0aW9uLCByZXR1cm5Gb3JtYXQsIG9wdGlvbnMgPSB7IGZpbGxJbnB1dEFuZERhdGE6IGZhbHNlIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByYXc6IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzJyB9LCBlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24sIHJldHVybkZvcm1hdCksXG4gICAgICAgIHR4OiBmb3JtYXRUcmFuc2FjdGlvbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIFRyYW5zYWN0aW9uRmFjdG9yeS5mcm9tU2VyaWFsaXplZERhdGEoaGV4VG9CeXRlcyhlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24pKS50b0pTT04oKSksIHsgaGFzaDogYnl0ZXNUb0hleChrZWNjYWsyNTYoaGV4VG9CeXRlcyhlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24pKSksIHR5cGU6IGRldGVjdFJhd1RyYW5zYWN0aW9uVHlwZShoZXhUb0J5dGVzKGVuY29kZWRTaWduZWRUcmFuc2FjdGlvbikpIH0pLCByZXR1cm5Gb3JtYXQsIHsgZmlsbElucHV0QW5kRGF0YTogb3B0aW9ucy5maWxsSW5wdXRBbmREYXRhIH0pLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVfc2lnbmVkX3RyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJieXRlc1RvSGV4IiwiZm9ybWF0IiwiaGV4VG9CeXRlcyIsImtlY2NhazI1NiIsIlRyYW5zYWN0aW9uRmFjdG9yeSIsImRldGVjdFJhd1RyYW5zYWN0aW9uVHlwZSIsImZvcm1hdFRyYW5zYWN0aW9uIiwiZGVjb2RlU2lnbmVkVHJhbnNhY3Rpb24iLCJlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24iLCJyZXR1cm5Gb3JtYXQiLCJvcHRpb25zIiwiZmlsbElucHV0QW5kRGF0YSIsInJhdyIsInR4IiwiT2JqZWN0IiwiYXNzaWduIiwiZnJvbVNlcmlhbGl6ZWREYXRhIiwidG9KU09OIiwiaGFzaCIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decoding.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeEventABI: () => (/* binding */ decodeEventABI)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\nconst decodeEventABI = (event, data, jsonInterface, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT)=>{\n    var _a, _b, _c, _d, _e;\n    let modifiedEvent = Object.assign({}, event);\n    const result = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema, data, returnFormat);\n    // if allEvents get the right event\n    if ([\n        _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS,\n        \"allEvents\"\n    ].includes(modifiedEvent.name)) {\n        const matchedEvent = jsonInterface.find((j)=>j.signature === data.topics[0]);\n        if (matchedEvent) {\n            modifiedEvent = matchedEvent;\n        } else {\n            modifiedEvent = {\n                anonymous: true\n            };\n        }\n    }\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    modifiedEvent.inputs = (_b = (_a = modifiedEvent.inputs) !== null && _a !== void 0 ? _a : event.inputs) !== null && _b !== void 0 ? _b : [];\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!modifiedEvent.anonymous) {\n        let indexedInputs = 0;\n        ((_c = modifiedEvent.inputs) !== null && _c !== void 0 ? _c : []).forEach((input)=>{\n            if (input.indexed) {\n                indexedInputs += 1;\n            }\n        });\n        if (indexedInputs > 0 && (data === null || data === void 0 ? void 0 : data.topics) && (data === null || data === void 0 ? void 0 : data.topics.length) !== indexedInputs + 1) {\n            // checks if event is anonymous\n            modifiedEvent = Object.assign(Object.assign({}, modifiedEvent), {\n                anonymous: true,\n                inputs: []\n            });\n        }\n    }\n    const argTopics = modifiedEvent.anonymous ? data.topics : ((_d = data.topics) !== null && _d !== void 0 ? _d : []).slice(1);\n    return Object.assign(Object.assign({}, result), {\n        returnValues: (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeLog)([\n            ...(_e = modifiedEvent.inputs) !== null && _e !== void 0 ? _e : []\n        ], data.data, argTopics),\n        event: modifiedEvent.name,\n        signature: modifiedEvent.anonymous || !data.topics || data.topics.length === 0 || !data.topics[0] ? undefined : data.topics[0],\n        raw: {\n            data: data.data,\n            topics: data.topics\n        }\n    });\n}; //# sourceMappingURL=decoding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZWNvZGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDb0M7QUFDZ0I7QUFDWDtBQUNDO0FBQ0c7QUFDdEMsTUFBTUssaUJBQWlCLENBQUNDLE9BQU9DLE1BQU1DLGVBQWVDLGVBQWVSLDZEQUFxQjtJQUMzRixJQUFJUyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztJQUNwQixJQUFJQyxnQkFBZ0JDLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdYO0lBQ3RDLE1BQU1ZLFNBQVNsQixrREFBTUEsQ0FBQ0csa0RBQVNBLEVBQUVJLE1BQU1FO0lBQ3ZDLG1DQUFtQztJQUNuQyxJQUFJO1FBQUNMLHFEQUFVQTtRQUFFO0tBQVksQ0FBQ2UsUUFBUSxDQUFDSixjQUFjSyxJQUFJLEdBQUc7UUFDeEQsTUFBTUMsZUFBZWIsY0FBY2MsSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxTQUFTLEtBQUtqQixLQUFLa0IsTUFBTSxDQUFDLEVBQUU7UUFDM0UsSUFBSUosY0FBYztZQUNkTixnQkFBZ0JNO1FBQ3BCLE9BQ0s7WUFDRE4sZ0JBQWdCO2dCQUFFVyxXQUFXO1lBQUs7UUFDdEM7SUFDSjtJQUNBLCtFQUErRTtJQUMvRVgsY0FBY1ksTUFBTSxHQUFHLENBQUNoQixLQUFLLENBQUNELEtBQUtLLGNBQWNZLE1BQU0sTUFBTSxRQUFRakIsT0FBTyxLQUFLLElBQUlBLEtBQUtKLE1BQU1xQixNQUFNLE1BQU0sUUFBUWhCLE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUU7SUFDM0ksa0ZBQWtGO0lBQ2xGLDZEQUE2RDtJQUM3RCxJQUFJLENBQUNJLGNBQWNXLFNBQVMsRUFBRTtRQUMxQixJQUFJRSxnQkFBZ0I7UUFDbkIsRUFBQ2hCLEtBQUtHLGNBQWNZLE1BQU0sTUFBTSxRQUFRZixPQUFPLEtBQUssSUFBSUEsS0FBSyxFQUFFLEVBQUVpQixPQUFPLENBQUNDLENBQUFBO1lBQ3RFLElBQUlBLE1BQU1DLE9BQU8sRUFBRTtnQkFDZkgsaUJBQWlCO1lBQ3JCO1FBQ0o7UUFDQSxJQUFJQSxnQkFBZ0IsS0FBTXJCLENBQUFBLFNBQVMsUUFBUUEsU0FBUyxLQUFLLElBQUksS0FBSyxJQUFJQSxLQUFLa0IsTUFBTSxLQUFLLENBQUNsQixTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS2tCLE1BQU0sQ0FBQ08sTUFBTSxNQUFNSixnQkFBZ0IsR0FBRztZQUMxSywrQkFBK0I7WUFDL0JiLGdCQUFnQkMsT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHRixnQkFBZ0I7Z0JBQUVXLFdBQVc7Z0JBQU1DLFFBQVEsRUFBRTtZQUFDO1FBQ2xHO0lBQ0o7SUFDQSxNQUFNTSxZQUFZbEIsY0FBY1csU0FBUyxHQUFHbkIsS0FBS2tCLE1BQU0sR0FBRyxDQUFDLENBQUNaLEtBQUtOLEtBQUtrQixNQUFNLE1BQU0sUUFBUVosT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRSxFQUFFcUIsS0FBSyxDQUFDO0lBQ3pILE9BQU9sQixPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdDLFNBQVM7UUFBRWlCLGNBQWNqQyx1REFBU0EsQ0FBQztlQUFLLENBQUNZLEtBQUtDLGNBQWNZLE1BQU0sTUFBTSxRQUFRYixPQUFPLEtBQUssSUFBSUEsS0FBSyxFQUFFO1NBQUUsRUFBRVAsS0FBS0EsSUFBSSxFQUFFMEI7UUFBWTNCLE9BQU9TLGNBQWNLLElBQUk7UUFBRUksV0FBV1QsY0FBY1csU0FBUyxJQUFJLENBQUNuQixLQUFLa0IsTUFBTSxJQUFJbEIsS0FBS2tCLE1BQU0sQ0FBQ08sTUFBTSxLQUFLLEtBQUssQ0FBQ3pCLEtBQUtrQixNQUFNLENBQUMsRUFBRSxHQUMzUlcsWUFDQTdCLEtBQUtrQixNQUFNLENBQUMsRUFBRTtRQUFFWSxLQUFLO1lBQ3ZCOUIsTUFBTUEsS0FBS0EsSUFBSTtZQUNma0IsUUFBUWxCLEtBQUtrQixNQUFNO1FBQ3ZCO0lBQUU7QUFDVixFQUFFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvZGVjb2RpbmcuanM/NjE5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRVUk5fRk9STUFULCB9IGZyb20gJ3dlYjMtdHlwZXMnO1xuaW1wb3J0IHsgZGVjb2RlTG9nIH0gZnJvbSAnd2ViMy1ldGgtYWJpJztcbmltcG9ydCB7IGxvZ1NjaGVtYSB9IGZyb20gJy4uL3NjaGVtYXMuanMnO1xuaW1wb3J0IHsgQUxMX0VWRU5UUyB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5leHBvcnQgY29uc3QgZGVjb2RlRXZlbnRBQkkgPSAoZXZlbnQsIGRhdGEsIGpzb25JbnRlcmZhY2UsIHJldHVybkZvcm1hdCA9IERFRkFVTFRfUkVUVVJOX0ZPUk1BVCkgPT4ge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgbGV0IG1vZGlmaWVkRXZlbnQgPSBPYmplY3QuYXNzaWduKHt9LCBldmVudCk7XG4gICAgY29uc3QgcmVzdWx0ID0gZm9ybWF0KGxvZ1NjaGVtYSwgZGF0YSwgcmV0dXJuRm9ybWF0KTtcbiAgICAvLyBpZiBhbGxFdmVudHMgZ2V0IHRoZSByaWdodCBldmVudFxuICAgIGlmIChbQUxMX0VWRU5UUywgJ2FsbEV2ZW50cyddLmluY2x1ZGVzKG1vZGlmaWVkRXZlbnQubmFtZSkpIHtcbiAgICAgICAgY29uc3QgbWF0Y2hlZEV2ZW50ID0ganNvbkludGVyZmFjZS5maW5kKGogPT4gai5zaWduYXR1cmUgPT09IGRhdGEudG9waWNzWzBdKTtcbiAgICAgICAgaWYgKG1hdGNoZWRFdmVudCkge1xuICAgICAgICAgICAgbW9kaWZpZWRFdmVudCA9IG1hdGNoZWRFdmVudDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1vZGlmaWVkRXZlbnQgPSB7IGFub255bW91czogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGNyZWF0ZSBlbXB0eSBpbnB1dHMgaWYgbm9uZSBhcmUgcHJlc2VudCAoZS5nLiBhbm9ueW1vdXMgZXZlbnRzIG9uIGFsbEV2ZW50cylcbiAgICBtb2RpZmllZEV2ZW50LmlucHV0cyA9IChfYiA9IChfYSA9IG1vZGlmaWVkRXZlbnQuaW5wdXRzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBldmVudC5pbnB1dHMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFtdO1xuICAgIC8vIEhhbmRsZSBjYXNlIHdoZXJlIGFuIGV2ZW50IHNpZ25hdHVyZSBzaGFkb3dzIHRoZSBjdXJyZW50IEFCSSB3aXRoIG5vbi1pZGVudGljYWxcbiAgICAvLyBhcmcgaW5kZXhpbmcuIElmICMgb2YgdG9waWNzIGRvZXNuJ3QgbWF0Y2gsIGV2ZW50IGlzIGFub24uXG4gICAgaWYgKCFtb2RpZmllZEV2ZW50LmFub255bW91cykge1xuICAgICAgICBsZXQgaW5kZXhlZElucHV0cyA9IDA7XG4gICAgICAgICgoX2MgPSBtb2RpZmllZEV2ZW50LmlucHV0cykgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogW10pLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgICAgICAgaWYgKGlucHV0LmluZGV4ZWQpIHtcbiAgICAgICAgICAgICAgICBpbmRleGVkSW5wdXRzICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaW5kZXhlZElucHV0cyA+IDAgJiYgKGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS50b3BpY3MpICYmIChkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRhdGEudG9waWNzLmxlbmd0aCkgIT09IGluZGV4ZWRJbnB1dHMgKyAxKSB7XG4gICAgICAgICAgICAvLyBjaGVja3MgaWYgZXZlbnQgaXMgYW5vbnltb3VzXG4gICAgICAgICAgICBtb2RpZmllZEV2ZW50ID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtb2RpZmllZEV2ZW50KSwgeyBhbm9ueW1vdXM6IHRydWUsIGlucHV0czogW10gfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgYXJnVG9waWNzID0gbW9kaWZpZWRFdmVudC5hbm9ueW1vdXMgPyBkYXRhLnRvcGljcyA6ICgoX2QgPSBkYXRhLnRvcGljcykgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogW10pLnNsaWNlKDEpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlc3VsdCksIHsgcmV0dXJuVmFsdWVzOiBkZWNvZGVMb2coWy4uLigoX2UgPSBtb2RpZmllZEV2ZW50LmlucHV0cykgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogW10pXSwgZGF0YS5kYXRhLCBhcmdUb3BpY3MpLCBldmVudDogbW9kaWZpZWRFdmVudC5uYW1lLCBzaWduYXR1cmU6IG1vZGlmaWVkRXZlbnQuYW5vbnltb3VzIHx8ICFkYXRhLnRvcGljcyB8fCBkYXRhLnRvcGljcy5sZW5ndGggPT09IDAgfHwgIWRhdGEudG9waWNzWzBdXG4gICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgOiBkYXRhLnRvcGljc1swXSwgcmF3OiB7XG4gICAgICAgICAgICBkYXRhOiBkYXRhLmRhdGEsXG4gICAgICAgICAgICB0b3BpY3M6IGRhdGEudG9waWNzLFxuICAgICAgICB9IH0pO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJmb3JtYXQiLCJERUZBVUxUX1JFVFVSTl9GT1JNQVQiLCJkZWNvZGVMb2ciLCJsb2dTY2hlbWEiLCJBTExfRVZFTlRTIiwiZGVjb2RlRXZlbnRBQkkiLCJldmVudCIsImRhdGEiLCJqc29uSW50ZXJmYWNlIiwicmV0dXJuRm9ybWF0IiwiX2EiLCJfYiIsIl9jIiwiX2QiLCJfZSIsIm1vZGlmaWVkRXZlbnQiLCJPYmplY3QiLCJhc3NpZ24iLCJyZXN1bHQiLCJpbmNsdWRlcyIsIm5hbWUiLCJtYXRjaGVkRXZlbnQiLCJmaW5kIiwiaiIsInNpZ25hdHVyZSIsInRvcGljcyIsImFub255bW91cyIsImlucHV0cyIsImluZGV4ZWRJbnB1dHMiLCJmb3JFYWNoIiwiaW5wdXQiLCJpbmRleGVkIiwibGVuZ3RoIiwiYXJnVG9waWNzIiwic2xpY2UiLCJyZXR1cm5WYWx1ZXMiLCJ1bmRlZmluZWQiLCJyYXciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTransactionTypeParser: () => (/* binding */ defaultTransactionTypeParser),\n/* harmony export */   detectRawTransactionType: () => (/* binding */ detectRawTransactionType),\n/* harmony export */   detectTransactionType: () => (/* binding */ detectTransactionType)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n// undefined is treated as null for JSON schema validator\nconst transactionType0x0Schema = {\n    type: \"object\",\n    properties: {\n        accessList: {\n            type: \"null\"\n        },\n        maxFeePerGas: {\n            type: \"null\"\n        },\n        maxPriorityFeePerGas: {\n            type: \"null\"\n        }\n    }\n};\nconst transactionType0x1Schema = {\n    type: \"object\",\n    properties: {\n        maxFeePerGas: {\n            type: \"null\"\n        },\n        maxPriorityFeePerGas: {\n            type: \"null\"\n        }\n    }\n};\nconst transactionType0x2Schema = {\n    type: \"object\",\n    properties: {\n        gasPrice: {\n            type: \"null\"\n        }\n    }\n};\nconst validateTxTypeAndHandleErrors = (txSchema, tx, txType)=>{\n    try {\n        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validateJSONSchema(txSchema, tx);\n    } catch (error) {\n        if (error instanceof web3_validator__WEBPACK_IMPORTED_MODULE_2__.Web3ValidatorError) // Erroneously reported error\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPropertiesForTransactionTypeError(error.errors, txType);\n        throw error;\n    }\n};\nconst defaultTransactionTypeParser = (transaction)=>{\n    var _a, _b;\n    const tx = transaction;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.type)) {\n        let txSchema;\n        switch(tx.type){\n            case \"0x0\":\n                txSchema = transactionType0x0Schema;\n                break;\n            case \"0x1\":\n                txSchema = transactionType0x1Schema;\n                break;\n            case \"0x2\":\n                txSchema = transactionType0x2Schema;\n                break;\n            default:\n                return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n                    format: \"uint\"\n                }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);\n        }\n        validateTxTypeAndHandleErrors(txSchema, tx, tx.type);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"uint\"\n        }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxPriorityFeePerGas)) {\n        validateTxTypeAndHandleErrors(transactionType0x2Schema, tx, \"0x2\");\n        return \"0x2\";\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.accessList)) {\n        validateTxTypeAndHandleErrors(transactionType0x1Schema, tx, \"0x1\");\n        return \"0x1\";\n    }\n    const givenHardfork = (_a = tx.hardfork) !== null && _a !== void 0 ? _a : (_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(givenHardfork)) {\n        const hardforkIndex = Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf(givenHardfork);\n        // givenHardfork is London or later, so EIP-2718 is supported\n        if (hardforkIndex >= Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf(\"london\")) return !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice) ? \"0x0\" : \"0x2\";\n        // givenHardfork is Berlin, tx.accessList is undefined, assume type is 0x0\n        if (hardforkIndex === Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf(\"berlin\")) return \"0x0\";\n    }\n    // gasprice is defined\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice)) {\n        validateTxTypeAndHandleErrors(transactionType0x0Schema, tx, \"0x0\");\n        return \"0x0\";\n    }\n    // no transaction type can be inferred from properties, use default transaction type\n    return undefined;\n};\nconst detectTransactionType = (transaction, web3Context)=>{\n    var _a;\n    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : defaultTransactionTypeParser)(transaction);\n};\nconst detectRawTransactionType = (transaction)=>transaction[0] > 0x7f ? \"0x0\" : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toHex)(transaction[0]); //# sourceMappingURL=detect_transaction_type.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/format_transaction.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatTransaction: () => (/* binding */ formatTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\nfunction formatTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT, options = {\n    transactionSchema: _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema,\n    fillInputAndData: false\n}) {\n    var _a, _b;\n    let formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({}, transaction);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {\n        formattedTransaction.common = Object.assign({}, transaction.common);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain)) formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);\n    }\n    formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)((_b = options.transactionSchema) !== null && _b !== void 0 ? _b : _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema, formattedTransaction, returnFormat);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input) && // Converting toHex is accounting for data and input being Uint8Arrays\n    // since comparing Uint8Array is not as straightforward as comparing strings\n    (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.data) !== (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.input)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionDataAndInputError({\n        data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.data),\n        input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.input)\n    });\n    if (options.fillInputAndData) {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data)) {\n            formattedTransaction.input = formattedTransaction.data;\n        } else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input)) {\n            formattedTransaction.data = formattedTransaction.input;\n        }\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.gasLimit)) {\n        formattedTransaction.gas = formattedTransaction.gasLimit;\n        delete formattedTransaction.gasLimit;\n    }\n    return formattedTransaction;\n} //# sourceMappingURL=format_transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9mb3JtYXRfdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ21EO0FBQ1I7QUFDdUI7QUFDUDtBQUNMO0FBQy9DLFNBQVNRLGtCQUFrQkMsV0FBVyxFQUFFQyxlQUFlViw2REFBcUIsRUFBRVcsVUFBVTtJQUMzRkMsbUJBQW1CTCw4REFBcUJBO0lBQ3hDTSxrQkFBa0I7QUFDdEIsQ0FBQztJQUNHLElBQUlDLElBQUlDO0lBQ1IsSUFBSUMsdUJBQXVCZCxxREFBU0EsQ0FBQyxDQUFDLEdBQUdPO0lBQ3pDLElBQUksQ0FBQ1IseURBQVNBLENBQUNRLGdCQUFnQixRQUFRQSxnQkFBZ0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsWUFBWVEsTUFBTSxHQUFHO1FBQzFGRCxxQkFBcUJDLE1BQU0sR0FBR0MsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR1YsWUFBWVEsTUFBTTtRQUNsRSxJQUFJLENBQUNoQix5REFBU0EsQ0FBQyxDQUFDYSxLQUFLTCxZQUFZUSxNQUFNLE1BQU0sUUFBUUgsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHTSxXQUFXLEdBQ3hGSixxQkFBcUJDLE1BQU0sQ0FBQ0csV0FBVyxHQUFHRixPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHVixZQUFZUSxNQUFNLENBQUNHLFdBQVc7SUFDbEc7SUFDQUosdUJBQXVCYixrREFBTUEsQ0FBQyxDQUFDWSxLQUFLSixRQUFRQyxpQkFBaUIsTUFBTSxRQUFRRyxPQUFPLEtBQUssSUFBSUEsS0FBS1IsOERBQXFCQSxFQUFFUyxzQkFBc0JOO0lBQzdJLElBQUksQ0FBQ1QseURBQVNBLENBQUNlLHFCQUFxQkssSUFBSSxLQUNwQyxDQUFDcEIseURBQVNBLENBQUNlLHFCQUFxQk0sS0FBSyxLQUNyQyxzRUFBc0U7SUFDdEUsNEVBQTRFO0lBQzVFakIsaURBQUtBLENBQUNXLHFCQUFxQkssSUFBSSxNQUFNaEIsaURBQUtBLENBQUNXLHFCQUFxQk0sS0FBSyxHQUNyRSxNQUFNLElBQUloQixxRUFBNEJBLENBQUM7UUFDbkNlLE1BQU1qQixzREFBVUEsQ0FBQ1kscUJBQXFCSyxJQUFJO1FBQzFDQyxPQUFPbEIsc0RBQVVBLENBQUNZLHFCQUFxQk0sS0FBSztJQUNoRDtJQUNKLElBQUlYLFFBQVFFLGdCQUFnQixFQUFFO1FBQzFCLElBQUksQ0FBQ1oseURBQVNBLENBQUNlLHFCQUFxQkssSUFBSSxHQUFHO1lBQ3ZDTCxxQkFBcUJNLEtBQUssR0FBR04scUJBQXFCSyxJQUFJO1FBQzFELE9BQ0ssSUFBSSxDQUFDcEIseURBQVNBLENBQUNlLHFCQUFxQk0sS0FBSyxHQUFHO1lBQzdDTixxQkFBcUJLLElBQUksR0FBR0wscUJBQXFCTSxLQUFLO1FBQzFEO0lBQ0o7SUFDQSxJQUFJLENBQUNyQix5REFBU0EsQ0FBQ2UscUJBQXFCTyxRQUFRLEdBQUc7UUFDM0NQLHFCQUFxQlEsR0FBRyxHQUFHUixxQkFBcUJPLFFBQVE7UUFDeEQsT0FBT1AscUJBQXFCTyxRQUFRO0lBQ3hDO0lBQ0EsT0FBT1A7QUFDWCxFQUNBLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL2Zvcm1hdF90cmFuc2FjdGlvbi5qcz9iMGJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgREVGQVVMVF9SRVRVUk5fRk9STUFUIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBtZXJnZURlZXAsIGZvcm1hdCwgYnl0ZXNUb0hleCwgdG9IZXggfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uRGF0YUFuZElucHV0RXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0cmFuc2FjdGlvbkluZm9TY2hlbWEgfSBmcm9tICcuLi9zY2hlbWFzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0ID0gREVGQVVMVF9SRVRVUk5fRk9STUFULCBvcHRpb25zID0ge1xuICAgIHRyYW5zYWN0aW9uU2NoZW1hOiB0cmFuc2FjdGlvbkluZm9TY2hlbWEsXG4gICAgZmlsbElucHV0QW5kRGF0YTogZmFsc2UsXG59KSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBsZXQgZm9ybWF0dGVkVHJhbnNhY3Rpb24gPSBtZXJnZURlZXAoe30sIHRyYW5zYWN0aW9uKTtcbiAgICBpZiAoIWlzTnVsbGlzaCh0cmFuc2FjdGlvbiA9PT0gbnVsbCB8fCB0cmFuc2FjdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdHJhbnNhY3Rpb24uY29tbW9uKSkge1xuICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5jb21tb24gPSBPYmplY3QuYXNzaWduKHt9LCB0cmFuc2FjdGlvbi5jb21tb24pO1xuICAgICAgICBpZiAoIWlzTnVsbGlzaCgoX2EgPSB0cmFuc2FjdGlvbi5jb21tb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jdXN0b21DaGFpbikpXG4gICAgICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5jb21tb24uY3VzdG9tQ2hhaW4gPSBPYmplY3QuYXNzaWduKHt9LCB0cmFuc2FjdGlvbi5jb21tb24uY3VzdG9tQ2hhaW4pO1xuICAgIH1cbiAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbiA9IGZvcm1hdCgoX2IgPSBvcHRpb25zLnRyYW5zYWN0aW9uU2NoZW1hKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB0cmFuc2FjdGlvbkluZm9TY2hlbWEsIGZvcm1hdHRlZFRyYW5zYWN0aW9uLCByZXR1cm5Gb3JtYXQpO1xuICAgIGlmICghaXNOdWxsaXNoKGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpICYmXG4gICAgICAgICFpc051bGxpc2goZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpICYmXG4gICAgICAgIC8vIENvbnZlcnRpbmcgdG9IZXggaXMgYWNjb3VudGluZyBmb3IgZGF0YSBhbmQgaW5wdXQgYmVpbmcgVWludDhBcnJheXNcbiAgICAgICAgLy8gc2luY2UgY29tcGFyaW5nIFVpbnQ4QXJyYXkgaXMgbm90IGFzIHN0cmFpZ2h0Zm9yd2FyZCBhcyBjb21wYXJpbmcgc3RyaW5nc1xuICAgICAgICB0b0hleChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5kYXRhKSAhPT0gdG9IZXgoZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25EYXRhQW5kSW5wdXRFcnJvcih7XG4gICAgICAgICAgICBkYXRhOiBieXRlc1RvSGV4KGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpLFxuICAgICAgICAgICAgaW5wdXQ6IGJ5dGVzVG9IZXgoZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpLFxuICAgICAgICB9KTtcbiAgICBpZiAob3B0aW9ucy5maWxsSW5wdXRBbmREYXRhKSB7XG4gICAgICAgIGlmICghaXNOdWxsaXNoKGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dCA9IGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWlzTnVsbGlzaChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dCkpIHtcbiAgICAgICAgICAgIGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEgPSBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWlzTnVsbGlzaChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5nYXNMaW1pdCkpIHtcbiAgICAgICAgZm9ybWF0dGVkVHJhbnNhY3Rpb24uZ2FzID0gZm9ybWF0dGVkVHJhbnNhY3Rpb24uZ2FzTGltaXQ7XG4gICAgICAgIGRlbGV0ZSBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5nYXNMaW1pdDtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZFRyYW5zYWN0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0X3RyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJERUZBVUxUX1JFVFVSTl9GT1JNQVQiLCJpc051bGxpc2giLCJtZXJnZURlZXAiLCJmb3JtYXQiLCJieXRlc1RvSGV4IiwidG9IZXgiLCJUcmFuc2FjdGlvbkRhdGFBbmRJbnB1dEVycm9yIiwidHJhbnNhY3Rpb25JbmZvU2NoZW1hIiwiZm9ybWF0VHJhbnNhY3Rpb24iLCJ0cmFuc2FjdGlvbiIsInJldHVybkZvcm1hdCIsIm9wdGlvbnMiLCJ0cmFuc2FjdGlvblNjaGVtYSIsImZpbGxJbnB1dEFuZERhdGEiLCJfYSIsIl9iIiwiZm9ybWF0dGVkVHJhbnNhY3Rpb24iLCJjb21tb24iLCJPYmplY3QiLCJhc3NpZ24iLCJjdXN0b21DaGFpbiIsImRhdGEiLCJpbnB1dCIsImdhc0xpbWl0IiwiZ2FzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRevertReason: () => (/* binding */ getRevertReason),\n/* harmony export */   parseTransactionError: () => (/* binding */ parseTransactionError)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n// eslint-disable-next-line import/no-cycle\n\nconst parseTransactionError = (error, contractAbi)=>{\n    var _a, _b, _c, _d, _e;\n    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.ContractExecutionError && error.cause instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.Eip838ExecutionError) {\n        if (contractAbi !== undefined) {\n            const errorsAbi = contractAbi.filter((abi)=>(0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.isAbiErrorFragment)(abi));\n            (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.decodeContractErrorData)(errorsAbi, error.cause);\n            return {\n                reason: error.cause.message,\n                signature: (_a = error.cause.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),\n                data: (_b = error.cause.data) === null || _b === void 0 ? void 0 : _b.substring(10),\n                customErrorName: error.cause.errorName,\n                customErrorDecodedSignature: error.cause.errorSignature,\n                customErrorArguments: error.cause.errorArgs\n            };\n        }\n        return {\n            reason: error.cause.message,\n            signature: (_c = error.cause.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),\n            data: (_d = error.cause.data) === null || _d === void 0 ? void 0 : _d.substring(10)\n        };\n    }\n    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError && !Array.isArray((_e = error.cause) === null || _e === void 0 ? void 0 : _e.errors) && error.cause !== undefined) {\n        return error.cause.message;\n    }\n    throw error;\n};\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */ function getRevertReason(web3Context, transaction, contractAbi, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETURN_FORMAT) {\n    return __awaiter(this, void 0, void 0, function*() {\n        try {\n            yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.call)(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n            return undefined;\n        } catch (error) {\n            return parseTransactionError(error, contractAbi);\n        }\n    });\n} //# sourceMappingURL=get_revert_reason.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransactionError: () => (/* binding */ getTransactionError)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get_revert_reason.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// eslint-disable-next-line import/no-cycle\n\nfunction getTransactionError(web3Context, transactionFormatted, transactionReceiptFormatted, receivedError, contractAbi, knownReason) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let _reason = knownReason;\n        if (_reason === undefined) {\n            if (receivedError !== undefined) {\n                _reason = (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.parseTransactionError)(receivedError);\n            } else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n                _reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.getRevertReason)(web3Context, transactionFormatted, contractAbi);\n            }\n        }\n        let error;\n        if (_reason === undefined) {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertedWithoutReasonError(transactionReceiptFormatted);\n        } else if (typeof _reason === \"string\") {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason, undefined, transactionReceiptFormatted);\n        } else if (_reason.customErrorName !== undefined && _reason.customErrorDecodedSignature !== undefined && _reason.customErrorArguments !== undefined) {\n            const reasonWithCustomError = _reason;\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertWithCustomError(reasonWithCustomError.reason, reasonWithCustomError.customErrorName, reasonWithCustomError.customErrorDecodedSignature, reasonWithCustomError.customErrorArguments, reasonWithCustomError.signature, transactionReceiptFormatted, reasonWithCustomError.data);\n        } else {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason.reason, _reason.signature, transactionReceiptFormatted, _reason.data);\n        }\n        return error;\n    });\n} //# sourceMappingURL=get_transaction_error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfdHJhbnNhY3Rpb25fZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0EsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQzBJO0FBQzFJLDJDQUEyQztBQUNxQztBQUN6RSxTQUFTWSxvQkFBb0JDLFdBQVcsRUFBRUMsb0JBQW9CLEVBQUVDLDJCQUEyQixFQUFFQyxhQUFhLEVBQUVDLFdBQVcsRUFBRUMsV0FBVztJQUN2SSxPQUFPOUIsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxJQUFJK0IsVUFBVUQ7UUFDZCxJQUFJQyxZQUFZQyxXQUFXO1lBQ3ZCLElBQUlKLGtCQUFrQkksV0FBVztnQkFDN0JELFVBQVVSLDRFQUFxQkEsQ0FBQ0s7WUFDcEMsT0FDSyxJQUFJSCxZQUFZUSxZQUFZLElBQUlQLHlCQUF5Qk0sV0FBVztnQkFDckVELFVBQVUsTUFBTVQsc0VBQWVBLENBQUNHLGFBQWFDLHNCQUFzQkc7WUFDdkU7UUFDSjtRQUNBLElBQUlLO1FBQ0osSUFBSUgsWUFBWUMsV0FBVztZQUN2QkUsUUFBUSxJQUFJZiw4RUFBcUNBLENBQUNRO1FBQ3RELE9BQ0ssSUFBSSxPQUFPSSxZQUFZLFVBQVU7WUFDbENHLFFBQVEsSUFBSWQsMEVBQWlDQSxDQUFDVyxTQUFTQyxXQUFXTDtRQUN0RSxPQUNLLElBQUlJLFFBQVFJLGVBQWUsS0FBS0gsYUFDakNELFFBQVFLLDJCQUEyQixLQUFLSixhQUN4Q0QsUUFBUU0sb0JBQW9CLEtBQUtMLFdBQVc7WUFDNUMsTUFBTU0sd0JBQXdCUDtZQUM5QkcsUUFBUSxJQUFJYix5RUFBZ0NBLENBQUNpQixzQkFBc0JDLE1BQU0sRUFBRUQsc0JBQXNCSCxlQUFlLEVBQUVHLHNCQUFzQkYsMkJBQTJCLEVBQUVFLHNCQUFzQkQsb0JBQW9CLEVBQUVDLHNCQUFzQkUsU0FBUyxFQUFFYiw2QkFBNkJXLHNCQUFzQkcsSUFBSTtRQUM3UyxPQUNLO1lBQ0RQLFFBQVEsSUFBSWQsMEVBQWlDQSxDQUFDVyxRQUFRUSxNQUFNLEVBQUVSLFFBQVFTLFNBQVMsRUFBRWIsNkJBQTZCSSxRQUFRVSxJQUFJO1FBQzlIO1FBQ0EsT0FBT1A7SUFDWDtBQUNKLEVBQ0EsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvZ2V0X3RyYW5zYWN0aW9uX2Vycm9yLmpzP2NiYWIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IFRyYW5zYWN0aW9uUmV2ZXJ0ZWRXaXRob3V0UmVhc29uRXJyb3IsIFRyYW5zYWN0aW9uUmV2ZXJ0SW5zdHJ1Y3Rpb25FcnJvciwgVHJhbnNhY3Rpb25SZXZlcnRXaXRoQ3VzdG9tRXJyb3IsIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgZ2V0UmV2ZXJ0UmVhc29uLCBwYXJzZVRyYW5zYWN0aW9uRXJyb3IgfSBmcm9tICcuL2dldF9yZXZlcnRfcmVhc29uLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvbkVycm9yKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbkZvcm1hdHRlZCwgdHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkLCByZWNlaXZlZEVycm9yLCBjb250cmFjdEFiaSwga25vd25SZWFzb24pIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBsZXQgX3JlYXNvbiA9IGtub3duUmVhc29uO1xuICAgICAgICBpZiAoX3JlYXNvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAocmVjZWl2ZWRFcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgX3JlYXNvbiA9IHBhcnNlVHJhbnNhY3Rpb25FcnJvcihyZWNlaXZlZEVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHdlYjNDb250ZXh0LmhhbmRsZVJldmVydCAmJiB0cmFuc2FjdGlvbkZvcm1hdHRlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgX3JlYXNvbiA9IHlpZWxkIGdldFJldmVydFJlYXNvbih3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25Gb3JtYXR0ZWQsIGNvbnRyYWN0QWJpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgZXJyb3I7XG4gICAgICAgIGlmIChfcmVhc29uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGVycm9yID0gbmV3IFRyYW5zYWN0aW9uUmV2ZXJ0ZWRXaXRob3V0UmVhc29uRXJyb3IodHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgX3JlYXNvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGVycm9yID0gbmV3IFRyYW5zYWN0aW9uUmV2ZXJ0SW5zdHJ1Y3Rpb25FcnJvcihfcmVhc29uLCB1bmRlZmluZWQsIHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoX3JlYXNvbi5jdXN0b21FcnJvck5hbWUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgX3JlYXNvbi5jdXN0b21FcnJvckRlY29kZWRTaWduYXR1cmUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgX3JlYXNvbi5jdXN0b21FcnJvckFyZ3VtZW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCByZWFzb25XaXRoQ3VzdG9tRXJyb3IgPSBfcmVhc29uO1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgVHJhbnNhY3Rpb25SZXZlcnRXaXRoQ3VzdG9tRXJyb3IocmVhc29uV2l0aEN1c3RvbUVycm9yLnJlYXNvbiwgcmVhc29uV2l0aEN1c3RvbUVycm9yLmN1c3RvbUVycm9yTmFtZSwgcmVhc29uV2l0aEN1c3RvbUVycm9yLmN1c3RvbUVycm9yRGVjb2RlZFNpZ25hdHVyZSwgcmVhc29uV2l0aEN1c3RvbUVycm9yLmN1c3RvbUVycm9yQXJndW1lbnRzLCByZWFzb25XaXRoQ3VzdG9tRXJyb3Iuc2lnbmF0dXJlLCB0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQsIHJlYXNvbldpdGhDdXN0b21FcnJvci5kYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGVycm9yID0gbmV3IFRyYW5zYWN0aW9uUmV2ZXJ0SW5zdHJ1Y3Rpb25FcnJvcihfcmVhc29uLnJlYXNvbiwgX3JlYXNvbi5zaWduYXR1cmUsIHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCwgX3JlYXNvbi5kYXRhKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRfdHJhbnNhY3Rpb25fZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIlRyYW5zYWN0aW9uUmV2ZXJ0ZWRXaXRob3V0UmVhc29uRXJyb3IiLCJUcmFuc2FjdGlvblJldmVydEluc3RydWN0aW9uRXJyb3IiLCJUcmFuc2FjdGlvblJldmVydFdpdGhDdXN0b21FcnJvciIsImdldFJldmVydFJlYXNvbiIsInBhcnNlVHJhbnNhY3Rpb25FcnJvciIsImdldFRyYW5zYWN0aW9uRXJyb3IiLCJ3ZWIzQ29udGV4dCIsInRyYW5zYWN0aW9uRm9ybWF0dGVkIiwidHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkIiwicmVjZWl2ZWRFcnJvciIsImNvbnRyYWN0QWJpIiwia25vd25SZWFzb24iLCJfcmVhc29uIiwidW5kZWZpbmVkIiwiaGFuZGxlUmV2ZXJ0IiwiZXJyb3IiLCJjdXN0b21FcnJvck5hbWUiLCJjdXN0b21FcnJvckRlY29kZWRTaWduYXR1cmUiLCJjdXN0b21FcnJvckFyZ3VtZW50cyIsInJlYXNvbldpdGhDdXN0b21FcnJvciIsInJlYXNvbiIsInNpZ25hdHVyZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransactionGasPricing: () => (/* binding */ getTransactionGasPricing)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction getEip1559GasPricing(transaction, web3Context, returnFormat) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function*() {\n        const block = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlock)(web3Context, web3Context.defaultBlock, false, returnFormat);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(block.baseFeePerGas)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Eip1559NotSupportedError();\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(transaction.gasPrice)) {\n            const convertedTransactionGasPrice = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, transaction.gasPrice, returnFormat);\n            return {\n                maxPriorityFeePerGas: convertedTransactionGasPrice,\n                maxFeePerGas: convertedTransactionGasPrice\n            };\n        }\n        return {\n            maxPriorityFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, (_a = transaction.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : web3Context.defaultMaxPriorityFeePerGas, returnFormat),\n            maxFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n                format: \"uint\"\n            }, (_b = transaction.maxFeePerGas) !== null && _b !== void 0 ? _b : BigInt(block.baseFeePerGas) * BigInt(2) + BigInt((_c = transaction.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : web3Context.defaultMaxPriorityFeePerGas), returnFormat)\n        };\n    });\n}\nfunction getTransactionGasPricing(transaction, web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const transactionType = (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_4__.getTransactionType)(transaction, web3Context);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(transactionType)) {\n            if (transactionType.startsWith(\"-\")) throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.UnsupportedTransactionTypeError(transactionType);\n            // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n            if (Number(transactionType) < 0 || Number(transactionType) > 127) throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.UnsupportedTransactionTypeError(transactionType);\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(transaction.gasPrice) && (transactionType === \"0x0\" || transactionType === \"0x1\")) return {\n                gasPrice: yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getGasPrice)(web3Context, returnFormat),\n                maxPriorityFeePerGas: undefined,\n                maxFeePerGas: undefined\n            };\n            if (transactionType === \"0x2\") {\n                return Object.assign({\n                    gasPrice: undefined\n                }, (yield getEip1559GasPricing(transaction, web3Context, returnFormat)));\n            }\n        }\n        return undefined;\n    });\n} //# sourceMappingURL=get_transaction_gas_pricing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareTransactionForSigning: () => (/* binding */ prepareTransactionForSigning)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validation.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/validation.js\");\n/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\nconst getEthereumjsTxDataFromTransaction = (transaction)=>{\n    var _a, _b;\n    return {\n        nonce: transaction.nonce,\n        gasPrice: transaction.gasPrice,\n        gasLimit: (_a = transaction.gasLimit) !== null && _a !== void 0 ? _a : transaction.gas,\n        to: transaction.to,\n        value: transaction.value,\n        data: (_b = transaction.data) !== null && _b !== void 0 ? _b : transaction.input,\n        type: transaction.type,\n        chainId: transaction.chainId,\n        accessList: transaction.accessList,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        maxFeePerGas: transaction.maxFeePerGas\n    };\n};\nconst getEthereumjsTransactionOptions = (transaction, web3Context)=>{\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const hasTransactionSigningOptions = !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.chain) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.hardfork) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.common);\n    let common;\n    if (!hasTransactionSigningOptions) {\n        // if defaultcommon is specified, use that.\n        if (web3Context.defaultCommon) {\n            common = Object.assign({}, web3Context.defaultCommon);\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.hardfork)) common.hardfork = (_a = transaction.hardfork) !== null && _a !== void 0 ? _a : web3Context.defaultHardfork;\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.baseChain)) common.baseChain = web3Context.defaultChain;\n        } else {\n            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({\n                name: \"custom-network\",\n                chainId: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.chainId),\n                networkId: !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.networkId) ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.networkId) : undefined,\n                defaultHardfork: (_b = transaction.hardfork) !== null && _b !== void 0 ? _b : web3Context.defaultHardfork\n            }, {\n                baseChain: web3Context.defaultChain\n            });\n        }\n    } else {\n        const name = (_f = (_e = (_d = (_c = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _c === void 0 ? void 0 : _c.customChain) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : transaction.chain) !== null && _f !== void 0 ? _f : \"custom-network\";\n        const chainId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_j = (_h = (_g = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _g === void 0 ? void 0 : _g.customChain) === null || _h === void 0 ? void 0 : _h.chainId) !== null && _j !== void 0 ? _j : transaction === null || transaction === void 0 ? void 0 : transaction.chainId);\n        const networkId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_m = (_l = (_k = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _k === void 0 ? void 0 : _k.customChain) === null || _l === void 0 ? void 0 : _l.networkId) !== null && _m !== void 0 ? _m : transaction === null || transaction === void 0 ? void 0 : transaction.networkId);\n        const defaultHardfork = (_q = (_p = (_o = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _o === void 0 ? void 0 : _o.hardfork) !== null && _p !== void 0 ? _p : transaction === null || transaction === void 0 ? void 0 : transaction.hardfork) !== null && _q !== void 0 ? _q : web3Context.defaultHardfork;\n        const baseChain = (_t = (_s = (_r = transaction.common) === null || _r === void 0 ? void 0 : _r.baseChain) !== null && _s !== void 0 ? _s : transaction.chain) !== null && _t !== void 0 ? _t : web3Context.defaultChain;\n        if (chainId && networkId && name) {\n            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({\n                name,\n                chainId,\n                networkId,\n                defaultHardfork\n            }, {\n                baseChain\n            });\n        }\n    }\n    return {\n        common\n    };\n};\nconst prepareTransactionForSigning = (transaction, web3Context, privateKey, fillGasPrice = false, fillGasLimit = true)=>__awaiter(void 0, void 0, void 0, function*() {\n        const populatedTransaction = yield (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__.transactionBuilder)({\n            transaction,\n            web3Context,\n            privateKey,\n            fillGasPrice,\n            fillGasLimit\n        });\n        const formattedTransaction = (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_5__.formatTransaction)(populatedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        (0,_validation_js__WEBPACK_IMPORTED_MODULE_4__.validateTransactionForSigning)(formattedTransaction);\n        return web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(formattedTransaction), getEthereumjsTransactionOptions(formattedTransaction, web3Context));\n    }); //# sourceMappingURL=prepare_transaction_for_signing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rejectIfBlockTimeout: () => (/* binding */ rejectIfBlockTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n// eslint-disable-next-line import/no-cycle\n\nfunction resolveByPolling(web3Context, starterBlockNumber, transactionHash) {\n    const pollingInterval = web3Context.transactionPollingInterval;\n    const [intervalId, promiseToError] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfConditionAtInterval)(()=>__awaiter(this, void 0, void 0, function*() {\n            let lastBlockNumber;\n            try {\n                lastBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);\n            } catch (error) {\n                console.warn(\"An error happen while trying to get the block number\", error);\n                return undefined;\n            }\n            const numberOfBlocks = lastBlockNumber - starterBlockNumber;\n            if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n                return new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({\n                    starterBlockNumber,\n                    numberOfBlocks,\n                    transactionHash\n                });\n            }\n            return undefined;\n        }), pollingInterval);\n    const clean = ()=>{\n        clearInterval(intervalId);\n    };\n    return [\n        promiseToError,\n        {\n            clean\n        }\n    ];\n}\nfunction resolveBySubscription(web3Context, starterBlockNumber, transactionHash) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function*() {\n        // The following variable will stay true except if the data arrived,\n        //\tor if watching started after an error had occurred.\n        let needToWatchLater = true;\n        let subscription;\n        let resourceCleaner;\n        // internal helper function\n        function revertToPolling(reject, previousError) {\n            if (previousError) {\n                console.warn(\"error happened at subscription. So revert to polling...\", previousError);\n            }\n            resourceCleaner.clean();\n            needToWatchLater = false;\n            const [promiseToError, newResourceCleaner] = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n            resourceCleaner.clean = newResourceCleaner.clean;\n            promiseToError.catch((error)=>reject(error));\n        }\n        try {\n            subscription = yield (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe(\"newHeads\");\n            resourceCleaner = {\n                clean: ()=>{\n                    var _a;\n                    // Remove the subscription, if it was not removed somewhere\n                    // \telse by calling, for example, subscriptionManager.clear()\n                    if (subscription.id) {\n                        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription).then(()=>{\n                        // Subscription ended successfully\n                        }).catch(()=>{\n                        // An error happened while ending subscription. But no need to take any action.\n                        });\n                    }\n                }\n            };\n        } catch (error) {\n            return resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        const promiseToError = new Promise((_, reject)=>{\n            try {\n                subscription.on(\"data\", (lastBlockHeader)=>{\n                    needToWatchLater = false;\n                    if (!(lastBlockHeader === null || lastBlockHeader === void 0 ? void 0 : lastBlockHeader.number)) {\n                        return;\n                    }\n                    const numberOfBlocks = Number(BigInt(lastBlockHeader.number) - BigInt(starterBlockNumber));\n                    if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n                        // Transaction Block Timeout is known to be reached by subscribing to new heads\n                        reject(new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({\n                            starterBlockNumber,\n                            numberOfBlocks,\n                            transactionHash\n                        }));\n                    }\n                });\n                subscription.on(\"error\", (error)=>{\n                    revertToPolling(reject, error);\n                });\n            } catch (error) {\n                revertToPolling(reject, error);\n            }\n            // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n            setTimeout(()=>{\n                if (needToWatchLater) {\n                    revertToPolling(reject);\n                }\n            }, web3Context.blockHeaderTimeout * 1000);\n        });\n        return [\n            promiseToError,\n            resourceCleaner\n        ];\n    });\n}\n/* TODO: After merge, there will be constant block mining time (exactly 12 second each block, except slot missed that currently happens in <1% of slots. ) so we can optimize following function\nfor POS NWs, we can skip checking getBlockNumber(); after interval and calculate only based on time  that certain num of blocked are mined after that for internal double check, can do one getBlockNumber() call and timeout.\n*/ function rejectIfBlockTimeout(web3Context, transactionHash) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function*() {\n        const { provider } = web3Context.requestManager;\n        let callingRes;\n        const starterBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);\n        // TODO: once https://github.com/web3/web3.js/issues/5521 is implemented, remove checking for `enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout`\n        if (((_b = (_a = provider).supportsSubscriptions) === null || _b === void 0 ? void 0 : _b.call(_a)) && web3Context.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout) {\n            callingRes = yield resolveBySubscription(web3Context, starterBlockNumber, transactionHash);\n        } else {\n            callingRes = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        return callingRes;\n    });\n} //# sourceMappingURL=reject_if_block_timeout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SendTxHelper: () => (/* binding */ SendTxHelper)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\");\n/* harmony import */ var _try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./try_send_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\");\n/* harmony import */ var _watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./watch_transaction_for_confirmations.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./get_transaction_error.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js\");\n/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./get_revert_reason.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\");\n/* harmony import */ var _decoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./decoding.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\nclass SendTxHelper {\n    constructor({ options, web3Context, promiEvent, returnFormat }){\n        this.options = {\n            checkRevertBeforeSending: true\n        };\n        this.options = options;\n        this.web3Context = web3Context;\n        this.promiEvent = promiEvent;\n        this.returnFormat = returnFormat;\n    }\n    getReceiptWithEvents(data) {\n        var _a, _b;\n        const result = Object.assign({}, data !== null && data !== void 0 ? data : {});\n        if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi) && result.logs && result.logs.length > 0) {\n            result.events = {};\n            for (const log of result.logs){\n                const event = (0,_decoding_js__WEBPACK_IMPORTED_MODULE_10__.decodeEventABI)(_constants_js__WEBPACK_IMPORTED_MODULE_7__.ALL_EVENTS_ABI, log, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi, this.returnFormat);\n                if (event.event) {\n                    result.events[event.event] = event;\n                }\n            }\n        }\n        return result;\n    }\n    checkRevertBeforeSending(tx) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (this.options.checkRevertBeforeSending !== false) {\n                const reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__.getRevertReason)(this.web3Context, tx, this.options.contractAbi);\n                if (reason !== undefined) {\n                    throw yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, this.options.contractAbi, reason);\n                }\n            }\n        });\n    }\n    emitSending(tx) {\n        if (this.promiEvent.listenerCount(\"sending\") > 0) {\n            this.promiEvent.emit(\"sending\", tx);\n        }\n    }\n    populateGasPrice({ transactionFormatted, transaction }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            let result = transactionFormatted;\n            if (!((_a = this.options) === null || _a === void 0 ? void 0 : _a.ignoreGasPricing) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionFormatted.gasPrice) && ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas))) {\n                result = Object.assign(Object.assign({}, transactionFormatted), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__.getTransactionGasPricing)(transactionFormatted, this.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));\n            }\n            return result;\n        });\n    }\n    signAndSend({ wallet, tx }) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (wallet) {\n                const signedTransaction = yield wallet.signTransaction(tx);\n                return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, ()=>__awaiter(this, void 0, void 0, function*() {\n                        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendRawTransaction(this.web3Context.requestManager, signedTransaction.rawTransaction);\n                    }), signedTransaction.transactionHash);\n            }\n            return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, ()=>__awaiter(this, void 0, void 0, function*() {\n                    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendTransaction(this.web3Context.requestManager, tx);\n                }));\n        });\n    }\n    emitSent(tx) {\n        if (this.promiEvent.listenerCount(\"sent\") > 0) {\n            this.promiEvent.emit(\"sent\", tx);\n        }\n    }\n    emitTransactionHash(hash) {\n        if (this.promiEvent.listenerCount(\"transactionHash\") > 0) {\n            this.promiEvent.emit(\"transactionHash\", hash);\n        }\n    }\n    emitReceipt(receipt) {\n        if (this.promiEvent.listenerCount(\"receipt\") > 0) {\n            this.promiEvent.emit(\"receipt\", // @ts-expect-error unknown type fix\n            receipt);\n        }\n    }\n    handleError({ error, tx }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            let _error = error;\n            if (_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError && this.web3Context.handleRevert) {\n                _error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, (_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi);\n            }\n            if ((_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidResponseError || _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError || _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertWithCustomError || _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertedWithoutReasonError || _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertInstructionError || _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionPollingTimeoutError) && this.promiEvent.listenerCount(\"error\") > 0) {\n                this.promiEvent.emit(\"error\", _error);\n            }\n            return _error;\n        });\n    }\n    emitConfirmation({ receipt, transactionHash }) {\n        if (this.promiEvent.listenerCount(\"confirmation\") > 0) {\n            (0,_watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__.watchTransactionForConfirmations)(this.web3Context, this.promiEvent, receipt, transactionHash, this.returnFormat);\n        }\n    }\n    handleResolve({ receipt, tx }) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function*() {\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.transactionResolver) {\n                return (_b = this.options) === null || _b === void 0 ? void 0 : _b.transactionResolver(receipt);\n            }\n            if (receipt.status === BigInt(0)) {\n                const error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, // @ts-expect-error unknown type fix\n                receipt, undefined, (_c = this.options) === null || _c === void 0 ? void 0 : _c.contractAbi);\n                if (this.promiEvent.listenerCount(\"error\") > 0) {\n                    this.promiEvent.emit(\"error\", error);\n                }\n                throw error;\n            } else {\n                return receipt;\n            }\n        });\n    }\n} //# sourceMappingURL=send_tx_helper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/transaction_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTransactionBuilder: () => (/* binding */ defaultTransactionBuilder),\n/* harmony export */   getTransactionFromOrToAttr: () => (/* binding */ getTransactionFromOrToAttr),\n/* harmony export */   getTransactionNonce: () => (/* binding */ getTransactionNonce),\n/* harmony export */   getTransactionType: () => (/* binding */ getTransactionType),\n/* harmony export */   transactionBuilder: () => (/* binding */ transactionBuilder)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-net */ \"(ssr)/./node_modules/web3-net/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n\n\n// eslint-disable-next-line import/no-cycle\n\nconst getTransactionFromOrToAttr = (attr, web3Context, transaction, privateKey)=>{\n    if (transaction !== undefined && attr in transaction && transaction[attr] !== undefined) {\n        if (typeof transaction[attr] === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(transaction[attr])) {\n            return transaction[attr];\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(transaction[attr]) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNumber)(transaction[attr])) {\n            if (web3Context.wallet) {\n                const account = web3Context.wallet.get((0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({\n                    format: \"uint\"\n                }, transaction[attr], _constants_js__WEBPACK_IMPORTED_MODULE_6__.NUMBER_DATA_FORMAT));\n                if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(account)) {\n                    return account.address;\n                }\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();\n            }\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();\n        } else {\n            throw attr === \"from\" ? new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithSender(transaction.from) : new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithReceiver(transaction.to);\n        }\n    }\n    if (attr === \"from\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(privateKey)) return (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress)(privateKey);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultAccount)) return web3Context.defaultAccount;\n    }\n    return undefined;\n};\nconst getTransactionNonce = (web3Context, address, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT)=>__awaiter(void 0, void 0, void 0, function*() {\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(address)) {\n            // TODO if (web3.eth.accounts.wallet) use address from local wallet\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.UnableToPopulateNonceError();\n        }\n        return (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount)(web3Context, address, web3Context.defaultBlock, returnFormat);\n    });\nconst getTransactionType = (transaction, web3Context)=>{\n    const inferredType = (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__.detectTransactionType)(transaction, web3Context);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(inferredType)) return inferredType;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultTransactionType)) return (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({\n        format: \"uint\"\n    }, web3Context.defaultTransactionType, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n    return undefined;\n};\n// Keep in mind that the order the properties of populateTransaction get populated matters\n// as some of the properties are dependent on others\nfunction defaultTransactionBuilder(options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function*() {\n        let populatedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_9__.transactionSchema, options.transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.from)) {\n            populatedTransaction.from = getTransactionFromOrToAttr(\"from\", options.web3Context, undefined, options.privateKey);\n        }\n        // TODO: Debug why need to typecase getTransactionNonce\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.nonce)) {\n            populatedTransaction.nonce = yield getTransactionNonce(options.web3Context, populatedTransaction.from, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.value)) {\n            populatedTransaction.value = \"0x0\";\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.data)) {\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input) && populatedTransaction.data !== populatedTransaction.input) throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.TransactionDataAndInputError({\n                data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.data),\n                input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.input)\n            });\n            if (!populatedTransaction.data.startsWith(\"0x\")) populatedTransaction.data = `0x${populatedTransaction.data}`;\n        } else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input)) {\n            if (!populatedTransaction.input.startsWith(\"0x\")) populatedTransaction.input = `0x${populatedTransaction.input}`;\n        } else {\n            populatedTransaction.input = \"0x\";\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.common)) {\n            if (options.web3Context.defaultCommon) {\n                const common = options.web3Context.defaultCommon;\n                const chainId = common.customChain.chainId;\n                const networkId = common.customChain.networkId;\n                const name = common.customChain.name;\n                populatedTransaction.common = Object.assign(Object.assign({}, common), {\n                    customChain: {\n                        chainId,\n                        networkId,\n                        name\n                    }\n                });\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chain)) {\n                populatedTransaction.chain = options.web3Context.defaultChain;\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.hardfork)) {\n                populatedTransaction.hardfork = options.web3Context.defaultHardfork;\n            }\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chainId) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)((_a = populatedTransaction.common) === null || _a === void 0 ? void 0 : _a.customChain.chainId)) {\n            populatedTransaction.chainId = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.networkId)) {\n            populatedTransaction.networkId = (_b = options.web3Context.defaultNetworkId) !== null && _b !== void 0 ? _b : yield (0,web3_net__WEBPACK_IMPORTED_MODULE_2__.getId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas)) {\n            populatedTransaction.gasLimit = populatedTransaction.gas;\n        }\n        populatedTransaction.type = getTransactionType(populatedTransaction, options.web3Context);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.accessList) && (populatedTransaction.type === \"0x1\" || populatedTransaction.type === \"0x2\")) {\n            populatedTransaction.accessList = [];\n        }\n        if (options.fillGasPrice) populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__.getTransactionGasPricing)(populatedTransaction, options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) && options.fillGasLimit) {\n            const fillGasLimit = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas)(options.web3Context, populatedTransaction, \"latest\", web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), {\n                gas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({\n                    format: \"uint\"\n                }, fillGasLimit, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)\n            });\n        }\n        return populatedTransaction;\n    });\n}\nconst transactionBuilder = (options)=>__awaiter(void 0, void 0, void 0, function*() {\n        var _a;\n        return ((_a = options.web3Context.transactionBuilder) !== null && _a !== void 0 ? _a : defaultTransactionBuilder)(Object.assign(Object.assign({}, options), {\n            transaction: options.transaction\n        }));\n    }); //# sourceMappingURL=transaction_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trySendTransaction: () => (/* binding */ trySendTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n// eslint-disable-next-line import/no-cycle\n\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */ function trySendTransaction(web3Context, sendTransactionFunc, transactionHash) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfTimeout)(web3Context.transactionSendTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionSendTimeoutError({\n            numberOfSeconds: web3Context.transactionSendTimeout / 1000,\n            transactionHash\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                sendTransactionFunc(),\n                rejectOnTimeout,\n                rejectOnBlockTimeout\n            ]);\n        } finally{\n            clearTimeout(timeoutId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n} //# sourceMappingURL=try_send_transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy90cnlfc2VuZF90cmFuc2FjdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQzZDO0FBQ2E7QUFDMUQsMkNBQTJDO0FBQ3lCO0FBQ3BFOzs7Ozs7Q0FNQyxHQUNNLFNBQVNVLG1CQUFtQkMsV0FBVyxFQUFFQyxtQkFBbUIsRUFBRUMsZUFBZTtJQUNoRixPQUFPekIsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxNQUFNLENBQUMwQixXQUFXQyxnQkFBZ0IsR0FBR1IsMkRBQWVBLENBQUNJLFlBQVlLLHNCQUFzQixFQUFFLElBQUlSLG9FQUEyQkEsQ0FBQztZQUNySFMsaUJBQWlCTixZQUFZSyxzQkFBc0IsR0FBRztZQUN0REg7UUFDSjtRQUNBLE1BQU0sQ0FBQ0ssc0JBQXNCQyw0QkFBNEIsR0FBRyxNQUFNVixpRkFBb0JBLENBQUNFLGFBQWFFO1FBQ3BHLElBQUk7WUFDQSxpSEFBaUg7WUFDakgsT0FBTyxNQUFNakIsUUFBUXdCLElBQUksQ0FBQztnQkFDdEJSO2dCQUNBRztnQkFDQUc7YUFDSDtRQUNMLFNBQ1E7WUFDSkcsYUFBYVA7WUFDYkssNEJBQTRCRyxLQUFLO1FBQ3JDO0lBQ0o7QUFDSixFQUNBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL3RyeV9zZW5kX3RyYW5zYWN0aW9uLmpzPzI4MTEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyByZWplY3RJZlRpbWVvdXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uU2VuZFRpbWVvdXRFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IHJlamVjdElmQmxvY2tUaW1lb3V0IH0gZnJvbSAnLi9yZWplY3RfaWZfYmxvY2tfdGltZW91dC5qcyc7XG4vKipcbiAqIEFuIGludGVybmFsIGZ1bmN0aW9uIHRvIHNlbmQgYSB0cmFuc2FjdGlvbiBvciB0aHJvd3MgaWYgc2VuZGluZyBkaWQgbm90IGZpbmlzaCBkdXJpbmcgdGhlIHRpbWVvdXQgZHVyaW5nIHRoZSBibG9ja3MtdGltZW91dC5cbiAqIEBwYXJhbSB3ZWIzQ29udGV4dCAtIHRoZSBjb250ZXh0IHRvIHJlYWQgdGhlIGNvbmZpZ3VyYXRpb25zIGZyb21cbiAqIEBwYXJhbSBzZW5kVHJhbnNhY3Rpb25GdW5jIC0gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBzZW5kIHRoZSB0cmFuc2FjdGlvbiAoY291bGQgYmUgc2VuZFRyYW5zYWN0aW9uIG9yIHNlbmRSYXdUcmFuc2FjdGlvbilcbiAqIEBwYXJhbSB0cmFuc2FjdGlvbkhhc2ggLSB0byBiZSB1c2VkIGluc2lkZSB0aGUgZXhjZXB0aW9uIG1lc3NhZ2UgaWYgdGhlcmUgd2lsbCBiZSBhbnkgZXhjZXB0aW9ucy5cbiAqIEByZXR1cm5zIHRoZSBQcm9taXNlPHN0cmluZz4gcmV0dXJuZWQgYnkgdGhlIGBzZW5kVHJhbnNhY3Rpb25GdW5jYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyeVNlbmRUcmFuc2FjdGlvbih3ZWIzQ29udGV4dCwgc2VuZFRyYW5zYWN0aW9uRnVuYywgdHJhbnNhY3Rpb25IYXNoKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgW3RpbWVvdXRJZCwgcmVqZWN0T25UaW1lb3V0XSA9IHJlamVjdElmVGltZW91dCh3ZWIzQ29udGV4dC50cmFuc2FjdGlvblNlbmRUaW1lb3V0LCBuZXcgVHJhbnNhY3Rpb25TZW5kVGltZW91dEVycm9yKHtcbiAgICAgICAgICAgIG51bWJlck9mU2Vjb25kczogd2ViM0NvbnRleHQudHJhbnNhY3Rpb25TZW5kVGltZW91dCAvIDEwMDAsXG4gICAgICAgICAgICB0cmFuc2FjdGlvbkhhc2gsXG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc3QgW3JlamVjdE9uQmxvY2tUaW1lb3V0LCBibG9ja1RpbWVvdXRSZXNvdXJjZUNsZWFuZXJdID0geWllbGQgcmVqZWN0SWZCbG9ja1RpbWVvdXQod2ViM0NvbnRleHQsIHRyYW5zYWN0aW9uSGFzaCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBJZiBhbiBlcnJvciBoYXBwZW5lZCBoZXJlLCBkbyBub3QgY2F0Y2ggaXQsIGp1c3QgY2xlYXIgdGhlIHJlc291cmNlcyBiZWZvcmUgcmFpc2luZyBpdCB0byB0aGUgY2FsbGVyIGZ1bmN0aW9uLlxuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIFByb21pc2UucmFjZShbXG4gICAgICAgICAgICAgICAgc2VuZFRyYW5zYWN0aW9uRnVuYygpLFxuICAgICAgICAgICAgICAgIHJlamVjdE9uVGltZW91dCxcbiAgICAgICAgICAgICAgICByZWplY3RPbkJsb2NrVGltZW91dCwgLy8gdGhpcyB3aWxsIHRocm93IGFuIGVycm9yIG9uIFRyYW5zYWN0aW9uIEJsb2NrIFRpbWVvdXRcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgICAgICBibG9ja1RpbWVvdXRSZXNvdXJjZUNsZWFuZXIuY2xlYW4oKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJ5X3NlbmRfdHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsInJlamVjdElmVGltZW91dCIsIlRyYW5zYWN0aW9uU2VuZFRpbWVvdXRFcnJvciIsInJlamVjdElmQmxvY2tUaW1lb3V0IiwidHJ5U2VuZFRyYW5zYWN0aW9uIiwid2ViM0NvbnRleHQiLCJzZW5kVHJhbnNhY3Rpb25GdW5jIiwidHJhbnNhY3Rpb25IYXNoIiwidGltZW91dElkIiwicmVqZWN0T25UaW1lb3V0IiwidHJhbnNhY3Rpb25TZW5kVGltZW91dCIsIm51bWJlck9mU2Vjb25kcyIsInJlamVjdE9uQmxvY2tUaW1lb3V0IiwiYmxvY2tUaW1lb3V0UmVzb3VyY2VDbGVhbmVyIiwicmFjZSIsImNsZWFyVGltZW91dCIsImNsZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction waitForTransactionReceipt(web3Context, transactionHash, returnFormat) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function*() {\n        const pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;\n        const [awaitableTransactionReceipt, IntervalId] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.pollTillDefinedAndReturnIntervalId)(()=>__awaiter(this, void 0, void 0, function*() {\n                try {\n                    return (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getTransactionReceipt)(web3Context, transactionHash, returnFormat);\n                } catch (error) {\n                    console.warn(\"An error happen while trying to get the transaction receipt\", error);\n                    return undefined;\n                }\n            }), pollingInterval);\n        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rejectIfTimeout)(web3Context.transactionPollingTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionPollingTimeoutError({\n            numberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n            transactionHash\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                awaitableTransactionReceipt,\n                rejectOnTimeout,\n                rejectOnBlockTimeout\n            ]);\n        } finally{\n            if (timeoutId) clearTimeout(timeoutId);\n            if (IntervalId) clearInterval(IntervalId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n} //# sourceMappingURL=wait_for_transaction_receipt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionByPolling: () => (/* binding */ watchTransactionByPolling)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider does not support subscription.\n * And it is also used by `watchTransactionBySubscription`, as a fallback, if the subscription failed for any reason.\n */ const watchTransactionByPolling = ({ web3Context, transactionReceipt, transactionPromiEvent, returnFormat })=>{\n    var _a;\n    // Having a transactionReceipt means that the transaction has already been included\n    // in at least one block, so we start with 1\n    let confirmations = 1;\n    const intervalId = setInterval(()=>{\n        (()=>__awaiter(void 0, void 0, void 0, function*() {\n                if (confirmations >= web3Context.transactionConfirmationBlocks) clearInterval(intervalId);\n                const nextBlock = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(BigInt(transactionReceipt.blockNumber) + BigInt(confirmations)), false);\n                if (nextBlock === null || nextBlock === void 0 ? void 0 : nextBlock.hash) {\n                    confirmations += 1;\n                    transactionPromiEvent.emit(\"confirmation\", {\n                        confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n                            format: \"uint\"\n                        }, confirmations, returnFormat),\n                        receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.transactionReceiptSchema, transactionReceipt, returnFormat),\n                        latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n                            format: \"bytes32\"\n                        }, nextBlock.hash, returnFormat)\n                    });\n                }\n            }))();\n    }, (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval);\n}; //# sourceMappingURL=watch_transaction_by_polling.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9ieV9wb2xsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDaUQ7QUFDQTtBQUNRO0FBQ3pEOzs7O0NBSUMsR0FDTSxNQUFNVyw0QkFBNEIsQ0FBQyxFQUFFQyxXQUFXLEVBQUVDLGtCQUFrQixFQUFFQyxxQkFBcUIsRUFBRUMsWUFBWSxFQUFHO0lBQy9HLElBQUlDO0lBQ0osbUZBQW1GO0lBQ25GLDRDQUE0QztJQUM1QyxJQUFJQyxnQkFBZ0I7SUFDcEIsTUFBTUMsYUFBYUMsWUFBWTtRQUMxQixLQUFNL0IsVUFBVSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRztnQkFDckMsSUFBSTZCLGlCQUFpQkwsWUFBWVEsNkJBQTZCLEVBQzFEQyxjQUFjSDtnQkFDbEIsTUFBTUksWUFBWSxNQUFNYiw0RUFBOEIsQ0FBQ0csWUFBWVksY0FBYyxFQUFFaEIsdURBQVdBLENBQUNpQixPQUFPWixtQkFBbUJhLFdBQVcsSUFBSUQsT0FBT1IsaUJBQWlCO2dCQUNoSyxJQUFJSyxjQUFjLFFBQVFBLGNBQWMsS0FBSyxJQUFJLEtBQUssSUFBSUEsVUFBVUssSUFBSSxFQUFFO29CQUN0RVYsaUJBQWlCO29CQUNqQkgsc0JBQXNCYyxJQUFJLENBQUMsZ0JBQWdCO3dCQUN2Q1gsZUFBZVYsa0RBQU1BLENBQUM7NEJBQUVBLFFBQVE7d0JBQU8sR0FBR1UsZUFBZUY7d0JBQ3pEYyxTQUFTdEIsa0RBQU1BLENBQUNHLGlFQUF3QkEsRUFBRUcsb0JBQW9CRTt3QkFDOURlLGlCQUFpQnZCLGtEQUFNQSxDQUFDOzRCQUFFQSxRQUFRO3dCQUFVLEdBQUdlLFVBQVVLLElBQUksRUFBRVo7b0JBQ25FO2dCQUNKO1lBQ0osRUFBQztJQUNMLEdBQUcsQ0FBQ0MsS0FBS0osWUFBWW1CLGlDQUFpQyxNQUFNLFFBQVFmLE9BQU8sS0FBSyxJQUFJQSxLQUFLSixZQUFZb0IsMEJBQTBCO0FBQ25JLEVBQUUsQ0FDRix3REFBd0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZmlsZXMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9ieV9wb2xsaW5nLmpzPzU4OGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBmb3JtYXQsIG51bWJlclRvSGV4IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBldGhScGNNZXRob2RzIH0gZnJvbSAnd2ViMy1ycGMtbWV0aG9kcyc7XG5pbXBvcnQgeyB0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgfSBmcm9tICcuLi9zY2hlbWFzLmpzJztcbi8qKlxuICogVGhpcyBmdW5jdGlvbiB3YXRjaGVzIGEgVHJhbnNhY3Rpb24gYnkgc3Vic2NyaWJpbmcgdG8gbmV3IGhlYWRzLlxuICogSXQgaXMgdXNlZCBieSBgd2F0Y2hUcmFuc2FjdGlvbkZvckNvbmZpcm1hdGlvbnNgLCBpbiBjYXNlIHRoZSBwcm92aWRlciBkb2VzIG5vdCBzdXBwb3J0IHN1YnNjcmlwdGlvbi5cbiAqIEFuZCBpdCBpcyBhbHNvIHVzZWQgYnkgYHdhdGNoVHJhbnNhY3Rpb25CeVN1YnNjcmlwdGlvbmAsIGFzIGEgZmFsbGJhY2ssIGlmIHRoZSBzdWJzY3JpcHRpb24gZmFpbGVkIGZvciBhbnkgcmVhc29uLlxuICovXG5leHBvcnQgY29uc3Qgd2F0Y2hUcmFuc2FjdGlvbkJ5UG9sbGluZyA9ICh7IHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvblJlY2VpcHQsIHRyYW5zYWN0aW9uUHJvbWlFdmVudCwgcmV0dXJuRm9ybWF0LCB9KSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIC8vIEhhdmluZyBhIHRyYW5zYWN0aW9uUmVjZWlwdCBtZWFucyB0aGF0IHRoZSB0cmFuc2FjdGlvbiBoYXMgYWxyZWFkeSBiZWVuIGluY2x1ZGVkXG4gICAgLy8gaW4gYXQgbGVhc3Qgb25lIGJsb2NrLCBzbyB3ZSBzdGFydCB3aXRoIDFcbiAgICBsZXQgY29uZmlybWF0aW9ucyA9IDE7XG4gICAgY29uc3QgaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgKCgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGNvbmZpcm1hdGlvbnMgPj0gd2ViM0NvbnRleHQudHJhbnNhY3Rpb25Db25maXJtYXRpb25CbG9ja3MpXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTtcbiAgICAgICAgICAgIGNvbnN0IG5leHRCbG9jayA9IHlpZWxkIGV0aFJwY01ldGhvZHMuZ2V0QmxvY2tCeU51bWJlcih3ZWIzQ29udGV4dC5yZXF1ZXN0TWFuYWdlciwgbnVtYmVyVG9IZXgoQmlnSW50KHRyYW5zYWN0aW9uUmVjZWlwdC5ibG9ja051bWJlcikgKyBCaWdJbnQoY29uZmlybWF0aW9ucykpLCBmYWxzZSk7XG4gICAgICAgICAgICBpZiAobmV4dEJsb2NrID09PSBudWxsIHx8IG5leHRCbG9jayA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmV4dEJsb2NrLmhhc2gpIHtcbiAgICAgICAgICAgICAgICBjb25maXJtYXRpb25zICs9IDE7XG4gICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LmVtaXQoJ2NvbmZpcm1hdGlvbicsIHtcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybWF0aW9uczogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgY29uZmlybWF0aW9ucywgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgICAgICAgICAgcmVjZWlwdDogZm9ybWF0KHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSwgdHJhbnNhY3Rpb25SZWNlaXB0LCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgICAgICAgICBsYXRlc3RCbG9ja0hhc2g6IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIG5leHRCbG9jay5oYXNoLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSkoKTtcbiAgICB9LCAoX2EgPSB3ZWIzQ29udGV4dC50cmFuc2FjdGlvblJlY2VpcHRQb2xsaW5nSW50ZXJ2YWwpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHdlYjNDb250ZXh0LnRyYW5zYWN0aW9uUG9sbGluZ0ludGVydmFsKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaF90cmFuc2FjdGlvbl9ieV9wb2xsaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJhZG9wdCIsInZhbHVlIiwicmVzb2x2ZSIsIlByb21pc2UiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJmb3JtYXQiLCJudW1iZXJUb0hleCIsImV0aFJwY01ldGhvZHMiLCJ0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEiLCJ3YXRjaFRyYW5zYWN0aW9uQnlQb2xsaW5nIiwid2ViM0NvbnRleHQiLCJ0cmFuc2FjdGlvblJlY2VpcHQiLCJ0cmFuc2FjdGlvblByb21pRXZlbnQiLCJyZXR1cm5Gb3JtYXQiLCJfYSIsImNvbmZpcm1hdGlvbnMiLCJpbnRlcnZhbElkIiwic2V0SW50ZXJ2YWwiLCJ0cmFuc2FjdGlvbkNvbmZpcm1hdGlvbkJsb2NrcyIsImNsZWFySW50ZXJ2YWwiLCJuZXh0QmxvY2siLCJnZXRCbG9ja0J5TnVtYmVyIiwicmVxdWVzdE1hbmFnZXIiLCJCaWdJbnQiLCJibG9ja051bWJlciIsImhhc2giLCJlbWl0IiwicmVjZWlwdCIsImxhdGVzdEJsb2NrSGFzaCIsInRyYW5zYWN0aW9uUmVjZWlwdFBvbGxpbmdJbnRlcnZhbCIsInRyYW5zYWN0aW9uUG9sbGluZ0ludGVydmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionBySubscription: () => (/* binding */ watchTransactionBySubscription)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider supports subscription.\n */ const watchTransactionBySubscription = ({ web3Context, transactionReceipt, transactionPromiEvent, returnFormat })=>{\n    // The following variable will stay true except if the data arrived,\n    //\tor if watching started after an error had occurred.\n    let needToWatchLater = true;\n    let lastCaughtBlockHash;\n    setImmediate(()=>{\n        var _a;\n        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe(\"newHeads\").then((subscription)=>{\n            subscription.on(\"data\", (newBlockHeader)=>__awaiter(void 0, void 0, void 0, function*() {\n                    var _a;\n                    needToWatchLater = false;\n                    if (!(newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.number) || // For some cases, the on-data event is fired couple times for the same block!\n                    // This needs investigation but seems to be because of multiple `subscription.on('data'...)` even this should not cause that.\n                    lastCaughtBlockHash === (newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash)) {\n                        return;\n                    }\n                    lastCaughtBlockHash = newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash;\n                    const confirmations = BigInt(newBlockHeader.number) - BigInt(transactionReceipt.blockNumber) + BigInt(1);\n                    transactionPromiEvent.emit(\"confirmation\", {\n                        confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n                            format: \"uint\"\n                        }, confirmations, returnFormat),\n                        receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_1__.transactionReceiptSchema, transactionReceipt, returnFormat),\n                        latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n                            format: \"bytes32\"\n                        }, newBlockHeader.parentHash, returnFormat)\n                    });\n                    if (confirmations >= web3Context.transactionConfirmationBlocks) {\n                        yield (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription);\n                    }\n                }));\n            subscription.on(\"error\", ()=>__awaiter(void 0, void 0, void 0, function*() {\n                    var _b;\n                    yield (_b = web3Context.subscriptionManager) === null || _b === void 0 ? void 0 : _b.removeSubscription(subscription);\n                    needToWatchLater = false;\n                    (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                        web3Context,\n                        transactionReceipt,\n                        transactionPromiEvent,\n                        returnFormat\n                    });\n                }));\n        }).catch(()=>{\n            needToWatchLater = false;\n            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                web3Context,\n                transactionReceipt,\n                transactionPromiEvent,\n                returnFormat\n            });\n        });\n    });\n    // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n    setTimeout(()=>{\n        if (needToWatchLater) {\n            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                web3Context,\n                transactionReceipt,\n                transactionPromiEvent,\n                returnFormat\n            });\n        }\n    }, web3Context.blockHeaderTimeout * 1000);\n}; //# sourceMappingURL=watch_transaction_by_subscription.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js":
/*!************************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionForConfirmations: () => (/* binding */ watchTransactionForConfirmations)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\");\n/* harmony import */ var _watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./watch_transaction_by_subscription.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js\");\n\n\n\n\n\n\nfunction watchTransactionForConfirmations(web3Context, transactionPromiEvent, transactionReceipt, transactionHash, returnFormat) {\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt.blockHash)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionMissingReceiptOrBlockHashError({\n        receipt: transactionReceipt,\n        blockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"bytes32\"\n        }, transactionReceipt === null || transactionReceipt === void 0 ? void 0 : transactionReceipt.blockHash, returnFormat),\n        transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"bytes32\"\n        }, transactionHash, returnFormat)\n    });\n    if (!transactionReceipt.blockNumber) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionReceiptMissingBlockNumberError({\n        receipt: transactionReceipt\n    });\n    // As we have the receipt, it's the first confirmation that tx is accepted.\n    transactionPromiEvent.emit(\"confirmation\", {\n        confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"uint\"\n        }, 1, returnFormat),\n        receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema, transactionReceipt, returnFormat),\n        latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"bytes32\"\n        }, transactionReceipt.blockHash, returnFormat)\n    });\n    // so a subscription for newBlockHeaders can be made instead of polling\n    const provider = web3Context.requestManager.provider;\n    if (provider && \"supportsSubscriptions\" in provider && provider.supportsSubscriptions()) {\n        (0,_watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__.watchTransactionBySubscription)({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            returnFormat\n        });\n    } else {\n        (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__.watchTransactionByPolling)({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            returnFormat\n        });\n    }\n} //# sourceMappingURL=watch_transaction_for_confirmations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9mb3JfY29uZmlybWF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9DO0FBQ087QUFDeUU7QUFDM0Q7QUFDc0I7QUFDUztBQUNqRixTQUFTTyxpQ0FBaUNDLFdBQVcsRUFBRUMscUJBQXFCLEVBQUVDLGtCQUFrQixFQUFFQyxlQUFlLEVBQUVDLFlBQVk7SUFDbEksSUFBSVgseURBQVNBLENBQUNTLHVCQUF1QlQseURBQVNBLENBQUNTLG1CQUFtQkcsU0FBUyxHQUN2RSxNQUFNLElBQUlYLGtGQUF5Q0EsQ0FBQztRQUNoRFksU0FBU0o7UUFDVEcsV0FBV2Isa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFVLEdBQUdVLHVCQUF1QixRQUFRQSx1QkFBdUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsbUJBQW1CRyxTQUFTLEVBQUVEO1FBQy9JRCxpQkFBaUJYLGtEQUFNQSxDQUFDO1lBQUVBLFFBQVE7UUFBVSxHQUFHVyxpQkFBaUJDO0lBQ3BFO0lBQ0osSUFBSSxDQUFDRixtQkFBbUJLLFdBQVcsRUFDL0IsTUFBTSxJQUFJWixrRkFBeUNBLENBQUM7UUFBRVcsU0FBU0o7SUFBbUI7SUFDdEYsMkVBQTJFO0lBQzNFRCxzQkFBc0JPLElBQUksQ0FBQyxnQkFBZ0I7UUFDdkNDLGVBQWVqQixrREFBTUEsQ0FBQztZQUFFQSxRQUFRO1FBQU8sR0FBRyxHQUFHWTtRQUM3Q0UsU0FBU2Qsa0RBQU1BLENBQUNJLGlFQUF3QkEsRUFBRU0sb0JBQW9CRTtRQUM5RE0saUJBQWlCbEIsa0RBQU1BLENBQUM7WUFBRUEsUUFBUTtRQUFVLEdBQUdVLG1CQUFtQkcsU0FBUyxFQUFFRDtJQUNqRjtJQUNBLHVFQUF1RTtJQUN2RSxNQUFNTyxXQUFXWCxZQUFZWSxjQUFjLENBQUNELFFBQVE7SUFDcEQsSUFBSUEsWUFBWSwyQkFBMkJBLFlBQVlBLFNBQVNFLHFCQUFxQixJQUFJO1FBQ3JGZixxR0FBOEJBLENBQUM7WUFDM0JFO1lBQ0FFO1lBQ0FEO1lBQ0FHO1FBQ0o7SUFDSixPQUNLO1FBQ0RQLDJGQUF5QkEsQ0FBQztZQUN0Qkc7WUFDQUU7WUFDQUQ7WUFDQUc7UUFDSjtJQUNKO0FBQ0osRUFDQSwrREFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZmlsZXMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9mb3JfY29uZmlybWF0aW9ucy5qcz82NjBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgaXNOdWxsaXNoIH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25NaXNzaW5nUmVjZWlwdE9yQmxvY2tIYXNoRXJyb3IsIFRyYW5zYWN0aW9uUmVjZWlwdE1pc3NpbmdCbG9ja051bWJlckVycm9yLCB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSB9IGZyb20gJy4uL3NjaGVtYXMuanMnO1xuaW1wb3J0IHsgd2F0Y2hUcmFuc2FjdGlvbkJ5UG9sbGluZywgfSBmcm9tICcuL3dhdGNoX3RyYW5zYWN0aW9uX2J5X3BvbGxpbmcuanMnO1xuaW1wb3J0IHsgd2F0Y2hUcmFuc2FjdGlvbkJ5U3Vic2NyaXB0aW9uIH0gZnJvbSAnLi93YXRjaF90cmFuc2FjdGlvbl9ieV9zdWJzY3JpcHRpb24uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoVHJhbnNhY3Rpb25Gb3JDb25maXJtYXRpb25zKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvblByb21pRXZlbnQsIHRyYW5zYWN0aW9uUmVjZWlwdCwgdHJhbnNhY3Rpb25IYXNoLCByZXR1cm5Gb3JtYXQpIHtcbiAgICBpZiAoaXNOdWxsaXNoKHRyYW5zYWN0aW9uUmVjZWlwdCkgfHwgaXNOdWxsaXNoKHRyYW5zYWN0aW9uUmVjZWlwdC5ibG9ja0hhc2gpKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25NaXNzaW5nUmVjZWlwdE9yQmxvY2tIYXNoRXJyb3Ioe1xuICAgICAgICAgICAgcmVjZWlwdDogdHJhbnNhY3Rpb25SZWNlaXB0LFxuICAgICAgICAgICAgYmxvY2tIYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCB0cmFuc2FjdGlvblJlY2VpcHQgPT09IG51bGwgfHwgdHJhbnNhY3Rpb25SZWNlaXB0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0cmFuc2FjdGlvblJlY2VpcHQuYmxvY2tIYXNoLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgdHJhbnNhY3Rpb25IYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCB0cmFuc2FjdGlvbkhhc2gsIHJldHVybkZvcm1hdCksXG4gICAgICAgIH0pO1xuICAgIGlmICghdHJhbnNhY3Rpb25SZWNlaXB0LmJsb2NrTnVtYmVyKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25SZWNlaXB0TWlzc2luZ0Jsb2NrTnVtYmVyRXJyb3IoeyByZWNlaXB0OiB0cmFuc2FjdGlvblJlY2VpcHQgfSk7XG4gICAgLy8gQXMgd2UgaGF2ZSB0aGUgcmVjZWlwdCwgaXQncyB0aGUgZmlyc3QgY29uZmlybWF0aW9uIHRoYXQgdHggaXMgYWNjZXB0ZWQuXG4gICAgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LmVtaXQoJ2NvbmZpcm1hdGlvbicsIHtcbiAgICAgICAgY29uZmlybWF0aW9uczogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgMSwgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgcmVjZWlwdDogZm9ybWF0KHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSwgdHJhbnNhY3Rpb25SZWNlaXB0LCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICBsYXRlc3RCbG9ja0hhc2g6IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIHRyYW5zYWN0aW9uUmVjZWlwdC5ibG9ja0hhc2gsIHJldHVybkZvcm1hdCksXG4gICAgfSk7XG4gICAgLy8gc28gYSBzdWJzY3JpcHRpb24gZm9yIG5ld0Jsb2NrSGVhZGVycyBjYW4gYmUgbWFkZSBpbnN0ZWFkIG9mIHBvbGxpbmdcbiAgICBjb25zdCBwcm92aWRlciA9IHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLnByb3ZpZGVyO1xuICAgIGlmIChwcm92aWRlciAmJiAnc3VwcG9ydHNTdWJzY3JpcHRpb25zJyBpbiBwcm92aWRlciAmJiBwcm92aWRlci5zdXBwb3J0c1N1YnNjcmlwdGlvbnMoKSkge1xuICAgICAgICB3YXRjaFRyYW5zYWN0aW9uQnlTdWJzY3JpcHRpb24oe1xuICAgICAgICAgICAgd2ViM0NvbnRleHQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvblJlY2VpcHQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvblByb21pRXZlbnQsXG4gICAgICAgICAgICByZXR1cm5Gb3JtYXQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgd2F0Y2hUcmFuc2FjdGlvbkJ5UG9sbGluZyh7XG4gICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uUmVjZWlwdCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uUHJvbWlFdmVudCxcbiAgICAgICAgICAgIHJldHVybkZvcm1hdCxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hfdHJhbnNhY3Rpb25fZm9yX2NvbmZpcm1hdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbImZvcm1hdCIsImlzTnVsbGlzaCIsIlRyYW5zYWN0aW9uTWlzc2luZ1JlY2VpcHRPckJsb2NrSGFzaEVycm9yIiwiVHJhbnNhY3Rpb25SZWNlaXB0TWlzc2luZ0Jsb2NrTnVtYmVyRXJyb3IiLCJ0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEiLCJ3YXRjaFRyYW5zYWN0aW9uQnlQb2xsaW5nIiwid2F0Y2hUcmFuc2FjdGlvbkJ5U3Vic2NyaXB0aW9uIiwid2F0Y2hUcmFuc2FjdGlvbkZvckNvbmZpcm1hdGlvbnMiLCJ3ZWIzQ29udGV4dCIsInRyYW5zYWN0aW9uUHJvbWlFdmVudCIsInRyYW5zYWN0aW9uUmVjZWlwdCIsInRyYW5zYWN0aW9uSGFzaCIsInJldHVybkZvcm1hdCIsImJsb2NrSGFzaCIsInJlY2VpcHQiLCJibG9ja051bWJlciIsImVtaXQiLCJjb25maXJtYXRpb25zIiwibGF0ZXN0QmxvY2tIYXNoIiwicHJvdmlkZXIiLCJyZXF1ZXN0TWFuYWdlciIsInN1cHBvcnRzU3Vic2NyaXB0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/validation.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/validation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAccessList: () => (/* binding */ isAccessList),\n/* harmony export */   isAccessListEntry: () => (/* binding */ isAccessListEntry),\n/* harmony export */   isBaseTransaction: () => (/* binding */ isBaseTransaction),\n/* harmony export */   isTransaction1559Unsigned: () => (/* binding */ isTransaction1559Unsigned),\n/* harmony export */   isTransaction2930Unsigned: () => (/* binding */ isTransaction2930Unsigned),\n/* harmony export */   isTransactionCall: () => (/* binding */ isTransactionCall),\n/* harmony export */   isTransactionLegacyUnsigned: () => (/* binding */ isTransactionLegacyUnsigned),\n/* harmony export */   isTransactionWithSender: () => (/* binding */ isTransactionWithSender),\n/* harmony export */   validateBaseChain: () => (/* binding */ validateBaseChain),\n/* harmony export */   validateChainInfo: () => (/* binding */ validateChainInfo),\n/* harmony export */   validateCustomChainInfo: () => (/* binding */ validateCustomChainInfo),\n/* harmony export */   validateFeeMarketGas: () => (/* binding */ validateFeeMarketGas),\n/* harmony export */   validateGas: () => (/* binding */ validateGas),\n/* harmony export */   validateHardfork: () => (/* binding */ validateHardfork),\n/* harmony export */   validateLegacyGas: () => (/* binding */ validateLegacyGas),\n/* harmony export */   validateTransactionCall: () => (/* binding */ validateTransactionCall),\n/* harmony export */   validateTransactionForSigning: () => (/* binding */ validateTransactionForSigning),\n/* harmony export */   validateTransactionWithSender: () => (/* binding */ validateTransactionWithSender)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nfunction isBaseTransaction(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.to) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.type) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type) && value.type.length !== 2) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.nonce)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input)) return false;\n    if (value.chainId && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.chainId)) return false;\n    return true;\n}\nfunction isAccessListEntry(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.address) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.address)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.storageKeys) && !value.storageKeys.every((storageKey)=>(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexString32Bytes)(storageKey))) return false;\n    return true;\n}\nfunction isAccessList(value) {\n    if (!Array.isArray(value) || !value.every((accessListEntry)=>isAccessListEntry(accessListEntry))) return false;\n    return true;\n}\nfunction isTransaction1559Unsigned(value) {\n    if (!isBaseTransaction(value)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxFeePerGas)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxPriorityFeePerGas)) return false;\n    if (!isAccessList(value.accessList)) return false;\n    return true;\n}\nfunction isTransaction2930Unsigned(value) {\n    if (!isBaseTransaction(value)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice)) return false;\n    if (!isAccessList(value.accessList)) return false;\n    return true;\n}\nfunction isTransactionLegacyUnsigned(value) {\n    if (!isBaseTransaction(value)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice)) return false;\n    return true;\n}\nfunction isTransactionWithSender(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from)) return false;\n    if (!isBaseTransaction(value)) return false;\n    if (!isTransaction1559Unsigned(value) && !isTransaction2930Unsigned(value) && !isTransactionLegacyUnsigned(value)) return false;\n    return true;\n}\nfunction validateTransactionWithSender(value) {\n    if (!isTransactionWithSender(value)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionWithSender(value);\n}\nfunction isTransactionCall(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.from) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gas) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gasPrice) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.data) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.data)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.input) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input)) return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type)) return false;\n    if (isTransaction1559Unsigned(value)) return false;\n    if (isTransaction2930Unsigned(value)) return false;\n    return true;\n}\nfunction validateTransactionCall(value) {\n    if (!isTransactionCall(value)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionCall(value);\n}\nconst validateCustomChainInfo = (transaction)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common)) {\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainError();\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain.chainId)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainIdError();\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chainId) && transaction.chainId !== transaction.common.customChain.chainId) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainIdMismatchError({\n            txChainId: transaction.chainId,\n            customChainId: transaction.common.customChain.chainId\n        });\n    }\n};\nconst validateChainInfo = (transaction)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.CommonOrChainAndHardforkError();\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingChainOrHardforkError({\n        chain: transaction.chain,\n        hardfork: transaction.hardfork\n    });\n};\nconst validateBaseChain = (transaction)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common)) {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.baseChain)) {\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) && transaction.chain !== transaction.common.baseChain) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainMismatchError({\n                    txChain: transaction.chain,\n                    baseChain: transaction.common.baseChain\n                });\n            }\n        }\n    }\n};\nconst validateHardfork = (transaction)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common)) {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.hardfork)) {\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) && transaction.hardfork !== transaction.common.hardfork) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.HardforkMismatchError({\n                    txHardfork: transaction.hardfork,\n                    commonHardfork: transaction.common.hardfork\n                });\n            }\n        }\n    }\n};\nconst validateLegacyGas = (transaction)=>{\n    if (// This check is verifying gas and gasPrice aren't less than 0.\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gas) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gasPrice)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidGasOrGasPrice({\n        gas: transaction.gas,\n        gasPrice: transaction.gasPrice\n    });\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({\n        maxFeePerGas: transaction.maxFeePerGas,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n    });\n};\nconst validateFeeMarketGas = (transaction)=>{\n    // These errors come from 1.x, so they must be checked before\n    // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n    // for the same code executing in 1.x\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) && transaction.type === \"0x2\") throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.Eip1559GasPriceError(transaction.gasPrice);\n    if (transaction.type === \"0x0\" || transaction.type === \"0x1\") throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({\n        maxFeePerGas: transaction.maxFeePerGas,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n    });\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxFeePerGas) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxPriorityFeePerGas)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        maxFeePerGas: transaction.maxFeePerGas\n    });\n};\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */ const validateGas = (transaction)=>{\n    const gasPresent = !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasLimit);\n    const legacyGasPresent = gasPresent && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice);\n    const feeMarketGasPresent = gasPresent && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas);\n    if (!legacyGasPresent && !feeMarketGasPresent) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingGasError({\n        gas: transaction.gas,\n        gasPrice: transaction.gasPrice,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        maxFeePerGas: transaction.maxFeePerGas\n    });\n    if (legacyGasPresent && feeMarketGasPresent) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionGasMismatchError({\n        gas: transaction.gas,\n        gasPrice: transaction.gasPrice,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        maxFeePerGas: transaction.maxFeePerGas\n    });\n    (legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n    (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.type) && transaction.type > \"0x1\" ? validateFeeMarketGas : validateLegacyGas)(transaction);\n};\nconst validateTransactionForSigning = (transaction, overrideMethod)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(overrideMethod)) {\n        overrideMethod(transaction);\n        return;\n    }\n    if (typeof transaction !== \"object\" || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionObjectError(transaction);\n    validateCustomChainInfo(transaction);\n    validateChainInfo(transaction);\n    validateBaseChain(transaction);\n    validateHardfork(transaction);\n    const formattedTransaction = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n    validateGas(formattedTransaction);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.nonce) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.chainId) || formattedTransaction.nonce.startsWith(\"-\") || formattedTransaction.chainId.startsWith(\"-\")) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidNonceOrChainIdError({\n        nonce: transaction.nonce,\n        chainId: transaction.chainId\n    });\n}; //# sourceMappingURL=validation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_eth.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3Eth: () => (/* binding */ Web3Eth),\n/* harmony export */   registeredSubscriptions: () => (/* binding */ registeredSubscriptions)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web3_subscriptions.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */ \n\n\n\n\n\n\nconst registeredSubscriptions = {\n    logs: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.LogsSubscription,\n    newPendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewPendingTransactionsSubscription,\n    newHeads: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewHeadsSubscription,\n    syncing: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.SyncingSubscription,\n    pendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewPendingTransactionsSubscription,\n    newBlockHeaders: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewHeadsSubscription\n};\n/**\n *\n * The Web3Eth allows you to interact with an Ethereum blockchain.\n *\n * For using Web3 Eth functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Web3 Eth functions will be available as mentioned in following snippet.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');\n *\n * const block = await web3.eth.getBlock(0);\n *\n * ```\n *\n * For using individual package install `web3-eth` package using `npm i web3-eth` or `yarn add web3-eth` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { Web3Eth } from 'web3-eth';\n *\n * const eth = new Web3Eth('https://mainnet.infura.io/v3/<YOURPROJID>');\n * const block = await eth.getBlock(0);\n *\n * ```\n */ class Web3Eth extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Context {\n    constructor(providerOrContext){\n        if (typeof providerOrContext === \"string\" || (0,web3_core__WEBPACK_IMPORTED_MODULE_1__.isSupportedProvider)(providerOrContext)) {\n            super({\n                provider: providerOrContext,\n                registeredSubscriptions\n            });\n            return;\n        }\n        if (providerOrContext.registeredSubscriptions) {\n            super(providerOrContext);\n            return;\n        }\n        super(Object.assign(Object.assign({}, providerOrContext), {\n            registeredSubscriptions\n        }));\n    }\n    /**\n     * @returns Returns the ethereum protocol version of the node.\n     *\n     * ```ts\n     * web3.eth.getProtocolVersion().then(console.log);\n     * > \"63\"\n     * ```\n     */ getProtocolVersion() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getProtocolVersion(this.requestManager);\n        });\n    }\n    // TODO Add returnFormat parameter\n    /**\n     * Checks if the node is currently syncing.\n     *\n     * @returns Either a {@link SyncingStatusAPI}, or `false`.\n     *\n     * ```ts\n     * web3.eth.isSyncing().then(console.log);\n     * > {\n     *     startingBlock: 100,\n     *     currentBlock: 312,\n     *     highestBlock: 512,\n     *     knownStates: 234566,\n     *     pulledStates: 123455\n     * }\n     * ```\n     */ isSyncing() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getSyncing(this.requestManager);\n        });\n    }\n    // TODO consider adding returnFormat parameter (to format address as bytes)\n    /**\n     * @returns Returns the coinbase address to which mining rewards will go.\n     *\n     * ```ts\n     * web3.eth.getCoinbase().then(console.log);\n     * > \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\"\n     * ```\n     */ getCoinbase() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getCoinbase(this.requestManager);\n        });\n    }\n    /**\n     * Checks whether the node is mining or not.\n     *\n     * @returns `true` if the node is mining, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.isMining().then(console.log);\n     * > true\n     * ```\n     */ isMining() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getMining(this.requestManager);\n        });\n    }\n    /**\n     * @deprecated Will be removed in the future, please use {@link Web3Eth.getHashRate} method instead.\n     *\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashrate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashrate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */ getHashrate(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this.getHashRate(returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashRate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashRate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */ getHashRate(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getHashRate(this, returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The gas price determined by the last few blocks median gas price.\n     *\n     * ```ts\n     * web3.eth.getGasPrice().then(console.log);\n     * > 20000000000n\n     *\n     * web3.eth.getGasPrice({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x4a817c800\"\n     * ```\n     */ getGasPrice(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getGasPrice(this, returnFormat);\n        });\n    }\n    /**\n     * @returns A list of accounts the node controls (addresses are checksummed).\n     *\n     * ```ts\n     * web3.eth.getAccounts().then(console.log);\n     * > [\"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", \"0xDCc6960376d6C6dEa93647383FfB245CfCed97Cf\"]\n     * ```\n     */ getAccounts() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const hexAddresses = (_a = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getAccounts(this.requestManager)) !== null && _a !== void 0 ? _a : [];\n            return hexAddresses.map((address)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(address));\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current block number.\n     *\n     * ```ts\n     * web3.eth.getBlockNumber().then(console.log);\n     * > 2744n\n     *\n     * web3.eth.getBlockNumber({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0xab8\"\n     * ```\n     */ getBlockNumber(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockNumber(this, returnFormat);\n        });\n    }\n    /**\n     * Get the balance of an address at a given block.\n     *\n     * @param address The address to get the balance of.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the balance query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current balance for the given address in `wei`.\n     *\n     * ```ts\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1000000000000n\n     *\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > \"0xe8d4a51000\"\n     * ```\n     */ getBalance(address, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBalance(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the storage at a specific position of an address.\n     *\n     * @param address The address to get the storage from.\n     * @param storageSlot The index position of the storage.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the storage query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The value in storage at the given position.\n     *\n     * ```ts\n     * web3.eth.getStorageAt(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\", 0).then(console.log);\n     * > \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"\n     *\n     * web3.eth.getStorageAt(\n     *      \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\",\n     *      0,\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(31) [\n     *       3, 52,  86, 115,  33,  35, 255, 255,\n     *       35, 66,  52,  45, 209,  35,  66,  67,\n     *       67, 36,  35,  66,  52, 253,  35,  79,\n     *       210, 63, 212, 242,  61,  66,  52\n     *    ]\n     * ```\n     */ getStorageAt(address, storageSlot, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getStorageAt(this, address, storageSlot, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the code at a specific address.\n     *\n     * @param address The address to get the code from.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the code query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The [data](https://ethereum.org/en/developers/docs/transactions/#the-data-field) at the provided `address`.\n     *\n     * ```ts\n     * web3.eth.getCode(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\").then(console.log);\n     * > \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\"\n     *\n     * web3.eth.getCode(\n     *      \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(50) [\n     *   96,  1,  96,   0, 128, 53, 129, 26, 129, 129, 129,\n     *   20, 96,  18,  87, 131,  1,   0, 91,  96,  27,  96,\n     *   1, 53,  96,  37,  86, 91, 128, 96,   0,  82,  96,\n     *   32, 96,   0, 242,  91, 96,   0, 96,   7, 130,   2,\n     *   144, 80, 145, 144,  80, 86\n     * ]\n     * ```\n     */ getCode(address, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getCode(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Retrieves a {@link Block} matching the provided block number, block hash or block tag.\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param hydrated If specified `true`, the returned block will contain all transactions as objects. If `false` it will only contain transaction hashes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted (does not format transaction objects or hashes).\n     * @returns A {@link Block} object matching the provided block number or block hash.\n     *\n     * ```ts\n     * web3.eth.getBlock(0).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getBlock(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      false,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */ getBlock(block = this.defaultBlock, hydrated = false, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlock(this, block, hydrated, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */ getBlockTransactionCount(block = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockTransactionCount(this, block, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of [uncles](https://ethereum.org/en/glossary/#ommer) in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockUncleCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockUncleCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */ getBlockUncleCount(block = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockUncleCount(this, block, returnFormat);\n        });\n    }\n    /**\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param uncleIndex The index position of the uncle.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A blocks [uncle](https://ethereum.org/en/glossary/#ommer) by a given uncle index position.\n     *\n     * ```ts\n     * web3.eth.getUncle(0, 1).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getUncle(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      1,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */ getUncle(block = this.defaultBlock, uncleIndex, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getUncle(this, block, uncleIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash The hash of the desired transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransaction('0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc').then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransaction(\n     *     web3.utils.hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */ getTransaction(transactionHash, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransaction(this, transactionHash, returnFormat);\n            if (!response) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A list of pending transactions.\n     *\n     * ```ts\n     * web3.eth.getPendingTransactions().then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0n,\n     *          nonce: 0n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2709n,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0n,\n     *          nonce: 1n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2710n,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     *\n     * * web3.eth.getPendingTransactions({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0,\n     *          nonce: 0,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2709,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0,\n     *          nonce: 1,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2710,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     * ```\n     */ getPendingTransactions(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getPendingTransactions(this, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param transactionIndex The index position of the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransactionFromBlock('0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00', 0).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransactionFromBlock(\n     *     hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     0,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */ getTransactionFromBlock(block = this.defaultBlock, transactionIndex, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionFromBlock(this, block, transactionIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash Hash of the transaction to retrieve the receipt for.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired {@link TransactionReceipt} object.\n     *\n     * ```ts\n     * web3.eth.getTransactionReceipt(\"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\").then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     *  }\n     *\n     * web3.eth.getTransactionReceipt(\n     *      \"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\",\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0,\n     *      blockNumber: 2,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000,\n     *      gasUsed: 21000,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1,\n     *      effectiveGasPrice: 2000000000,\n     *      type: 0n\n     *  }\n     * ```\n     */ getTransactionReceipt(transactionHash, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionReceipt(this, transactionHash, returnFormat);\n            if (!response) throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param address The address to get the number of transactions for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions sent from the provided address.\n     *\n     * ```ts\n     * web3.eth.getTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */ getTransactionCount(address, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionCount(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The {@link Transaction}, {@link TransactionWithFromLocalWalletIndex}, {@link TransactionWithToLocalWalletIndex} or {@link TransactionWithFromAndToLocalWalletIndex} to send. __Note:__ In the `to` and `from` fields when hex strings are used, it is assumed they are addresses, for any other form (number, string number, etc.) it is assumed they are wallet indexes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the `sendTransaction` method.\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const transaction = {\n     *   from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *   to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *   value: '0x1'\n     * }\n     *\n     * const transactionHash = await web3.eth.sendTransaction(transaction);\n     * console.log(transactionHash);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     *\n     * web3.eth.sendTransaction(transaction).then(console.log);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     *\n     * web3.eth.sendTransaction(transaction).catch(console.log);\n     * > <Some TransactionError>\n     *\n     * // Example using options.ignoreGasPricing = true\n     * web3.eth.sendTransaction(transaction, undefined, { ignoreGasPricing: true }).then(console.log);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > {\n     *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *    value: '0x1',\n     *    gasPrice: '0x77359400',\n     *    maxPriorityFeePerGas: undefined,\n     *    maxFeePerGas: undefined\n     * }\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > {\n     *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *    value: '0x1',\n     *    gasPrice: '0x77359400',\n     *    maxPriorityFeePerGas: undefined,\n     *    maxFeePerGas: undefined\n     * }\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *     confirmations: 1n,\n     *     receipt: {\n     *         transactionHash: '0xb4a3a35ae0f3e77ef0ff7be42010d948d011b21a4e341072ee18717b67e99ab8',\n     *         transactionIndex: 0n,\n     *         blockNumber: 5n,\n     *         blockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548',\n     *         from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *         to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *         cumulativeGasUsed: 21000n,\n     *         gasUsed: 21000n,\n     *         logs: [],\n     *         logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *         status: 1n,\n     *         effectiveGasPrice: 2000000000n,\n     *         type: 0n\n     *     },\n     *     latestBlockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('error', error => console.log);\n     * > <Some TransactionError>\n     * ```\n     */ sendTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT, options) {\n        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendTransaction(this, transaction, returnFormat, options);\n    }\n    /**\n     * @param transaction Signed transaction in one of the valid {@link Bytes} format.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the method\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const signedTransaction = \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     *\n     * const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction);\n     * console.log(transactionHash);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).then(console.log);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).catch(console.log);\n     * > <Some TransactionError>\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *      blockNumber: 1n,\n     *      cumulativeGasUsed: 21000n,\n     *      effectiveGasPrice: 1000000001n,\n     *      from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *      transactionIndex: 0n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *     confirmations: 1n,\n     *     receipt: {\n     *          blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *          blockNumber: 1n,\n     *          cumulativeGasUsed: 21000n,\n     *          effectiveGasPrice: 1000000001n,\n     *          from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          gasUsed: 21000n,\n     *          logs: [],\n     *          logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *          status: 1n,\n     *          to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *          transactionIndex: 0n,\n     *          type: 0n\n     *     },\n     *     latestBlockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('error', error => console.log(error));\n     * > <Some TransactionError>\n     * ```\n     */ sendSignedTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT, options) {\n        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendSignedTransaction(this, transaction, returnFormat, options);\n    }\n    /**\n     * @param message Data to sign in one of the valid {@link Bytes} format.\n     * @param address Address to sign data with, can be an address or the index of a local wallet.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The signed `message`.\n     *\n     * ```ts\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\").then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     *\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.UINT8ARRAY }).then(console.log);\n     * > Uint8Array(65) [\n     *    48, 117,  94, 214,  83, 150, 250, 207, 134, 197,  62,\n     *    98,  23, 197,  43,  77, 174, 190, 114, 170,  73,  65,\n     *   216, 150,  53,  64, 157, 228, 201, 199, 249,  70, 109,\n     *    78, 154, 174, 199, 151, 127,   5, 233,  35, 136, 155,\n     *    51, 192, 208, 221,  39, 215,  34, 107, 110, 111,  86,\n     *   206, 115, 116, 101, 197, 207, 208,  75, 228,   0\n     * ]\n     * ```\n     *\n     * // Using an indexed account managed by local Web3 wallet\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", 0).then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     */ sign(message, addressOrIndex, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sign(this, message, addressOrIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The transaction object to sign.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns {@link SignedTransactionInfoAPI}, an object containing the [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n     *\n     * ```ts\n     * const transaction = {\n     *      from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      value: '0x1',\n     *      gas: '21000',\n     *      gasPrice: await web3Eth.getGasPrice(),\n     *      nonce: '0x1',\n     *      type: '0x0'\n     * }\n     *\n     * web3.eth.signTransaction(transaction).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0n,\n     *      nonce: 1n,\n     *      gasPrice: 1000000001n,\n     *      gas: 21000n,\n     *      value: 1n,\n     *      v: 2710n,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     *\n     * web3.eth.signTransaction(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0,\n     *      nonce: 1,\n     *      gasPrice: 1000000001,\n     *      gas: 21000,\n     *      value: 1,\n     *      v: 2710,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     * ```\n     */ signTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTransaction(this, transaction, returnFormat);\n        });\n    }\n    // TODO Decide what to do with transaction.to\n    // https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n    /**\n     * Executes a message call within the EVM without creating a transaction.\n     * It does not publish anything to the blockchain and does not consume any gas.\n     *\n     * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The returned data of the call, e.g. a smart contract function's return value.\n     */ call(transaction, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.call(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Simulates the transaction within the EVM to estimate the amount of gas to be used by the transaction.\n     * The transaction will not be added to the blockchain, and actual gas usage can vary when interacting\n     * with a contract as a result of updating the contract's state.\n     *\n     * @param transaction The {@link Transaction} object to estimate the gas for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The used gas for the simulated transaction execution.\n     *\n     * ```ts\n     * const transaction = {\n     *       from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       value: '0x1',\n     *       nonce: '0x1',\n     *       type: '0x0'\n     * }\n     *\n     * web3.eth.estimateGas(transaction).then(console.log);\n     * > 21000n\n     *\n     * web3.eth.estimateGas(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 21000\n     * ```\n     */ estimateGas(transaction, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.estimateGas(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Gets past logs, matching the provided `filter`.\n     *\n     * @param filter A {@link Filter} object containing the properties for the desired logs.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n     *\n     * ```ts\n     * web3.eth.getPastLogs({\n     *      address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *      topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *  }).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0n,\n     *       transactionIndex: 0n,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234n,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     *\n     * web3.eth.getPastLogs(\n     *     {\n     *       address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *       topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *     },\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0,\n     *       transactionIndex: 0,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     * ```\n     */ getPastLogs(filter, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getLogs(this, filter, returnFormat);\n        });\n    }\n    /**\n     * Gets work for miners to mine on. Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').\n     *\n     * @returns The mining work as an array of strings with the following structure:\n     *\n     * String 32 Bytes - at index 0: current block header pow-hash\n     * String 32 Bytes - at index 1: the seed hash used for the DAG.\n     * String 32 Bytes - at index 2: the boundary condition ('target'), 2^256 / difficulty.\n     *\n     * ```ts\n     * web3.eth.getWork().then(console.log);\n     * > [\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n     *     \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n     * ]\n     * ```\n     */ getWork() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getWork(this.requestManager);\n        });\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce The nonce found (8 bytes).\n     * @param hash  The header’s pow-hash (32 bytes).\n     * @param digest The mix digest (32 bytes).\n     * @returns Returns `true` if the provided solution is valid, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.submitWork([\n     *     \"0x0000000000000001\",\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"\n     * ]).then(console.log);\n     * > true\n     * ```\n     */ submitWork(nonce, hash, digest) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.submitWork(this.requestManager, nonce, hash, digest);\n        });\n    }\n    // TODO - Format addresses\n    /**\n     * This method will request/enable the accounts from the current environment and for supporting [EIP 1102](https://eips.ethereum.org/EIPS/eip-1102)\n     * This method will only work if you’re using the injected provider from a application like Metamask, Status or TrustWallet.\n     * It doesn’t work if you’re connected to a node with a default Web3.js provider (WebsocketProvider, HttpProvider and IpcProvider).\n     * For more information about the behavior of this method please read [EIP-1102](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md): Opt-in account exposure.\n     *\n     * @returns An array of enabled accounts.\n     *\n     * ```ts\n     * web3.eth.requestAccounts().then(console.log);\n     * > ['0aae0B295369a9FD31d5F28D9Ec85E40f4cb692BAf', '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe']\n     * ```\n     */ requestAccounts() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.requestAccounts(this.requestManager);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The chain ID of the current connected node as described in the [EIP-695](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-695.md).\n     *\n     * ```ts\n     * web3.eth.getChainId().then(console.log);\n     * > 61n\n     *\n     * web3.eth.getChainId({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 61\n     * ```\n     */ getChainId(returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getChainId(this, returnFormat);\n        });\n    }\n    /**\n     * @returns The current client version.\n     *\n     * ```ts\n     * web3.eth.getNodeInfo().then(console.log);\n     * > \"Mist/v0.9.3/darwin/go1.4.1\"\n     * ```\n     */ getNodeInfo() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getNodeInfo(this.requestManager);\n        });\n    }\n    /**\n     * @param address The Address of the account or contract.\n     * @param storageKeys Array of storage-keys which should be proofed and included. See {@link web3.getStorageAt}.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The account and storage-values of the specified account including the Merkle-proof as described in [EIP-1186](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1186.md).\n     *\n     * ```ts\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     \"latest\"\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0n,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0n,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     *\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     * ```\n     */ getProof(address, storageKeys, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getProof(this, address, storageKeys, blockNumber, returnFormat);\n        });\n    }\n    // TODO Throwing an error with Geth, but not Infura\n    // TODO gasUsedRatio and reward not formatting\n    /**\n     * @param blockCount Number of blocks in the requested range. Between `1` and `1024` blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n     * @param newestBlock Highest number block of the requested range.\n     * @param rewardPercentiles A monotonically increasing list of percentile values to sample from each block’s effective priority fees per gas in ascending order, weighted by gas used. Example: `['0', '25', '50', '75', '100']` or `['0', '0.5', '1', '1.5', '3', '80']`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns `baseFeePerGas` and transaction effective `priorityFeePerGas` history for the requested block range if available.\n     * The range between `headBlock - 4` and `headBlock` is guaranteed to be available while retrieving data from the `pending` block and older history are optional to support.\n     * For pre-EIP-1559 blocks the `gasPrice`s are returned as `rewards` and zeroes are returned for the `baseFeePerGas`.\n     *\n     * ```ts\n     * web3.eth.getFeeHistory(4, 'pending', [0, 25, 75, 100]).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621n,\n     *         21417903463n,\n     *         19989260230n,\n     *         17770954829n,\n     *         18850641304n\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343n,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     *\n     * web3.eth.getFeeHistory(4, BlockTags.LATEST, [0, 25, 75, 100], { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621,\n     *         21417903463,\n     *         19989260230,\n     *         17770954829,\n     *         18850641304\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     * ```\n     */ getFeeHistory(blockCount, newestBlock = this.defaultBlock, rewardPercentiles, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getFeeHistory(this, blockCount, newestBlock, rewardPercentiles, returnFormat);\n        });\n    }\n    /**\n     * This method generates an access list for a transaction.\n     *\n     * @param transaction - A transaction object where all properties are optional except `from`, however it's recommended to include the `to` property.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the createAccessList should be formatted.\n     * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n     * @example\n     * ```ts\n     * web3.eth.createAccessList({\n     * from: '0xDe95305a63302C3aa4d3A9B42654659AeA72b694',\n     * data: '0x9a67c8b100000000000000000000000000000000000000000000000000000000000004d0',\n     * gasPrice: '0x3b9aca00',\n     * gas: '0x3d0900',\n     * to: '0x940b25304947ae863568B3804434EC77E2160b87'\n     * })\n     * .then(console.log);\n     *\n     * > {\n     *  \"accessList\": [\n     *     {\n     *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n     *       \"storageKeys\": [\n     *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n     *       ]\n     *     }\n     *   ],\n     *   \"gasUsed\": \"0x7671\"\n     * }\n     * ```\n     */ createAccessList(transaction, blockNumber = this.defaultBlock, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.createAccessList(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * This method sends EIP-712 typed data to the RPC provider to be signed.\n     *\n     * @param address The address that corresponds with the private key used to sign the typed data.\n     * @param typedData The EIP-712 typed data object.\n     * @param useLegacy A boolean flag determining whether the RPC call uses the legacy method `eth_signTypedData` or the newer method `eth_signTypedData_v4`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the signed typed data should be formatted.\n     * @returns The signed typed data.\n     */ signTypedData(address, typedData, useLegacy = false, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTypedData(this, address, typedData, useLegacy, returnFormat);\n        });\n    }\n    /**\n    * Lets you subscribe to specific events in the blockchain.\n    *\n    * @param name - The subscription you want to subscribe to.\n    * @param args - Optional additional parameters, depending on the subscription type.\n    * @returns A subscription object of type {@link RegisteredSubscription}. The object contains:\n    *  - subscription.id: The subscription id, used to identify and unsubscribing the subscription.\n    *  - subscription.subscribe(): Can be used to re-subscribe with the same parameters.\n    *  - subscription.unsubscribe(): Unsubscribes the subscription and returns TRUE in the callback if successful.\n    *  - subscription.args: The subscription arguments, used when re-subscribing.\n    *\n    *\n    * You can use the subscription object to listen on:\n    *\n    * - on(\"data\") - Fires on each incoming log with the log object as argument.\n    * - on(\"changed\") - Fires on each log which was removed from the blockchain. The log will have the additional property \"removed: true\".\n    * - on(\"error\") - Fires when an error in the subscription occurs.\n    * - on(\"connected\") - Fires once after the subscription successfully connected. Returns the subscription id.\n    *\n    * @example **Subscribe to Smart Contract events**\n    * ```ts\n    * // Subscribe to `logs`\n    * const logSubscription = web3.eth.subscribe('logs', {\n    *     address: '0x1234567890123456789012345678901234567890',\n    *     topics: ['0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234']\n    * });\n    * logSubscription.on('data', (data: any) => console.log(data));\n    * logSubscription.on('error', (error: any) => console.log(error));\n    *\n    * ```\n    *\n    * @example **Subscribe to new block headers**\n    * ```ts\n    * // Subscribe to `newBlockHeaders`\n    * const newBlocksSubscription = await web3.eth.subscribe('newBlockHeaders');\n    *\n    * newBlocksSubscription.on('data', async blockhead => {\n    * \tconsole.log('New block header: ', blockhead);\n    *\n    * \t// You do not need the next line, if you like to keep notified for every new block\n    * \tawait newBlocksSubscription.unsubscribe();\n    * \tconsole.log('Unsubscribed from new block headers.');\n    * });\n    * newBlocksSubscription.on('error', error =>\n    * \tconsole.log('Error when subscribing to New block header: ', error),\n    * );\n    * ```\n    *\n    * \t### subscribe('pendingTransactions')\n    *\n    * Subscribes to incoming pending transactions.\n    * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n    *\n    * ```ts\n    * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n    * ```\n    *\n    * ### subscribe('newHeads')\n    * ( same as subscribe('newBlockHeaders'))\n    * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n    *\n    * The structure of a returned block header is {@link BlockHeaderOutput}:\n    *\n    * ```ts\n    * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n    *  'data',\n    * console.log\n    * );\n    * >{\n    * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n    * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n    * miner: '0x0000000000000000000000000000000000000000',\n    * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n    * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n    * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    * difficulty: 2n,\n    * number: 21n,\n    * gasLimit: 11738125n,\n    * gasUsed: 830006n,\n    * timestamp: 1678797237n,\n    * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n    * nonce: 0n\n    * }\n    * ```\n    *\n    * ### subscribe('syncing')\n    * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n    *\n    * ```ts\n    * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n    * > `true` // when syncing\n    *\n    * (await web3.eth.subscribe('syncing')).on('data', console.log);\n    * > {\n    *      startingBlock: 0,\n    *      currentBlock: 0,\n    *      highestBlock: 0,\n    *      pulledStates: 0,\n    *      knownStates: 0\n    *   }\n    * ```\n    *\n    * ### subscribe('logs', options)\n    * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n    *\n    * options: You can subscribe to logs matching a given filter object, which can take the following parameters:\n    * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n    * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n    * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n    *\n    * ```ts\n    *  (await web3.eth.subscribe('logs', {\n    *    address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n    *   })).on('data', console.log);\n    *\n    * > {\n    * removed: false,\n    * logIndex: 119n,\n    * transactionIndex: 58n,\n    * transactionHash: '0x61533efa77937360215069d5d6cb0be09a22af9721e6dc3df59d957833ed8870',\n    * blockHash: '0xe32bb97084479d32247f66f8b46d00af2fbc3c2db2bc6e5843fe2e4d1ca9b099',\n    * blockNumber: 18771966n,\n    * address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n    * data: '0x00000000000000000000000000000000000000000000000000000000d88b2e40',\n    * topics: [\n    * '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n    * '0x0000000000000000000000002fb2457f6ec1865dc0d4e7300c696b69c2a1b989',\n    * '0x00000000000000000000000027fd43babfbe83a81d14665b1a6fb8030a60c9b4'\n    * ]\n    * }\n    *```\n    */ subscribe(name, args, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const subscription = yield (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe(name, args, returnFormat);\n            if (subscription instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.LogsSubscription && name === \"logs\" && typeof args === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(args.fromBlock) && Number.isFinite(Number(args.fromBlock))) {\n                setImmediate(()=>{\n                    this.getPastLogs(args).then((logs)=>{\n                        for (const log of logs){\n                            subscription._processSubscriptionResult(log);\n                        }\n                    }).catch((e)=>{\n                        subscription._processSubscriptionError(e);\n                    });\n                });\n            }\n            return subscription;\n        });\n    }\n    static shouldClearSubscription({ sub }) {\n        return !(sub instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.SyncingSubscription);\n    }\n    /**\n     * Resets subscriptions.\n     *\n     * @param notClearSyncing If `true` it keeps the `syncing` subscription.\n     * @returns A promise to an array of subscription ids that were cleared.\n     *\n     * ```ts\n     * web3.eth.clearSubscriptions().then(console.log);\n     * > [...] An array of subscription ids that were cleared\n     * ```\n     */ clearSubscriptions(notClearSyncing = false) {\n        var _a;\n        return (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.unsubscribe(// eslint-disable-next-line\n        notClearSyncing ? Web3Eth.shouldClearSubscription : undefined);\n    }\n} //# sourceMappingURL=web3_eth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_subscriptions.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogsSubscription: () => (/* binding */ LogsSubscription),\n/* harmony export */   NewHeadsSubscription: () => (/* binding */ NewHeadsSubscription),\n/* harmony export */   NewPendingTransactionsSubscription: () => (/* binding */ NewPendingTransactionsSubscription),\n/* harmony export */   SyncingSubscription: () => (/* binding */ SyncingSubscription)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /* eslint-disable-next-line max-classes-per-file */ \n\n\n/**\n * ## subscribe('logs')\n * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n *\n * You can subscribe to logs matching a given filter object, which can take the following parameters:\n * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n *\n */ class LogsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    _buildSubscriptionParams() {\n        return [\n            \"logs\",\n            this.args\n        ];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.logSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('pendingTransactions')\n * Subscribes to incoming pending transactions.\n *\n * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n * @example\n * ```ts\n * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n * ```\n */ class NewPendingTransactionsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return [\n            \"newPendingTransactions\"\n        ];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({\n            format: \"string\"\n        }, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('newHeads') ( same as subscribe('newBlockHeaders'))\n *\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n *\n * The structure of a returned block header is {@link BlockHeaderOutput}:\n * @example\n * ```ts\n * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n *  'data',\n * console.log\n * );\n * >{\n * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n * miner: '0x0000000000000000000000000000000000000000',\n * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n * difficulty: 2n,\n * number: 21n,\n * gasLimit: 11738125n,\n * gasUsed: 830006n,\n * timestamp: 1678797237n,\n * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n * nonce: 0n\n * }\n * ```\n */ class NewHeadsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return [\n            \"newHeads\"\n        ];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.blockHeaderSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('syncing')\n *\n * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n * @example\n * ```ts\n * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n * > `true` // when syncing\n *\n * (await web3.eth.subscribe('syncing')).on('data', console.log);\n * > {\n *      startingBlock: 0,\n *      currentBlock: 0,\n *      highestBlock: 0,\n *      pulledStates: 0,\n *      knownStates: 0\n *   }\n * ```\n */ class SyncingSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return [\n            \"syncing\"\n        ];\n    }\n    _processSubscriptionResult(data) {\n        if (typeof data === \"boolean\") {\n            this.emit(\"changed\", data);\n        } else {\n            const mappedData = Object.fromEntries(Object.entries(data.status).map(([key, value])=>[\n                    key.charAt(0).toLowerCase() + key.substring(1),\n                    value\n                ]));\n            this.emit(\"changed\", data.syncing);\n            this.emit(\"data\", (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.syncSchema, mappedData, super.returnFormat));\n        }\n    }\n} //# sourceMappingURL=web3_subscriptions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\n");

/***/ })

};
;