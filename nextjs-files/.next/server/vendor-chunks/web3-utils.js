"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-utils";
exports.ids = ["vendor-chunks/web3-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/chunk_response_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* binding */ ChunkResponseParser)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n\nclass ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect){\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n        this.chunkTimout = 1000 * 15;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === \"function\") {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, \"}|--|{\") // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g, \"}]|--|[{\") // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g, \"}|--|[{\") // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g, \"}]|--|{\") // }]{\n        .split(\"|--|\");\n        dechunkedData.forEach((_chunkData)=>{\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            } catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(()=>{\n                    if (this.autoReconnect) return;\n                    this.clearQueues();\n                    this.eventEmitter.emit(\"error\", new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        error: {\n                            code: 2,\n                            message: \"Chunk timeout\"\n                        }\n                    }));\n                }, this.chunkTimout);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result) returnValues.push(result);\n        });\n        return returnValues;\n    }\n} //# sourceMappingURL=chunk_response_parser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxNQUFNQztJQUNUQyxZQUFZQyxZQUFZLEVBQUVDLGFBQWEsQ0FBRTtRQUNyQyxJQUFJLENBQUNELFlBQVksR0FBR0E7UUFDcEIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO1FBQ3JCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLE9BQU87SUFDOUI7SUFDQUMsY0FBYztRQUNWLElBQUksT0FBTyxJQUFJLENBQUNDLFlBQVksS0FBSyxZQUFZO1lBQ3pDLElBQUksQ0FBQ0EsWUFBWTtRQUNyQjtJQUNKO0lBQ0FDLFFBQVFGLFdBQVcsRUFBRTtRQUNqQixJQUFJLENBQUNDLFlBQVksR0FBR0Q7SUFDeEI7SUFDQUcsY0FBY0MsSUFBSSxFQUFFO1FBQ2hCLE1BQU1DLGVBQWUsRUFBRTtRQUN2QixhQUFhO1FBQ2IsTUFBTUMsZ0JBQWdCRixLQUNqQkcsT0FBTyxDQUFDLGdCQUFnQixVQUFVLEtBQUs7U0FDdkNBLE9BQU8sQ0FBQyxvQkFBb0IsWUFBWSxPQUFPO1NBQy9DQSxPQUFPLENBQUMsa0JBQWtCLFdBQVcsTUFBTTtTQUMzQ0EsT0FBTyxDQUFDLGtCQUFrQixXQUFXLE1BQU07U0FDM0NDLEtBQUssQ0FBQztRQUNYRixjQUFjRyxPQUFPLENBQUNDLENBQUFBO1lBQ2xCLHlCQUF5QjtZQUN6QixJQUFJQyxZQUFZRDtZQUNoQixJQUFJLElBQUksQ0FBQ0UsU0FBUyxFQUFFO2dCQUNoQkQsWUFBWSxJQUFJLENBQUNDLFNBQVMsR0FBR0Q7WUFDakM7WUFDQSxJQUFJRTtZQUNKLElBQUk7Z0JBQ0FBLFNBQVNDLEtBQUtDLEtBQUssQ0FBQ0o7WUFDeEIsRUFDQSxPQUFPSyxHQUFHO2dCQUNOLElBQUksQ0FBQ0osU0FBUyxHQUFHRDtnQkFDakIsdUNBQXVDO2dCQUN2QyxJQUFJLElBQUksQ0FBQ00sZ0JBQWdCLEVBQUU7b0JBQ3ZCQyxhQUFhLElBQUksQ0FBQ0QsZ0JBQWdCO2dCQUN0QztnQkFDQSxJQUFJLENBQUNBLGdCQUFnQixHQUFHRSxXQUFXO29CQUMvQixJQUFJLElBQUksQ0FBQ3JCLGFBQWEsRUFDbEI7b0JBQ0osSUFBSSxDQUFDRSxXQUFXO29CQUNoQixJQUFJLENBQUNILFlBQVksQ0FBQ3VCLElBQUksQ0FBQyxTQUFTLElBQUkxQiw2REFBb0JBLENBQUM7d0JBQ3JEMkIsSUFBSTt3QkFDSkMsU0FBUzt3QkFDVEMsT0FBTzs0QkFBRUMsTUFBTTs0QkFBR0MsU0FBUzt3QkFBZ0I7b0JBQy9DO2dCQUNKLEdBQUcsSUFBSSxDQUFDMUIsV0FBVztnQkFDbkI7WUFDSjtZQUNBLHVDQUF1QztZQUN2Q21CLGFBQWEsSUFBSSxDQUFDRCxnQkFBZ0I7WUFDbEMsSUFBSSxDQUFDTCxTQUFTLEdBQUdjO1lBQ2pCLElBQUliLFFBQ0FSLGFBQWFzQixJQUFJLENBQUNkO1FBQzFCO1FBQ0EsT0FBT1I7SUFDWDtBQUNKLEVBQ0EsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9jaHVua19yZXNwb25zZV9wYXJzZXIuanM/YTU4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnZhbGlkUmVzcG9uc2VFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmV4cG9ydCBjbGFzcyBDaHVua1Jlc3BvbnNlUGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcihldmVudEVtaXR0ZXIsIGF1dG9SZWNvbm5lY3QpIHtcbiAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIgPSBldmVudEVtaXR0ZXI7XG4gICAgICAgIHRoaXMuYXV0b1JlY29ubmVjdCA9IGF1dG9SZWNvbm5lY3Q7XG4gICAgICAgIHRoaXMuY2h1bmtUaW1vdXQgPSAxMDAwICogMTU7XG4gICAgfVxuICAgIGNsZWFyUXVldWVzKCkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuX2NsZWFyUXVldWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGVhclF1ZXVlcygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uRXJyb3IoY2xlYXJRdWV1ZXMpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJRdWV1ZXMgPSBjbGVhclF1ZXVlcztcbiAgICB9XG4gICAgcGFyc2VSZXNwb25zZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHJldHVyblZhbHVlcyA9IFtdO1xuICAgICAgICAvLyBERS1DSFVOS0VSXG4gICAgICAgIGNvbnN0IGRlY2h1bmtlZERhdGEgPSBkYXRhXG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9W1xcblxccl0/XFx7L2csICd9fC0tfHsnKSAvLyB9e1xuICAgICAgICAgICAgLnJlcGxhY2UoL1xcfVxcXVtcXG5cXHJdP1xcW1xcey9nLCAnfV18LS18W3snKSAvLyB9XVt7XG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9W1xcblxccl0/XFxbXFx7L2csICd9fC0tfFt7JykgLy8gfVt7XG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9XFxdW1xcblxccl0/XFx7L2csICd9XXwtLXx7JykgLy8gfV17XG4gICAgICAgICAgICAuc3BsaXQoJ3wtLXwnKTtcbiAgICAgICAgZGVjaHVua2VkRGF0YS5mb3JFYWNoKF9jaHVua0RhdGEgPT4ge1xuICAgICAgICAgICAgLy8gcHJlcGVuZCB0aGUgbGFzdCBjaHVua1xuICAgICAgICAgICAgbGV0IGNodW5rRGF0YSA9IF9jaHVua0RhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5sYXN0Q2h1bmspIHtcbiAgICAgICAgICAgICAgICBjaHVua0RhdGEgPSB0aGlzLmxhc3RDaHVuayArIGNodW5rRGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCByZXN1bHQ7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoY2h1bmtEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0Q2h1bmsgPSBjaHVua0RhdGE7XG4gICAgICAgICAgICAgICAgLy8gc3RhcnQgdGltZW91dCB0byBjYW5jZWwgYWxsIHJlcXVlc3RzXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGFzdENodW5rVGltZW91dCkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0Q2h1bmtUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmF1dG9SZWNvbm5lY3QpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdCgnZXJyb3InLCBuZXcgSW52YWxpZFJlc3BvbnNlRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBqc29ucnBjOiAnMi4wJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiB7IGNvZGU6IDIsIG1lc3NhZ2U6ICdDaHVuayB0aW1lb3V0JyB9LFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSwgdGhpcy5jaHVua1RpbW91dCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY2FuY2VsIHRpbWVvdXQgYW5kIHNldCBjaHVuayB0byBudWxsXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KTtcbiAgICAgICAgICAgIHRoaXMubGFzdENodW5rID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaWYgKHJlc3VsdClcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZXMucHVzaChyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVua19yZXNwb25zZV9wYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbIkludmFsaWRSZXNwb25zZUVycm9yIiwiQ2h1bmtSZXNwb25zZVBhcnNlciIsImNvbnN0cnVjdG9yIiwiZXZlbnRFbWl0dGVyIiwiYXV0b1JlY29ubmVjdCIsImNodW5rVGltb3V0IiwiY2xlYXJRdWV1ZXMiLCJfY2xlYXJRdWV1ZXMiLCJvbkVycm9yIiwicGFyc2VSZXNwb25zZSIsImRhdGEiLCJyZXR1cm5WYWx1ZXMiLCJkZWNodW5rZWREYXRhIiwicmVwbGFjZSIsInNwbGl0IiwiZm9yRWFjaCIsIl9jaHVua0RhdGEiLCJjaHVua0RhdGEiLCJsYXN0Q2h1bmsiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJlIiwibGFzdENodW5rVGltZW91dCIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJlbWl0IiwiaWQiLCJqc29ucnBjIiwiZXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsInVuZGVmaW5lZCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/converters.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/converters.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asciiToHex: () => (/* binding */ asciiToHex),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* binding */ bytesToUint8Array),\n/* harmony export */   ethUnitMap: () => (/* binding */ ethUnitMap),\n/* harmony export */   fromAscii: () => (/* binding */ fromAscii),\n/* harmony export */   fromDecimal: () => (/* binding */ fromDecimal),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   fromWei: () => (/* binding */ fromWei),\n/* harmony export */   hexToAscii: () => (/* binding */ hexToAscii),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* binding */ hexToNumberString),\n/* harmony export */   hexToString: () => (/* binding */ hexToString),\n/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),\n/* harmony export */   numberToHex: () => (/* binding */ numberToHex),\n/* harmony export */   stringToHex: () => (/* binding */ stringToHex),\n/* harmony export */   toAscii: () => (/* binding */ toAscii),\n/* harmony export */   toBigInt: () => (/* binding */ toBigInt),\n/* harmony export */   toBool: () => (/* binding */ toBool),\n/* harmony export */   toChecksumAddress: () => (/* binding */ toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* binding */ toDecimal),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   toWei: () => (/* binding */ toWei),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n\n\n\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */ const ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt(\"1000000000000000000\"),\n    kether: BigInt(\"1000000000000000000000\"),\n    grand: BigInt(\"1000000000000000000000\"),\n    mether: BigInt(\"1000000000000000000000000\"),\n    gether: BigInt(\"1000000000000000000000000000\"),\n    tether: BigInt(\"1000000000000000000000000000000\")\n};\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */ const bytesToUint8Array = (data)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"bytes\"\n    ], [\n        data\n    ]);\n    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data)) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === \"string\") {\n        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(data);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBytesError(data);\n};\n/**\n * @internal\n */ const { uint8ArrayToHexString } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */ const bytesToHex = (bytes)=>uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */ const hexToBytes = (bytes)=>{\n    if (typeof bytes === \"string\" && bytes.slice(0, 2).toLowerCase() !== \"0x\") {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */ const hexToNumber = (value)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"hex\"\n    ], [\n        value\n    ]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */ const toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */ const numberToHex = (value, hexstrict)=>{\n    if (typeof value !== \"bigint\") web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith(\"-\") && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependancy we will not be using the padLeft method\n            updatedValue = \"0x0\".concat(updatedValue.slice(2));\n        } else if (updatedValue.length % 2 === 0 && updatedValue.startsWith(\"-\")) updatedValue = \"-0x0\".concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */ const fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */ const hexToNumberString = (data)=>hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */ const utf8ToHex = (str)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"string\"\n    ], [\n        str\n    ]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, \"\");\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, \"\");\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */ const fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */ const stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */ const hexToUtf8 = (str)=>(0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */ const toUtf8 = (input)=>{\n    if (typeof input === \"string\") {\n        return hexToUtf8(input);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"bytes\"\n    ], [\n        input\n    ]);\n    return (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(input);\n};\nconst utf8ToBytes = ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes;\n/**\n * @alias hexToUtf8\n */ const hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */ const asciiToHex = (str)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"string\"\n    ], [\n        str\n    ]);\n    let hexString = \"\";\n    for(let i = 0; i < str.length; i += 1){\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */ const fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */ const hexToAscii = (str)=>{\n    const decoder = new TextDecoder(\"ascii\");\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */ const toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */ const toHex = (value, returnType)=>{\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n        return returnType ? \"address\" : `0x${value.toLowerCase().replace(/^0x/i, \"\")}`;\n    }\n    if (typeof value === \"boolean\") {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? \"bool\" : value ? \"0x01\" : \"0x00\";\n    }\n    if (typeof value === \"number\") {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? value < 0 ? \"int256\" : \"uint256\" : numberToHex(value);\n    }\n    if (typeof value === \"bigint\") {\n        return returnType ? \"bigint\" : numberToHex(value);\n    }\n    if (typeof value === \"object\" && !!value) {\n        return returnType ? \"string\" : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === \"string\") {\n        if (value.startsWith(\"-0x\") || value.startsWith(\"-0X\")) {\n            return returnType ? \"int256\" : numberToHex(value);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n            return returnType ? \"bytes\" : value;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            return returnType ? \"bytes\" : `0x${value}`;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            return returnType ? \"uint\" : numberToHex(value);\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? \"string\" : utf8ToHex(value);\n        }\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */ const toNumber = (value)=>{\n    if (typeof value === \"number\") {\n        return value;\n    }\n    if (typeof value === \"bigint\") {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER ? Number(value) : value;\n    }\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    } catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */ const toBigInt = (value)=>{\n    if (typeof value === \"number\") {\n        return BigInt(value);\n    }\n    if (typeof value === \"bigint\") {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {\n        if (value.startsWith(\"-\")) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */ const fromWei = (number, unit)=>{\n    const denomination = ethUnitMap[unit];\n    if (!denomination) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, \"0\");\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, \"\");\n    if (integer === \"\") {\n        return `0.${fraction}`;\n    }\n    if (fraction === \"\") {\n        return integer;\n    }\n    return `${integer}.${fraction}`;\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */ // todo in 1.x unit defaults to 'ether'\nconst toWei = (number, unit)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"number\"\n    ], [\n        number\n    ]);\n    const denomination = ethUnitMap[unit];\n    if (!denomination) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof number === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(number) ? number : toNumber(number)).split(\".\").concat(\"\");\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // count number of zeros in denomination\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    // check which either `fraction` or `denomination` have lower number of zeros\n    const decimals = Math.min(fraction.length, numberOfZerosInDenomination);\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // Add zeros to make length equal to required decimal points\n    // If string is larger than decimal points required then remove last zeros\n    return updatedValue.toString().padStart(decimals, \"0\").slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */ const toChecksumAddress = (address)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, false)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, \"\");\n    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n    // \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n    const hash = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(hash) || hash === \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\") return \"\"; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = \"0x\";\n    const addressHash = hash.replace(/^0x/i, \"\");\n    for(let i = 0; i < lowerCaseAddress.length; i += 1){\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        } else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nconst toBool = (value)=>{\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"number\" && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === \"bigint\" && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === \"1\" || value === \"0\" || value === \"false\" || value === \"true\")) {\n        if (value === \"true\") {\n            return true;\n        }\n        if (value === \"false\") {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === \"0x1\" || value === \"0x0\")) {\n        return Boolean(toNumber(value));\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBooleanError(value);\n}; //# sourceMappingURL=converters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/converters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/event_emitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /* eslint-disable max-classes-per-file */ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst wrapFunction = (fn)=>(params)=>fn(params.detail);\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */ class EventEmitterAtBrowser extends EventTarget {\n    constructor(){\n        super(...arguments);\n        this._listeners = {};\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    on(eventName, fn) {\n        this.addEventListener(eventName, fn);\n        return this;\n    }\n    once(eventName, fn) {\n        const onceCallback = (params)=>__awaiter(this, void 0, void 0, function*() {\n                this.off(eventName, onceCallback);\n                yield fn(params);\n            });\n        return this.on(eventName, onceCallback);\n    }\n    off(eventName, fn) {\n        this.removeEventListener(eventName, fn);\n        return this;\n    }\n    emit(eventName, params) {\n        const event = new CustomEvent(eventName, {\n            detail: params\n        });\n        return super.dispatchEvent(event);\n    }\n    listenerCount(eventName) {\n        const eventListeners = this._listeners[eventName];\n        return eventListeners ? eventListeners.length : 0;\n    }\n    listeners(eventName) {\n        return this._listeners[eventName].map((value)=>value[0]) || [];\n    }\n    eventNames() {\n        return Object.keys(this._listeners);\n    }\n    removeAllListeners() {\n        Object.keys(this._listeners).forEach((event)=>{\n            this._listeners[event].forEach((listener)=>{\n                super.removeEventListener(event, listener[1]);\n            });\n        });\n        this._listeners = {};\n        return this;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n    addEventListener(eventName, fn) {\n        const wrappedFn = wrapFunction(fn);\n        super.addEventListener(eventName, wrappedFn);\n        if (!this._listeners[eventName]) {\n            this._listeners[eventName] = [];\n        }\n        this._listeners[eventName].push([\n            fn,\n            wrappedFn\n        ]);\n    }\n    removeEventListener(eventName, fn) {\n        const eventListeners = this._listeners[eventName];\n        if (eventListeners) {\n            const index = eventListeners.findIndex((item)=>item[0] === fn);\n            if (index !== -1) {\n                super.removeEventListener(eventName, eventListeners[index][1]);\n                eventListeners.splice(index, 1);\n            }\n        }\n    }\n}\n// eslint-disable-next-line import/no-mutable-exports\nlet EventEmitterType;\n// Check if the code is running in a Node.js environment\nif (true) {\n    EventEmitterType = events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter;\n} else {}\nclass EventEmitter extends EventEmitterType {\n} //# sourceMappingURL=event_emitter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertScalarValue: () => (/* binding */ convertScalarValue),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   isDataFormat: () => (/* binding */ isDataFormat)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\nconst { parseBaseType } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\nconst isDataFormat = (dataFormat)=>typeof dataFormat === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(dataFormat) && \"number\" in dataFormat && \"bytes\" in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */ const findSchemaByDataPath = (schema, dataPath, oneOfPath = [])=>{\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath){\n        if (result.oneOf && previousDataPath) {\n            const path = oneOfPath.find(function(element) {\n                return this === element[0];\n            }, previousDataPath !== null && previousDataPath !== void 0 ? previousDataPath : \"\");\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        } else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            if (!node) {\n                return undefined;\n            }\n            result = node[dataPart];\n        } else if (result.items && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(result.items)) {\n            result = result.items;\n        } else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart) previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */ const convertScalarValue = (value, ethType, format)=>{\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === \"int\" || baseType === \"uint\") {\n            switch(format.number){\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.NUMBER:\n                    return Number((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.STR:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value).toString();\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.BIGINT:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === \"bytes\") {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === \"string\") paddedValue = (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.padLeft)(value, baseTypeSize * 2);\n                else if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.isUint8Array)(value)) {\n                    paddedValue = (0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayConcat)(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            } else {\n                paddedValue = value;\n            }\n            switch(format.bytes){\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.UINT8ARRAY:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n    } catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */ const convert = (data, schema, dataPath, format, oneOfPath = [])=>{\n    var _a, _b;\n    // If it's a scalar value\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    for (const [key, value] of Object.entries(object)){\n        dataPath.push(key);\n        const schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n        // If value is a scaler value\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(schemaProp)) {\n            delete object[key];\n            dataPath.pop();\n            continue;\n        }\n        // If value is an object, recurse into it\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(value)) {\n            convert(value, schema, dataPath, format);\n            dataPath.pop();\n            continue;\n        }\n        // If value is an array\n        if (Array.isArray(value)) {\n            let _schemaProp = schemaProp;\n            // TODO This is a naive approach to solving the issue of\n            // a schema using oneOf. This chunk of code was intended to handle\n            // BlockSchema.transactions\n            // TODO BlockSchema.transactions are not being formatted\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                // The following code is basically saying:\n                // if the schema specifies oneOf, then we are to loop\n                // over each possible schema and check if they type of the schema\n                // matches the type of value[0], and if so we use the oneOfSchemaProp\n                // as the schema for formatting\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                schemaProp.oneOf.forEach((oneOfSchemaProp, index)=>{\n                    var _a, _b;\n                    if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) && (typeof value[0] === \"object\" && ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === \"object\" || typeof value[0] === \"string\" && ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== \"object\")) {\n                        _schemaProp = oneOfSchemaProp;\n                        oneOfPath.push([\n                            key,\n                            index\n                        ]);\n                    }\n                });\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n                // Can not find schema for array item, delete that item\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array items is a single type\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(_schemaProp.items) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp.items.format)) {\n                for(let i = 0; i < value.length; i += 1){\n                    object[key][i] = convertScalarValue(value[i], // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n                }\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array items is an object\n            if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === \"object\") {\n                for (const arrObject of value){\n                    convert(arrObject, schema, dataPath, format, oneOfPath);\n                }\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array is a tuple\n            if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n                for(let i = 0; i < value.length; i += 1){\n                    object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n                }\n                dataPath.pop();\n                continue;\n            }\n        }\n        object[key] = convertScalarValue(value, schemaProp.format, format);\n        dataPath.pop();\n    }\n    return object;\n};\nconst format = (schema, data, returnFormat)=>{\n    let dataToParse;\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data)) {\n        dataToParse = (0,_objects_js__WEBPACK_IMPORTED_MODULE_4__.mergeDeep)({}, data);\n    } else if (Array.isArray(data)) {\n        dataToParse = [\n            ...data\n        ];\n    } else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(schema) ? schema : web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(\"Invalid json schema for formatting\");\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n}; //# sourceMappingURL=formatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/hash.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacked: () => (/* binding */ encodePacked),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* binding */ getStorageSlotNumForLongString),\n/* harmony export */   keccak256: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   keccak256Wrapper: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* binding */ processSolidityEncodePackedArgs),\n/* harmony export */   sha3: () => (/* binding */ sha3),\n/* harmony export */   sha3Raw: () => (/* binding */ sha3Raw),\n/* harmony export */   soliditySha3: () => (/* binding */ soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* binding */ soliditySha3Raw)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */ \n\n\n\n\n\nconst SHA3_EMPTY_BYTES = \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\";\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */ const sha3 = (data)=>{\n    let updatedData;\n    if (typeof data === \"string\") {\n        if (data.startsWith(\"0x\") && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n            updatedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(data);\n        } else {\n            updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n        }\n    } else {\n        updatedData = data;\n    }\n    const hash = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_3__.utils.ensureIfUint8Array(updatedData)));\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */ const sha3Raw = (data)=>{\n    const hash = sha3(data);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */ const keccak256Wrapper = (data)=>{\n    let processedData;\n    if (typeof data === \"bigint\" || typeof data === \"number\") {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data.toString());\n    } else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    } else if (typeof data === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n    } else {\n        processedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    }\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_3__.utils.ensureIfUint8Array(processedData)));\n};\n\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */ const getType = (arg)=>{\n    if (Array.isArray(arg)) {\n        throw new Error(\"Autodetection of array types is not supported.\");\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === \"object\" && (\"t\" in arg || \"type\" in arg) && (\"v\" in arg || \"value\" in arg)) {\n        type = \"t\" in arg ? arg.t : arg.type;\n        value = \"v\" in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === \"bigint\" ? \"int\" : type;\n    } else if (typeof arg === \"bigint\") {\n        return [\n            \"int\",\n            arg\n        ];\n    } else {\n        type = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg, true);\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg);\n        if (!type.startsWith(\"int\") && !type.startsWith(\"uint\")) {\n            type = \"bytes\";\n        }\n    }\n    if ((type.startsWith(\"int\") || type.startsWith(\"uint\")) && typeof value === \"string\" && !/^(-)?0x/i.test(value)) {\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toBigInt)(value);\n    }\n    return [\n        type,\n        value\n    ];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */ const elementaryName = (name)=>{\n    if (name.startsWith(\"int[\")) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === \"int\") {\n        return \"int256\";\n    }\n    if (name.startsWith(\"uint[\")) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === \"uint\") {\n        return \"uint256\";\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */ const parseTypeN = (value, typeLength)=>{\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */ const bitLength = (value)=>{\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */ const solidityPack = (type, val)=>{\n    const value = val.toString();\n    if (type === \"string\") {\n        if (typeof val === \"string\") return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(val);\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidStringError(val);\n    }\n    if (type === \"bool\" || type === \"boolean\") {\n        if (typeof val === \"boolean\") return val ? \"01\" : \"00\";\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBooleanError(val);\n    }\n    if (type === \"address\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith(\"uint\")) {\n        const size = parseTypeN(name, \"uint\".length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(value);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidUnsignedIntegerError(value);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 8 * 2) : num.toString(16);\n    }\n    if (type.startsWith(\"int\")) {\n        const size = parseTypeN(name, \"int\".length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(type);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.toTwosComplement)(num.toString(), size / 8 * 2);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === \"bytes\") {\n        if (value.replace(/^0x/i, \"\").length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith(\"bytes\")) {\n        if (value.replace(/^0x/i, \"\").length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, \"bytes\".length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, \"\").length / 2) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.rightPad)(value, size * 2);\n    }\n    return \"\";\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */ const processSolidityEncodePackedArgs = (arg)=>{\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v)=>solidityPack(type, v).replace(\"0x\", \"\"));\n        return hexArg.join(\"\");\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace(\"0x\", \"\");\n};\n/**\n * Encode packed arguments to a hexstring\n */ const encodePacked = (...values)=>{\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join(\"\").toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */ const soliditySha3 = (...values)=>sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */ const soliditySha3Raw = (...values)=>sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */ const getStorageSlotNumForLongString = (mainSlotNumber)=>sha3(`0x${(typeof mainSlotNumber === \"number\" ? mainSlotNumber.toString() : mainSlotNumber).padStart(64, \"0\")}`); //# sourceMappingURL=hash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/hash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* reexport safe */ _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__.ChunkResponseParser),\n/* harmony export */   Eip1193Provider: () => (/* reexport safe */ _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__.Eip1193Provider),\n/* harmony export */   EventEmitter: () => (/* reexport safe */ _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   SocketProvider: () => (/* reexport safe */ _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__.SocketProvider),\n/* harmony export */   Web3DeferredPromise: () => (/* reexport safe */ _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__.Web3DeferredPromise),\n/* harmony export */   asciiToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.asciiToHex),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUint8Array),\n/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.compareBlockNumbers),\n/* harmony export */   convert: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convert),\n/* harmony export */   convertScalarValue: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convertScalarValue),\n/* harmony export */   encodePacked: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.encodePacked),\n/* harmony export */   ethUnitMap: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.ethUnitMap),\n/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),\n/* harmony export */   fromAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromAscii),\n/* harmony export */   fromDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromDecimal),\n/* harmony export */   fromTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.fromTwosComplement),\n/* harmony export */   fromUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromUtf8),\n/* harmony export */   fromWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromWei),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.getStorageSlotNumForLongString),\n/* harmony export */   hexToAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToAscii),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes),\n/* harmony export */   hexToNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumberString),\n/* harmony export */   hexToString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToString),\n/* harmony export */   hexToUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToUtf8),\n/* harmony export */   isAddress: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isAddress),\n/* harmony export */   isBatchRequest: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchResponse),\n/* harmony export */   isBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions),\n/* harmony export */   isDataFormat: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.isDataFormat),\n/* harmony export */   isHex: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHex),\n/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHexStrict),\n/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),\n/* harmony export */   isNullish: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isNullish),\n/* harmony export */   isPromise: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isPromise),\n/* harmony export */   isResponseRpcError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isSubscriptionResult),\n/* harmony export */   isTopic: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopic),\n/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopicInBloom),\n/* harmony export */   isUint8Array: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.isUint8Array),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),\n/* harmony export */   isValidResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isValidResponse),\n/* harmony export */   jsonRpc: () => (/* reexport module object */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   keccak256: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256),\n/* harmony export */   keccak256Wrapper: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256Wrapper),\n/* harmony export */   leftPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.leftPad),\n/* harmony export */   mergeDeep: () => (/* reexport safe */ _objects_js__WEBPACK_IMPORTED_MODULE_7__.mergeDeep),\n/* harmony export */   numberToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex),\n/* harmony export */   padLeft: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padLeft),\n/* harmony export */   padRight: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padRight),\n/* harmony export */   pollTillDefined: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefinedAndReturnIntervalId),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.processSolidityEncodePackedArgs),\n/* harmony export */   randomBytes: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomBytes),\n/* harmony export */   randomHex: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomHex),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfTimeout),\n/* harmony export */   rightPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.rightPad),\n/* harmony export */   setRequestIdStart: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.setRequestIdStart),\n/* harmony export */   sha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3),\n/* harmony export */   sha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3Raw),\n/* harmony export */   soliditySha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3Raw),\n/* harmony export */   stringToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.stringToHex),\n/* harmony export */   toAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toAscii),\n/* harmony export */   toBatchPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toBatchPayload),\n/* harmony export */   toBigInt: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBigInt),\n/* harmony export */   toBool: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBool),\n/* harmony export */   toChecksumAddress: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toDecimal),\n/* harmony export */   toHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toHex),\n/* harmony export */   toNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toNumber),\n/* harmony export */   toPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toPayload),\n/* harmony export */   toTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.toTwosComplement),\n/* harmony export */   toUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toUtf8),\n/* harmony export */   toWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toWei),\n/* harmony export */   uint8ArrayConcat: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayEquals),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex),\n/* harmony export */   uuidV4: () => (/* reexport safe */ _uuid_js__WEBPACK_IMPORTED_MODULE_12__.uuidV4),\n/* harmony export */   validateResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.validateResponse),\n/* harmony export */   waitWithTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_emitter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\");\n/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/hash.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./promise_helpers.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./socket_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDZ0M7QUFDRztBQUNIO0FBQ0Q7QUFDTDtBQUNFO0FBQ2E7QUFDWjtBQUNRO0FBQ1A7QUFDVztBQUNFO0FBQ0E7QUFDakI7QUFDaUI7QUFDTjtBQUNMLENBQ2hDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vaW5kZXguanM/OTFjZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmV4cG9ydCAqIGZyb20gJy4vY29udmVydGVycy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2V2ZW50X2VtaXR0ZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi92YWxpZGF0aW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZm9ybWF0dGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGFzaC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3JhbmRvbS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3N0cmluZ19tYW5pcHVsYXRpb24uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9vYmplY3RzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vcHJvbWlzZV9oZWxwZXJzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vanNvbl9ycGMuanMnO1xuZXhwb3J0ICogYXMganNvblJwYyBmcm9tICcuL2pzb25fcnBjLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViM19kZWZlcnJlZF9wcm9taXNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY2h1bmtfcmVzcG9uc2VfcGFyc2VyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXVpZC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3NvY2tldF9wcm92aWRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3VpbnQ4YXJyYXkuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImpzb25ScGMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/json_rpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBatchRequest: () => (/* binding */ isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* binding */ isBatchResponse),\n/* harmony export */   isResponseRpcError: () => (/* binding */ isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* binding */ isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* binding */ isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* binding */ isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* binding */ isSubscriptionResult),\n/* harmony export */   isValidResponse: () => (/* binding */ isValidResponse),\n/* harmony export */   setRequestIdStart: () => (/* binding */ setRequestIdStart),\n/* harmony export */   toBatchPayload: () => (/* binding */ toBatchPayload),\n/* harmony export */   toPayload: () => (/* binding */ toPayload),\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n// check if code is a valid rpc server error code\nconst isResponseRpcError = (rpcError)=>{\n    const errorCode = rpcError.error.code;\n    return web3_errors__WEBPACK_IMPORTED_MODULE_1__.rpcErrorsMap.has(errorCode) || errorCode >= -32099 && errorCode <= -32000;\n};\nconst isResponseWithResult = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && // JSON RPC consider \"null\" as valid response\n    \"result\" in response && (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.error) && (typeof response.id === \"number\" || typeof response.id === \"string\");\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nconst isResponseWithError = (response)=>!Array.isArray(response) && response.jsonrpc === \"2.0\" && !!response && (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.result) && // JSON RPC consider \"null\" as valid response\n    \"error\" in response && (typeof response.id === \"number\" || typeof response.id === \"string\");\nconst isResponseWithNotification = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.params) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.method);\nconst isSubscriptionResult = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && \"id\" in response && // JSON RPC consider \"null\" as valid response\n    \"result\" in response;\nconst validateResponse = (response)=>isResponseWithResult(response) || isResponseWithError(response);\nconst isValidResponse = (response)=>Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nconst isBatchResponse = (response)=>Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number staring from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */ const setRequestIdStart = (start)=>{\n    requestIdSeed = start;\n};\nconst toPayload = (request)=>{\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== \"undefined\") {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : \"2.0\",\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : (0,_uuid_js__WEBPACK_IMPORTED_MODULE_2__.uuidV4)(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined\n    };\n};\nconst toBatchPayload = (requests)=>requests.map((request)=>toPayload(request));\nconst isBatchRequest = (request)=>Array.isArray(request) && request.length > 0; //# sourceMappingURL=json_rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/objects.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/objects.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\nconst isIterable = (item)=>typeof item === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && !Array.isArray(item) && !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */ const mergeDeep = (destination, ...sources)=>{\n    const result = destination; // clone deep here\n    if (!isIterable(result)) {\n        return result;\n    }\n    for (const src of sources){\n        // eslint-disable-next-line no-restricted-syntax\n        for(const key in src){\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                mergeDeep(result[key], src[key]);\n            } else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray) {\n                    result[key] = src[key].slice(0);\n                } else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n}; //# sourceMappingURL=objects.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3dDO0FBQ0c7QUFDM0MsTUFBTUUsYUFBYSxDQUFDQyxPQUFTLE9BQU9BLFNBQVMsWUFDekMsQ0FBQ0YseURBQVNBLENBQUNFLFNBQ1gsQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDRixTQUNmLENBQUVBLENBQUFBLGdCQUFnQkgsa0RBQVM7QUFDL0IsMEZBQTBGO0FBQzFGLDRDQUE0QztBQUM1Qzs7Ozs7Q0FLQyxHQUNNLE1BQU1NLFlBQVksQ0FBQ0MsYUFBYSxHQUFHQztJQUN0QyxNQUFNQyxTQUFTRixhQUFhLGtCQUFrQjtJQUM5QyxJQUFJLENBQUNMLFdBQVdPLFNBQVM7UUFDckIsT0FBT0E7SUFDWDtJQUNBLEtBQUssTUFBTUMsT0FBT0YsUUFBUztRQUN2QixnREFBZ0Q7UUFDaEQsSUFBSyxNQUFNRyxPQUFPRCxJQUFLO1lBQ25CLElBQUlSLFdBQVdRLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHO2dCQUN0QixJQUFJLENBQUNGLE1BQU0sQ0FBQ0UsSUFBSSxFQUFFO29CQUNkRixNQUFNLENBQUNFLElBQUksR0FBRyxDQUFDO2dCQUNuQjtnQkFDQUwsVUFBVUcsTUFBTSxDQUFDRSxJQUFJLEVBQUVELEdBQUcsQ0FBQ0MsSUFBSTtZQUNuQyxPQUNLLElBQUksQ0FBQ1YseURBQVNBLENBQUNTLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLQyxPQUFPQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osS0FBS0MsTUFBTTtnQkFDbkUsSUFBSVAsTUFBTUMsT0FBTyxDQUFDSyxHQUFHLENBQUNDLElBQUksS0FBS0QsR0FBRyxDQUFDQyxJQUFJLFlBQVlYLGtEQUFVQSxFQUFFO29CQUMzRFMsTUFBTSxDQUFDRSxJQUFJLEdBQUdELEdBQUcsQ0FBQ0MsSUFBSSxDQUFDSSxLQUFLLENBQUM7Z0JBQ2pDLE9BQ0s7b0JBQ0ROLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHRCxHQUFHLENBQUNDLElBQUk7Z0JBQzFCO1lBQ0o7UUFDSjtJQUNKO0lBQ0EsT0FBT0Y7QUFDWCxFQUFFLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLWZpbGVzLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9vYmplY3RzLmpzPzJkZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBUeXBlZEFycmF5IH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5jb25zdCBpc0l0ZXJhYmxlID0gKGl0ZW0pID0+IHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJlxuICAgICFpc051bGxpc2goaXRlbSkgJiZcbiAgICAhQXJyYXkuaXNBcnJheShpdGVtKSAmJlxuICAgICEoaXRlbSBpbnN0YW5jZW9mIFR5cGVkQXJyYXkpO1xuLy8gVGhlIGZvbGxvd2luZyBjb2RlIGlzIGEgZGVyaXZhdGl2ZSB3b3JrIG9mIHRoZSBjb2RlIGZyb20gdGhlIFwiTGlza0hRL2xpc2stc2RrXCIgcHJvamVjdCxcbi8vIHdoaWNoIGlzIGxpY2Vuc2VkIHVuZGVyIEFwYWNoZSB2ZXJzaW9uIDIuXG4vKipcbiAqIERlZXAgbWVyZ2UgdHdvIG9iamVjdHMuXG4gKiBAcGFyYW0gZGVzdGluYXRpb24gLSBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICogQHBhcmFtIHNvdXJjZXMgLSBBbiBhcnJheSBvZiBzb3VyY2Ugb2JqZWN0cy5cbiAqIEByZXR1cm5zIC0gVGhlIG1lcmdlZCBvYmplY3QuXG4gKi9cbmV4cG9ydCBjb25zdCBtZXJnZURlZXAgPSAoZGVzdGluYXRpb24sIC4uLnNvdXJjZXMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBkZXN0aW5hdGlvbjsgLy8gY2xvbmUgZGVlcCBoZXJlXG4gICAgaWYgKCFpc0l0ZXJhYmxlKHJlc3VsdCkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzcmMgb2Ygc291cmNlcykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gc3JjKSB7XG4gICAgICAgICAgICBpZiAoaXNJdGVyYWJsZShzcmNba2V5XSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0ge307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1lcmdlRGVlcChyZXN1bHRba2V5XSwgc3JjW2tleV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoIWlzTnVsbGlzaChzcmNba2V5XSkgJiYgT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwoc3JjLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3JjW2tleV0pIHx8IHNyY1trZXldIGluc3RhbmNlb2YgVHlwZWRBcnJheSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHNyY1trZXldLnNsaWNlKDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBzcmNba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3RzLmpzLm1hcCJdLCJuYW1lcyI6WyJUeXBlZEFycmF5IiwiaXNOdWxsaXNoIiwiaXNJdGVyYWJsZSIsIml0ZW0iLCJBcnJheSIsImlzQXJyYXkiLCJtZXJnZURlZXAiLCJkZXN0aW5hdGlvbiIsInNvdXJjZXMiLCJyZXN1bHQiLCJzcmMiLCJrZXkiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/objects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/promise_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   pollTillDefined: () => (/* binding */ pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* binding */ pollTillDefinedAndReturnIntervalId),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* binding */ rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* binding */ rejectIfTimeout),\n/* harmony export */   waitWithTimeout: () => (/* binding */ waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */ function isPromise(object) {\n    return (typeof object === \"object\" || typeof object === \"function\") && // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    typeof object.then === \"function\";\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */ function waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject)=>{\n                timeoutId = setTimeout(()=>error ? reject(error) : resolve(undefined), timeout);\n            })\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */ function pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject)=>{\n        intervalId = setInterval(function intervalCallbackFunc() {\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    try {\n                        const res = yield waitWithTimeout(func, interval);\n                        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(res)) {\n                            clearInterval(intervalId);\n                            resolve(res);\n                        }\n                    } catch (error) {\n                        clearInterval(intervalId);\n                        reject(error);\n                    }\n                }))();\n            return intervalCallbackFunc;\n        }() // this will immediate invoke first call\n        , interval);\n    });\n    return [\n        polledRes,\n        intervalId\n    ];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */ function pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */ function rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject)=>{\n        timeoutId = setTimeout(()=>{\n            reject(error);\n        }, timeout);\n    });\n    return [\n        timeoutId,\n        rejectOnTimeout\n    ];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/confition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */ function rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject)=>{\n        intervalId = setInterval(()=>{\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    const error = yield cond();\n                    if (error) {\n                        clearInterval(intervalId);\n                        reject(error);\n                    }\n                }))();\n        }, interval);\n    });\n    return [\n        intervalId,\n        rejectIfCondition\n    ];\n} //# sourceMappingURL=promise_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/random.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/random.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   randomHex: () => (/* binding */ randomHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/random.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/random.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */ const randomBytes = (size)=>(0,ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesSync)(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */ const randomHex = (byteSize)=>(0,_converters_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(randomBytes(byteSize)); //# sourceMappingURL=random.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0E7O0NBRUMsR0FDb0U7QUFDeEI7QUFDN0M7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ00sTUFBTUUsY0FBYyxDQUFDQyxPQUFTSCxtRkFBa0JBLENBQUNHLE1BQU07QUFDOUQ7Ozs7Ozs7OztDQVNDLEdBQ00sTUFBTUMsWUFBWSxDQUFDQyxXQUFhSiwwREFBVUEsQ0FBQ0MsWUFBWUcsV0FBVyxDQUN6RSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZmlsZXMvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcz83OTRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLyoqXG4gKiBAbW9kdWxlIFV0aWxzXG4gKi9cbmltcG9ydCB7IGdldFJhbmRvbUJ5dGVzU3luYyB9IGZyb20gJ2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9yYW5kb20uanMnO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCB9IGZyb20gJy4vY29udmVydGVycy5qcyc7XG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gYnl0ZSBhcnJheSBieSB0aGUgZ2l2ZW4gYnl0ZXMgc2l6ZVxuICogQHBhcmFtIHNpemUgLSBUaGUgc2l6ZSBvZiB0aGUgcmFuZG9tIGJ5dGUgYXJyYXkgcmV0dXJuZWRcbiAqIEByZXR1cm5zIC0gcmFuZG9tIGJ5dGUgYXJyYXlcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMucmFuZG9tQnl0ZXMoMzIpKTtcbiAqID4gVWludDhBcnJheSgzMikgW1xuICogICAgICAgOTMsIDE3MiwgMjI2LCAgMzIsICAzMywgMTc2LCAxNTYsIDE1NixcbiAqICAgICAgIDE4MiwgIDMwLCAyNDAsICAgMiwgIDY5LCAgOTYsIDE3NCwgMTk3LFxuICogICAgICAgMzMsIDEzNiwgMTk0LCAyNDEsIDE5NywgMTU2LCAxMTAsIDExMSxcbiAqICAgICAgIDY2LCAgODcsICAxNywgIDg4LCAgNjcsICA0OCwgMjQ1LCAxODNcbiAqICAgIF1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmFuZG9tQnl0ZXMgPSAoc2l6ZSkgPT4gZ2V0UmFuZG9tQnl0ZXNTeW5jKHNpemUpO1xuLyoqXG4gKiBSZXR1cm5zIGEgcmFuZG9tIGhleCBzdHJpbmcgYnkgdGhlIGdpdmVuIGJ5dGVzIHNpemVcbiAqIEBwYXJhbSBieXRlU2l6ZSAtIFRoZSBzaXplIG9mIHRoZSByYW5kb20gaGV4IHN0cmluZyByZXR1cm5lZFxuICogQHJldHVybnMgLSByYW5kb20gaGV4IHN0cmluZ1xuICpcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLnJhbmRvbUhleCgzMikpO1xuICogPiAweDEzOWY1Yjg4YjcyYTI1ZWFiMDUzZDNiNTdmZTFmOGE5ZGJjNjJhNTI2YjFjYjE3NzRkMGQ3ZGIxYzNlN2NlOWVcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmFuZG9tSGV4ID0gKGJ5dGVTaXplKSA9PiBieXRlc1RvSGV4KHJhbmRvbUJ5dGVzKGJ5dGVTaXplKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYW5kb20uanMubWFwIl0sIm5hbWVzIjpbImdldFJhbmRvbUJ5dGVzU3luYyIsImJ5dGVzVG9IZXgiLCJyYW5kb21CeXRlcyIsInNpemUiLCJyYW5kb21IZXgiLCJieXRlU2l6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/socket_provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nclass SocketProvider extends _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__.Eip1193Provider {\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */ constructor(socketPath, socketOptions, reconnectOptions){\n        super();\n        this._connectionStatus = \"connecting\";\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {});\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__.ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(()=>{\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */ connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = \"connecting\";\n            this._addSocketListeners();\n        } catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = \"disconnected\";\n                if (e && e.message) {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                } else {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(this._socketPath);\n                }\n            } else {\n                setImmediate(()=>{\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */ // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */ // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */ // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = \"disconnected\";\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */ disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== \"disconnected\") {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */ safeDisconnect(code, data, forceDisconnect = false, ms = 1000) {\n        return __awaiter(this, void 0, void 0, function*() {\n            let retryAttempt = 0;\n            const checkQueue = ()=>__awaiter(this, void 0, void 0, function*() {\n                    return new Promise((resolve)=>{\n                        const interval = setInterval(()=>{\n                            if (forceDisconnect && retryAttempt === 5) {\n                                this.clearQueues();\n                            }\n                            if (this.getPendingRequestQueueSize() === 0 && this.getSentRequestsQueueSize() === 0) {\n                                clearInterval(interval);\n                                resolve(true);\n                            }\n                            retryAttempt += 1;\n                        }, ms);\n                    });\n                });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */ removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        } else {\n            this._eventEmitter.emit(\"error\", event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */ reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(()=>{\n                this._removeSocketListeners();\n                this.connect();\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        } else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit(\"error\", new web3_errors__WEBPACK_IMPORTED_MODULE_0__.MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */ request(request) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this._socketConnection)) {\n                throw new Error(\"Connection is undefined\");\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === \"disconnected\") {\n                this.connect();\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchRequest(request) ? request[0].id : request.id;\n            if (!requestId) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3WSProviderError(\"Request Id not defined\");\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__.Web3DeferredPromise();\n            deferredPromise.catch((error)=>{\n                this._eventEmitter.emit(\"error\", error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise\n            };\n            if (this.getStatus() === \"connecting\") {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            } catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit(\"error\", error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = \"connected\";\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()){\n            this._sendToSocket(value.payload);\n            this._pendingRequestsQueue.delete(id);\n            this._sentRequestsQueue.set(id, value);\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses){\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithNotification(response) && response.method.endsWith(\"_subscription\")) {\n                this._eventEmitter.emit(\"message\", response);\n                return;\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) ? response[0].id : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) || _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithResult(response) || _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithError(response)) {\n                this._eventEmitter.emit(\"message\", response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n} //# sourceMappingURL=socket_provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/string_manipulation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromTwosComplement: () => (/* binding */ fromTwosComplement),\n/* harmony export */   leftPad: () => (/* binding */ leftPad),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   padRight: () => (/* binding */ padRight),\n/* harmony export */   rightPad: () => (/* binding */ rightPad),\n/* harmony export */   toTwosComplement: () => (/* binding */ toTwosComplement)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */ const padLeft = (value, characterAmount, sign = \"0\")=>{\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === \"string\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */ const padRight = (value, characterAmount, sign = \"0\")=>{\n    if (typeof value === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const hexString = typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) ? value : (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(value);\n    const prefixLength = hexString.startsWith(\"-\") ? 3 : 2;\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */ const rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */ const leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */ const toTwosComplement = (value, nibbleWidth = 64)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val >= 0) return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(val), nibbleWidth);\n    const largestBit = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */ const fromTwosComplement = (value, nibbleWidth = 64)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val < 0) return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4) throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit) return val;\n    const complement = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(BigInt(val) - complement);\n}; //# sourceMappingURL=string_manipulation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uint8array.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array),\n/* harmony export */   uint8ArrayConcat: () => (/* binding */ uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* binding */ uint8ArrayEquals)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ function isUint8Array(data) {\n    var _a;\n    return data instanceof Uint8Array || ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"Uint8Array\";\n}\nfunction uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part)=>{\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts){\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */ function uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for(let i = 0; i < a.byteLength; i += 1){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n} //# sourceMappingURL=uint8array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3VpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ08sU0FBU0EsYUFBYUMsSUFBSTtJQUM3QixJQUFJQztJQUNKLE9BQVFELGdCQUFnQkUsY0FDcEIsQ0FBQyxDQUFDRCxLQUFLRCxTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0csV0FBVyxNQUFNLFFBQVFGLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR0csSUFBSSxNQUFNO0FBQy9IO0FBQ08sU0FBU0MsaUJBQWlCLEdBQUdDLEtBQUs7SUFDckMsTUFBTUMsU0FBU0QsTUFBTUUsTUFBTSxDQUFDLENBQUNDLE1BQU1DO1FBQy9CLE1BQU1DLE1BQU1GLE9BQU9DLEtBQUtILE1BQU07UUFDOUIsT0FBT0k7SUFDWCxHQUFHO0lBQ0gsTUFBTUMsU0FBUyxJQUFJVixXQUFXSztJQUM5QixJQUFJTSxTQUFTO0lBQ2IsS0FBSyxNQUFNSCxRQUFRSixNQUFPO1FBQ3RCTSxPQUFPRSxHQUFHLENBQUNKLE1BQU1HO1FBQ2pCQSxVQUFVSCxLQUFLSCxNQUFNO0lBQ3pCO0lBQ0EsT0FBT0s7QUFDWDtBQUNBOztDQUVDLEdBQ00sU0FBU0csaUJBQWlCQyxDQUFDLEVBQUVDLENBQUM7SUFDakMsSUFBSUQsTUFBTUMsR0FBRztRQUNULE9BQU87SUFDWDtJQUNBLElBQUlELEVBQUVFLFVBQVUsS0FBS0QsRUFBRUMsVUFBVSxFQUFFO1FBQy9CLE9BQU87SUFDWDtJQUNBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxFQUFFRSxVQUFVLEVBQUVDLEtBQUssRUFBRztRQUN0QyxJQUFJSCxDQUFDLENBQUNHLEVBQUUsS0FBS0YsQ0FBQyxDQUFDRSxFQUFFLEVBQUU7WUFDZixPQUFPO1FBQ1g7SUFDSjtJQUNBLE9BQU87QUFDWCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vdWludDhhcnJheS5qcz9kMmU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVWludDhBcnJheShkYXRhKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHxcbiAgICAgICAgKChfYSA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpID09PSAnVWludDhBcnJheScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVpbnQ4QXJyYXlDb25jYXQoLi4ucGFydHMpIHtcbiAgICBjb25zdCBsZW5ndGggPSBwYXJ0cy5yZWR1Y2UoKHByZXYsIHBhcnQpID0+IHtcbiAgICAgICAgY29uc3QgYWdnID0gcHJldiArIHBhcnQubGVuZ3RoO1xuICAgICAgICByZXR1cm4gYWdnO1xuICAgIH0sIDApO1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhcnRzKSB7XG4gICAgICAgIHJlc3VsdC5zZXQocGFydCwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IHBhcnQubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHR3byBwYXNzZWQgVWludDhBcnJheXMgaGF2ZSB0aGUgc2FtZSBjb250ZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5RXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludDhhcnJheS5qcy5tYXAiXSwibmFtZXMiOlsiaXNVaW50OEFycmF5IiwiZGF0YSIsIl9hIiwiVWludDhBcnJheSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInVpbnQ4QXJyYXlDb25jYXQiLCJwYXJ0cyIsImxlbmd0aCIsInJlZHVjZSIsInByZXYiLCJwYXJ0IiwiYWdnIiwicmVzdWx0Iiwib2Zmc2V0Iiwic2V0IiwidWludDhBcnJheUVxdWFscyIsImEiLCJiIiwiYnl0ZUxlbmd0aCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uuid.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uuid.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuidV4: () => (/* binding */ uuidV4)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */ const uuidV4 = ()=>{\n    const bytes = (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */ bytes[6] = bytes[6] & 0x0f | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */ bytes[8] = bytes[8] & 0x3f | 0x80;\n    const hexString = (0,_converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34)\n    ].join(\"-\");\n}; //# sourceMappingURL=uuid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0E7O0NBRUMsR0FDNEM7QUFDSDtBQUMxQzs7Ozs7Ozs7O0NBU0MsR0FDTSxNQUFNRSxTQUFTO0lBQ2xCLE1BQU1DLFFBQVFGLHVEQUFXQSxDQUFDO0lBQzFCLGlJQUFpSTtJQUNqSSxrQkFBa0I7SUFDbEIsd0NBQXdDO0lBQ3hDLDRCQUE0QixHQUM1QkUsS0FBSyxDQUFDLEVBQUUsR0FBRyxLQUFNLENBQUMsRUFBRSxHQUFHLE9BQVE7SUFDL0IsY0FBYztJQUNkLHVDQUF1QztJQUN2Qyx1Q0FBdUM7SUFDdkMsNEJBQTRCLEdBQzVCQSxLQUFLLENBQUMsRUFBRSxHQUFHLEtBQU0sQ0FBQyxFQUFFLEdBQUcsT0FBUTtJQUMvQixNQUFNQyxZQUFZSiwwREFBVUEsQ0FBQ0c7SUFDN0IsT0FBTztRQUNIQyxVQUFVQyxTQUFTLENBQUMsR0FBRztRQUN2QkQsVUFBVUMsU0FBUyxDQUFDLElBQUk7UUFDeEJELFVBQVVDLFNBQVMsQ0FBQyxJQUFJO1FBQ3hCRCxVQUFVQyxTQUFTLENBQUMsSUFBSTtRQUN4QkQsVUFBVUMsU0FBUyxDQUFDLElBQUk7S0FDM0IsQ0FBQ0MsSUFBSSxDQUFDO0FBQ1gsRUFBRSxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1maWxlcy8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vdXVpZC5qcz9lMDI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLyoqXG4gKiBAbW9kdWxlIFV0aWxzXG4gKi9cbmltcG9ydCB7IGJ5dGVzVG9IZXggfSBmcm9tICcuL2NvbnZlcnRlcnMuanMnO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tICcuL3JhbmRvbS5qcyc7XG4vKipcbiAqIEdlbmVyYXRlIGEgdmVyc2lvbiA0IChyYW5kb20pIHV1aWRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9ibG9iL21haW4vc3JjL3Y0LmpzI0w1XG4gKiBAcmV0dXJucyAtIEEgdmVyc2lvbiA0IHV1aWQgb2YgdGhlIGZvcm0geHh4eHh4eHgteHh4eC00eHh4LXh4eHgteHh4eHh4eHh4eHh4XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMudXVpZFY0KCkpO1xuICogPiBcIjFiOWQ2YmNkLWJiZmQtNGIyZC05YjVkLWFiOGRmYmJkNGJlZFwiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHV1aWRWNCA9ICgpID0+IHtcbiAgICBjb25zdCBieXRlcyA9IHJhbmRvbUJ5dGVzKDE2KTtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJzLWlvL2V0aGVycy5qcy9ibG9iL2NlOGYxZTQwMTVjMGYyN2JmMTc4MjM4NzcwYjEzMjUxMzZlMzM1MWEvcGFja2FnZXMvanNvbi13YWxsZXRzL3NyYy50cy91dGlscy50cyNMNTRcbiAgICAvLyBTZWN0aW9uOiA0LjEuMzpcbiAgICAvLyAtIHRpbWVfaGlfYW5kX3ZlcnNpb25bMTI6MTZdID0gMGIwMTAwXG4gICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICovXG4gICAgYnl0ZXNbNl0gPSAoYnl0ZXNbNl0gJiAweDBmKSB8IDB4NDA7XG4gICAgLy8gU2VjdGlvbiA0LjRcbiAgICAvLyAtIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRbNl0gPSAwYjBcbiAgICAvLyAtIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRbN10gPSAwYjFcbiAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbiAgICBieXRlc1s4XSA9IChieXRlc1s4XSAmIDB4M2YpIHwgMHg4MDtcbiAgICBjb25zdCBoZXhTdHJpbmcgPSBieXRlc1RvSGV4KGJ5dGVzKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDIsIDEwKSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygxMCwgMTQpLFxuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDE0LCAxOCksXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMTgsIDIyKSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygyMiwgMzQpLFxuICAgIF0uam9pbignLScpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV1aWQuanMubWFwIl0sIm5hbWVzIjpbImJ5dGVzVG9IZXgiLCJyYW5kb21CeXRlcyIsInV1aWRWNCIsImJ5dGVzIiwiaGV4U3RyaW5nIiwic3Vic3RyaW5nIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/validation.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/validation.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* binding */ compareBlockNumbers),\n/* harmony export */   isAddress: () => (/* binding */ isAddress),\n/* harmony export */   isBloom: () => (/* binding */ isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* binding */ isContractInitOptions),\n/* harmony export */   isHex: () => (/* binding */ isHex),\n/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),\n/* harmony export */   isInBloom: () => (/* binding */ isInBloom),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   isTopic: () => (/* binding */ isTopic),\n/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isHexStrict = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isHex = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHex;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const checkAddressCheckSum = web3_validator__WEBPACK_IMPORTED_MODULE_1__.checkAddressCheckSum;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isAddress = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isInBloom;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isUserEthereumAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isContractAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isContractAddressInBloom;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isTopic = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopic;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isTopicInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopicInBloom;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */ const compareBlockNumbers = (blockA, blockB)=>{\n    const isABlockTag = typeof blockA === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockA);\n    const isBBlockTag = typeof blockB === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockB);\n    if (blockA === blockB || (blockA === \"earliest\" || blockA === 0) && (blockB === \"earliest\" || blockB === 0) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === \"earliest\" && blockB > 0) {\n        return -1;\n    }\n    if (blockB === \"earliest\" && blockA > 0) {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.EARLIEST]: 1,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.FINALIZED]: 2,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.SAFE]: 3,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST]: 4,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.PENDING]: 5\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if (isABlockTag && !isBBlockTag || !isABlockTag && isBBlockTag) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBlockError(\"Cannot compare blocktag with provided non-blocktag input.\");\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nconst isContractInitOptions = (options)=>typeof options === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(options) && Object.keys(options).length !== 0 && [\n        \"input\",\n        \"data\",\n        \"from\",\n        \"gas\",\n        \"gasPrice\",\n        \"gasLimit\",\n        \"address\",\n        \"jsonInterface\",\n        \"syncWithContext\",\n        \"dataInputFill\"\n    ].some((key)=>key in options);\nconst isNullish = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish; //# sourceMappingURL=validation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_deferred_promise.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3DeferredPromise: () => (/* binding */ Web3DeferredPromise)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\n\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */ class Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */ constructor({ timeout, eagerStart, timeoutMessage } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: \"DeferredPromise timed out\"\n    }){\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = \"Promise\";\n        this._state = \"pending\";\n        this._promise = new Promise((resolve, reject)=>{\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */ get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */ then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */ catch(// eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */ finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */ resolve(value) {\n        this._resolve(value);\n        this._state = \"fulfilled\";\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */ reject(reason) {\n        this._reject(reason);\n        this._state = \"rejected\";\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */ startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === \"pending\" && this._timeoutId) {\n            this.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag; //# sourceMappingURL=web3_deferred_promise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZGVmZXJyZWRfcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNBLElBQUlPO0FBQ2dEO0FBQ3BEOzs7O0NBSUMsR0FDTSxNQUFNRTtJQUNUOzs7OztLQUtDLEdBQ0RDLFlBQVksRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLGNBQWMsRUFBRyxHQUFHO1FBQ25ERixTQUFTO1FBQ1RDLFlBQVk7UUFDWkMsZ0JBQWdCO0lBQ3BCLENBQUMsQ0FBRTtRQUNDLDBEQUEwRDtRQUMxRCw4REFBOEQ7UUFDOUQsSUFBSSxDQUFDTixHQUFHLEdBQUc7UUFDWCxJQUFJLENBQUNPLE1BQU0sR0FBRztRQUNkLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUluQixRQUFRLENBQUNELFNBQVNFO1lBQ2xDLElBQUksQ0FBQ21CLFFBQVEsR0FBR3JCO1lBQ2hCLElBQUksQ0FBQ3NCLE9BQU8sR0FBR3BCO1FBQ25CO1FBQ0EsSUFBSSxDQUFDcUIsZUFBZSxHQUFHTDtRQUN2QixJQUFJLENBQUNNLGdCQUFnQixHQUFHUjtRQUN4QixJQUFJQyxZQUFZO1lBQ1osSUFBSSxDQUFDUSxVQUFVO1FBQ25CO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRCxJQUFJQyxRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUNQLE1BQU07SUFDdEI7SUFDQTs7Ozs7S0FLQyxHQUNEVCxLQUFLaUIsV0FBVyxFQUFFQyxVQUFVLEVBQUU7UUFDMUIsT0FBT25DLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsT0FBTyxJQUFJLENBQUMyQixRQUFRLENBQUNWLElBQUksQ0FBQ2lCLGFBQWFDO1FBQzNDO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RDLE1BQ0EsOERBQThEO0lBQzlERCxVQUFVLEVBQUU7UUFDUixPQUFPbkMsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxPQUFPLElBQUksQ0FBQzJCLFFBQVEsQ0FBQ1MsS0FBSyxDQUFDRDtRQUMvQjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNERSxRQUFRQyxTQUFTLEVBQUU7UUFDZixPQUFPdEMsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxPQUFPLElBQUksQ0FBQzJCLFFBQVEsQ0FBQ1UsT0FBTyxDQUFDQztRQUNqQztJQUNKO0lBQ0E7OztLQUdDLEdBQ0QvQixRQUFRRCxLQUFLLEVBQUU7UUFDWCxJQUFJLENBQUNzQixRQUFRLENBQUN0QjtRQUNkLElBQUksQ0FBQ29CLE1BQU0sR0FBRztRQUNkLElBQUksQ0FBQ2EsYUFBYTtJQUN0QjtJQUNBOzs7S0FHQyxHQUNEOUIsT0FBTytCLE1BQU0sRUFBRTtRQUNYLElBQUksQ0FBQ1gsT0FBTyxDQUFDVztRQUNiLElBQUksQ0FBQ2QsTUFBTSxHQUFHO1FBQ2QsSUFBSSxDQUFDYSxhQUFhO0lBQ3RCO0lBQ0E7O0tBRUMsR0FDRFAsYUFBYTtRQUNULElBQUksSUFBSSxDQUFDRCxnQkFBZ0IsSUFBSSxJQUFJLENBQUNBLGdCQUFnQixHQUFHLEdBQUc7WUFDcEQsSUFBSSxDQUFDVSxVQUFVLEdBQUdDLFdBQVcsSUFBSSxDQUFDQyxhQUFhLENBQUNDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDYixnQkFBZ0I7UUFDckY7SUFDSjtJQUNBWSxnQkFBZ0I7UUFDWixJQUFJLElBQUksQ0FBQ2pCLE1BQU0sS0FBSyxhQUFhLElBQUksQ0FBQ2UsVUFBVSxFQUFFO1lBQzlDLElBQUksQ0FBQ2hDLE1BQU0sQ0FBQyxJQUFJVyw4REFBcUJBLENBQUMsSUFBSSxDQUFDVSxlQUFlO1FBQzlEO0lBQ0o7SUFDQVMsZ0JBQWdCO1FBQ1osSUFBSSxJQUFJLENBQUNFLFVBQVUsRUFBRTtZQUNqQkksYUFBYSxJQUFJLENBQUNKLFVBQVU7UUFDaEM7SUFDSjtBQUNKO0FBQ0F0QixLQUFLMkIsT0FBT0MsV0FBVyxFQUN2QixpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZmlsZXMvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZGVmZXJyZWRfcHJvbWlzZS5qcz83MDMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX2E7XG5pbXBvcnQgeyBPcGVyYXRpb25UaW1lb3V0RXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG4vKipcbiAqIFRoZSBjbGFzcyBpcyBhIHNpbXBsZSBpbXBsZW1lbnRhdGlvbiBvZiBhIGRlZmVycmVkIHByb21pc2Ugd2l0aCBvcHRpb25hbCB0aW1lb3V0IGZ1bmN0aW9uYWxpdHksXG4gKiB3aGljaCBjYW4gYmUgdXNlZnVsIHdoZW4gZGVhbGluZyB3aXRoIGFzeW5jaHJvbm91cyB0YXNrcy5cbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBXZWIzRGVmZXJyZWRQcm9taXNlIHtcbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0aW1lb3V0IC0gKG9wdGlvbmFsKSBUaGUgdGltZW91dCBpbiBtaWxsaXNlY29uZHMuXG4gICAgICogQHBhcmFtIGVhZ2VyU3RhcnQgLSAob3B0aW9uYWwpIElmIHRydWUsIHRoZSB0aW1lciBzdGFydHMgYXMgc29vbiBhcyB0aGUgcHJvbWlzZSBpcyBjcmVhdGVkLlxuICAgICAqIEBwYXJhbSB0aW1lb3V0TWVzc2FnZSAtIChvcHRpb25hbCkgVGhlIG1lc3NhZ2UgdG8gaW5jbHVkZSBpbiB0aGUgdGltZW91dCBlcnJvIHRoYXQgaXMgdGhyb3duIHdoZW4gdGhlIHByb21pc2UgdGltZXMgb3V0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHsgdGltZW91dCwgZWFnZXJTdGFydCwgdGltZW91dE1lc3NhZ2UsIH0gPSB7XG4gICAgICAgIHRpbWVvdXQ6IDAsXG4gICAgICAgIGVhZ2VyU3RhcnQ6IGZhbHNlLFxuICAgICAgICB0aW1lb3V0TWVzc2FnZTogJ0RlZmVycmVkUHJvbWlzZSB0aW1lZCBvdXQnLFxuICAgIH0pIHtcbiAgICAgICAgLy8gcHVibGljIHRhZyB0byB0cmVhdCBvYmplY3QgYXMgcHJvbWlzZSBieSBkaWZmZXJlbnQgbGlic1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1hcy1jb25zdFxuICAgICAgICB0aGlzW19hXSA9ICdQcm9taXNlJztcbiAgICAgICAgdGhpcy5fc3RhdGUgPSAncGVuZGluZyc7XG4gICAgICAgIHRoaXMuX3Byb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgICAgIHRoaXMuX3JlamVjdCA9IHJlamVjdDtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3RpbWVvdXRNZXNzYWdlID0gdGltZW91dE1lc3NhZ2U7XG4gICAgICAgIHRoaXMuX3RpbWVvdXRJbnRlcnZhbCA9IHRpbWVvdXQ7XG4gICAgICAgIGlmIChlYWdlclN0YXJ0KSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0VGltZXIoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBwcm9taXNlLlxuICAgICAqIEByZXR1cm5zICdwZW5kaW5nJyB8ICdmdWxmaWxsZWQnIHwgJ3JlamVjdGVkJ1xuICAgICAqL1xuICAgIGdldCBzdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YXRlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvbmZ1bGZpbGxlZCAtIChvcHRpb25hbCkgVGhlIGNhbGxiYWNrIHRvIGV4ZWN1dGUgd2hlbiB0aGUgcHJvbWlzZSBpcyBmdWxmaWxsZWQuXG4gICAgICogQHBhcmFtIG9ucmVqZWN0ZWQgIC0gKG9wdGlvbmFsKSBUaGUgY2FsbGJhY2sgdG8gZXhlY3V0ZSB3aGVuIHRoZSBwcm9taXNlIGlzIHJlamVjdGVkLlxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgdGhlbihvbmZ1bGZpbGxlZCwgb25yZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Byb21pc2UudGhlbihvbmZ1bGZpbGxlZCwgb25yZWplY3RlZCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvbnJlamVjdGVkIC0gKG9wdGlvbmFsKSBUaGUgY2FsbGJhY2sgdG8gZXhlY3V0ZSB3aGVuIHRoZSBwcm9taXNlIGlzIHJlamVjdGVkLlxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgY2F0Y2goXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBvbnJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcHJvbWlzZS5jYXRjaChvbnJlamVjdGVkKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIG9uZmluYWxseSAtIChvcHRpb25hbCkgVGhlIGNhbGxiYWNrIHRvIGV4ZWN1dGUgd2hlbiB0aGUgcHJvbWlzZSBpcyBzZXR0bGVkIChmdWxmaWxsZWQgb3IgcmVqZWN0ZWQpLlxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgZmluYWxseShvbmZpbmFsbHkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wcm9taXNlLmZpbmFsbHkob25maW5hbGx5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc29sdmVzIHRoZSBjdXJyZW50IHByb21pc2UuXG4gICAgICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIHJlc29sdmUgdGhlIHByb21pc2Ugd2l0aC5cbiAgICAgKi9cbiAgICByZXNvbHZlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3Jlc29sdmUodmFsdWUpO1xuICAgICAgICB0aGlzLl9zdGF0ZSA9ICdmdWxmaWxsZWQnO1xuICAgICAgICB0aGlzLl9jbGVhclRpbWVvdXQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVqZWN0cyB0aGUgY3VycmVudCBwcm9taXNlLlxuICAgICAqIEBwYXJhbSByZWFzb24gLSBUaGUgcmVhc29uIHRvIHJlamVjdCB0aGUgcHJvbWlzZSB3aXRoLlxuICAgICAqL1xuICAgIHJlamVjdChyZWFzb24pIHtcbiAgICAgICAgdGhpcy5fcmVqZWN0KHJlYXNvbik7XG4gICAgICAgIHRoaXMuX3N0YXRlID0gJ3JlamVjdGVkJztcbiAgICAgICAgdGhpcy5fY2xlYXJUaW1lb3V0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyB0aGUgdGltZW91dCB0aW1lciBmb3IgdGhlIHByb21pc2UuXG4gICAgICovXG4gICAgc3RhcnRUaW1lcigpIHtcbiAgICAgICAgaWYgKHRoaXMuX3RpbWVvdXRJbnRlcnZhbCAmJiB0aGlzLl90aW1lb3V0SW50ZXJ2YWwgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0SWQgPSBzZXRUaW1lb3V0KHRoaXMuX2NoZWNrVGltZW91dC5iaW5kKHRoaXMpLCB0aGlzLl90aW1lb3V0SW50ZXJ2YWwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9jaGVja1RpbWVvdXQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gJ3BlbmRpbmcnICYmIHRoaXMuX3RpbWVvdXRJZCkge1xuICAgICAgICAgICAgdGhpcy5yZWplY3QobmV3IE9wZXJhdGlvblRpbWVvdXRFcnJvcih0aGlzLl90aW1lb3V0TWVzc2FnZSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9jbGVhclRpbWVvdXQoKSB7XG4gICAgICAgIGlmICh0aGlzLl90aW1lb3V0SWQpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0SWQpO1xuICAgICAgICB9XG4gICAgfVxufVxuX2EgPSBTeW1ib2wudG9TdHJpbmdUYWc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWIzX2RlZmVycmVkX3Byb21pc2UuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIl9hIiwiT3BlcmF0aW9uVGltZW91dEVycm9yIiwiV2ViM0RlZmVycmVkUHJvbWlzZSIsImNvbnN0cnVjdG9yIiwidGltZW91dCIsImVhZ2VyU3RhcnQiLCJ0aW1lb3V0TWVzc2FnZSIsIl9zdGF0ZSIsIl9wcm9taXNlIiwiX3Jlc29sdmUiLCJfcmVqZWN0IiwiX3RpbWVvdXRNZXNzYWdlIiwiX3RpbWVvdXRJbnRlcnZhbCIsInN0YXJ0VGltZXIiLCJzdGF0ZSIsIm9uZnVsZmlsbGVkIiwib25yZWplY3RlZCIsImNhdGNoIiwiZmluYWxseSIsIm9uZmluYWxseSIsIl9jbGVhclRpbWVvdXQiLCJyZWFzb24iLCJfdGltZW91dElkIiwic2V0VGltZW91dCIsIl9jaGVja1RpbWVvdXQiLCJiaW5kIiwiY2xlYXJUaW1lb3V0IiwiU3ltYm9sIiwidG9TdHJpbmdUYWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Eip1193Provider: () => (/* binding */ Eip1193Provider)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */ class Eip1193Provider extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider {\n    constructor(){\n        super(...arguments);\n        this._eventEmitter = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();\n        this._chainId = \"\";\n        this._accounts = [];\n    }\n    _getChainId() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: \"eth_chainId\",\n                params: []\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : \"\";\n        });\n    }\n    _getAccounts() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: \"eth_accounts\",\n                params: []\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId().then((chainId)=>{\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit(\"chainChanged\", this._chainId);\n                }\n            }).catch((err)=>{\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts().then((accounts)=>{\n                if (!(this._accounts.length === accounts.length && accounts.every((v)=>accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            }).catch((err)=>{\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            })\n        ]).then(()=>this._eventEmitter.emit(\"connect\", {\n                chainId: this._chainId\n            })).catch((err)=>{\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit(\"disconnect\", new web3_errors__WEBPACK_IMPORTED_MODULE_2__.EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit(\"accountsChanged\", this._accounts);\n    }\n} //# sourceMappingURL=web3_eip1193_provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\n");

/***/ })

};
;